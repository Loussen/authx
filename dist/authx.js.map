{"version":3,"sources":["Model.js","Strategy.js","errors.js","index.js","controllers/authorities.js","controllers/clients.js","controllers/credentials.js","controllers/grants.js","controllers/roles.js","controllers/session.js","controllers/teams.js","controllers/tokens.js","controllers/users.js","middleware/bearer.js","middleware/cors.js","middleware/db.js","middleware/error.js","middleware/user.js","models/Authority.js","models/Client.js","models/Credential.js","models/Grant.js","models/Role.js","models/Team.js","models/User.js","strategies/email.js","strategies/google.js","strategies/password.js","util/bcrypt.js","util/form.js","util/json.js","util/mailer.js","util/pool.js","util/protect.js","util/queryParams.js","util/route.js","util/scopes.js","util/validator.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAGY,MAAM;;;;;;AAElB,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;;AAEb,MAAM,KAAK,CAAC;;;;;AAO1B,YAAW,KAAK,GAAG;AAClB,QAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;EAChE;;AAID,QAAO,iBAAiB,CAAC,OAAO,EAAE;;;AAGjC,MAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,KAAK,CAAC,EAC3D,OAAO,IAAI,MAAM,CAAC,aAAa,CAAC,2CAA2C,CAAC,CAAC;;;AAAA,AAG9E,SAAO,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;EAC1B;;;AAAA,AAKD,QAAa,KAAK,CAAC,IAAI,EAAE,SAAS;;;MAG7B,MAAM;;;;AAFV,SAAI,CAAC,SAAS,EAAE,SAAS,GAAI,UAAA,CAAC;aAAI,CAAC;MAAA,AAAC,CAAC;;;qCAElB,SAAS,CAAC,oBAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAAvD,WAAM;;qCACK,MAAM,CAAC,OAAO,EAAE;;;AAA/B,WAAM;sCAEC,MAAM,CAAC,GAAG,CAAE,UAAA,MAAM;aAAI,UAAS,IAAI,EAAE,MAAM,CAAC;MAAA,CAAE;;;;;;;;;;AACrD,AAKD,QAAa,GAAG,CAAC,IAAI,EAAE,EAAE;MACpB,MAAM;;;;;qCAAS,oBAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAApD,WAAM;;SACN,MAAM;;;;;WACH,IAAI,MAAM,CAAC,aAAa,EAAE;;;uCAE1B,IAAI,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;;;;;;;;;;AAC7B,AAKD,QAAa,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAC7B,MAAM;;;;;qCAAS,oBAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,aAAa,EAAE,QAAQ,EAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAA5F,WAAM;;WAEP,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA;;;;;WACb,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,WAAW,CAAC;;;WAE9C,CAAC,MAAM,CAAC,QAAQ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAA;;;;;WACjC,IAAI,MAAM,CAAC,aAAa,EAAE;;;uCAE1B,IAAI,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;;;;;;;;;;AAChD,AAKD,QAAa,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAC3B,MAAM;;;;;qCAAS,oBAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAC,aAAa,EAAE,QAAQ,EAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAA7F,WAAM;;WAEP,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA;;;;;WACb,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,WAAW,CAAC;;;uCAE1C,IAAI,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;;;;;;;;;;AAChD,AAKD,QAAa,MAAM,CAAC,IAAI,EAAE,EAAE;MACvB,MAAM;;;;;qCAAS,oBAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAC,aAAa,EAAE,QAAQ,EAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAAtF,WAAM;;WAEP,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA;;;;;WACb,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,WAAW,CAAC;;;SAE7C,MAAM,CAAC,OAAO;;;;;WACX,IAAI,MAAM,CAAC,aAAa,EAAE;;;uCAE1B,IAAI,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;;;;;;;;;;AAChD,AAKD,QAAa,MAAM,CAAC,IAAI,EAAE,IAAI;MAEzB,MAAM;;;;;qCAAS,oBAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,aAAa,EAAE,QAAQ,EAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAApF,WAAM;;WACP,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA;;;;;WACb,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,WAAW,CAAC;;;SAE7C,MAAM,CAAC,QAAQ;;;;;WACZ,IAAI,MAAM,CAAC,aAAa,EAAE;;;uCAE1B,IAAI,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;;;;;;;;;;;;AAChD,AAOD,YAAW,CAAC,IAAI,EAAE,IAAI,EAAE;;;AAGvB,mBAAE,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;;;AAAC,AAGrB,MAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;EAEhC;;;;;;AAAA,AAQD,AAAM,OAAM,CAAC,IAAI;;;;;qCACH,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC;;;;;;;;;;;;;AAC7E,AAGD,AAAM,OAAM;;;;;qCACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC;;;;;;;;;;EACvE;;CAGD;;kBAtIoB,KAAK;AAwI1B,KAAK,CAAC,OAAO,GAAG;AACf,KAAI,EAAE,IAAI;CACV,CAAC;;;;;;;;;;;;;AC9Ia,MAAM,cAAc,CAAC;AACnC,YAAW,CAAC,IAAI,EAAE,SAAS,EAAE;AAC5B,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,MAAI,CAAC,SAAS,GAAG,SAAS,CAAC;EAC3B;;;;;;;;;;;AAAA,AAaD,AAAM,aAAY;;;;WACX,IAAI,KAAK,CAAC,+DAA+D,CAAC;;;;;;;;;;;;AAChF,AAOD,QAAa,eAAe,CAAC,IAAI,EAAE,IAAI;;;;uCAC/B,qBAAU,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;;;;;;;EACxC;;AAID,QAAa,eAAe,CAAC,SAAS,EAAE,KAAK;;;;;qCAC/B,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;;;;;;;;;;EACpC;;AAID,QAAa,eAAe,CAAC,SAAS;;;;;qCACxB,SAAS,CAAC,MAAM,EAAE;;;;;;;;;;;;;;;AAC/B,AAOD,AAAM,iBAAgB,CAAC,IAAI;;;;uCACnB,qBAAW,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;;;;;;;EACzC;;AAID,AAAM,iBAAgB,CAAC,UAAU,EAAE,KAAK;;;;;qCAC1B,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;;;;;;;;;;EACrC;;AAID,AAAM,iBAAgB,CAAC,UAAU;;;;;qCACnB,UAAU,CAAC,MAAM,EAAE;;;;;;;;;;EAChC;;CAED;kBA/DoB,cAAc;;;;;;ACH5B,MAAM,eAAe,SAAS,KAAK,CAAC;AAC1C,YAAW,CAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE;AACtD,OAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AACrC,MAAI,CAAC,OAAO,GAAG,OAAO,IAAI,wBAAwB,CAAC;AACnD,MAAI,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,CAAC;AACnC,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;EACpC;;AAED,OAAM,GAAG;AACR,SAAO;AACN,UAAO,EAAE,IAAI,CAAC,OAAO;AACrB,aAAU,EAAE,IAAI,CAAC,UAAU;GAC3B,CAAC;EACF;CACD;;QAdY,eAAe,GAAf,eAAe;AAgBrB,MAAM,aAAa,SAAS,KAAK,CAAC;AACxC,YAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE;AAC1C,OAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AACrC,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,MAAI,CAAC,OAAO,GAAG,OAAO,IAAI,8BAA8B,CAAC;AACzD,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;EACpC;CACD;;QAPY,aAAa,GAAb,aAAa;AASnB,MAAM,aAAa,SAAS,KAAK,CAAC;AACxC,YAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE;AAC1C,OAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AACrC,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,MAAI,CAAC,OAAO,GAAG,OAAO,IAAI,sCAAsC,CAAC;AACjE,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;EACpC;CACD;;QAPY,aAAa,GAAb,aAAa;AASnB,MAAM,mBAAmB,SAAS,KAAK,CAAC;AAC9C,YAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE;AAC1C,OAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AACrC,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,MAAI,CAAC,OAAO,GAAG,OAAO,IAAI,wBAAwB,CAAC;AACnD,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;EACpC;CACD;;QAPY,mBAAmB,GAAnB,mBAAmB;AASzB,MAAM,cAAc,SAAS,KAAK,CAAC;AACzC,YAAW,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE;AAC1C,OAAK,CAAC,OAAO,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AACrC,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,MAAI,CAAC,OAAO,GAAG,OAAO,IAAI,0BAA0B,CAAC;AACrD,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;EACpC;CACD;QAPY,cAAc,GAAd,cAAc;;;;;;;;;IC3Cf,MAAM;;;;IACN,KAAK;;;;IACL,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwBN,mBAAmB;;;;IACnB,gBAAgB;;;;IAChB,oBAAoB;;;;IACpB,eAAe;;;;IACf,cAAc;;;;IACd,cAAc;;;;IACd,cAAc;;;;;;;;;;;;;;;AAKX,MAAM,KAAK,uBAAa;;AAEtC,YAAW,CAAC,MAAM,EAAE,UAAU,EAAE;AAC/B,OAAK,EAAE;;;AAAC,AAIR,MAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAC7B,MAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;;AAE/B,MAAI,CAAC,IAAI,GAAG,mBAAS,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACpH,MAAI,CAAC,IAAI,GAAG,sBAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACvC,MAAI,CAAC,UAAU,GAAG,UAAU,IAAI;AAC/B,QAAK,iBAAe;AACpB,WAAQ,oBAAkB;AAC1B,SAAM,kBAAgB;GACtB,CAAC;;AAIF,MAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG;;;;;;AAAC,AAUnC,MAAI,CAAC,GAAG,iBAAiB;;;AAAC,AAI1B,MAAI,CAAC,GAAG,cAAc;;;AAAC,AAIvB,MAAI,CAAC,GAAG,gBAAgB;;;AAAC,AAIzB,MAAI,CAAC,GAAG,kBAAkB;;;AAAC,AAI3B,MAAI,CAAC,GAAG,gBAAgB;;;;;;;AAAC,AAYzB,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,uBAAuB,oBAAoB,CAAC,CAAC;AACvE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC,EAAE,iBAAe,GAAG;;;;AACvD,SAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC3B,SAAG,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;;;GACjB,CAAC;;;;;;;;AAAC,AAaH,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,QAAQ,mBAAmB,CAAC;;;;;;;AAAC,AAYvD,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,YAAY,EAAE,kBAAe,GAAG;;;;YAErD,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;;;;;YACpD,IAAI,MAAM,CAAC,eAAe,EAAE;;;UAE9B,GAAG,CAAC,IAAI;;;;;YACN,IAAI,MAAM,CAAC,mBAAmB,EAAE;;;;sCAE5B,aA/HN,GAAG,EA+HO,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,OAAO,CAAC;;;;;;;;YAC5D,IAAI,MAAM,CAAC,cAAc,EAAE;;;;AAElC,SAAG,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;;;GACjB,CAAC,CAAC;;;;;;;AAAC,AAYJ,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,MAAM,EAAE,kBAAe,GAAG;;;;AACnD,SAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC;;;;;;;GAC9C,CAAC,CAAC;;;;;;;;AAAC,AAeJ,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,aAAa,EAAE,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;AACrE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,aAAa,EAAE,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;AACrE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,2BAA2B,EAAE,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;AACjF,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,2BAA2B,EAAE,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;AACrF,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,2BAA2B,EAAE,mBAAmB,CAAC,GAAG,CAAC,CAAC;;;;;AAAC,AAOjF,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,EAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9D,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,SAAS,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9D,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,oBAAoB,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC;AACvE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,oBAAoB,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3E,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,oBAAoB,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC;;;;;AAAC,AAOvE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,aAAa,EAAE,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;AACtE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,aAAa,EAAE,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;AACtE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,+CAA+C,EAAE,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;AACtG,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,+CAA+C,EAAE,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1G,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,+CAA+C,EAAE,oBAAoB,CAAC,GAAG,CAAC,CAAC;;;;;AAAC,AAOtG,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,QAAQ,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5D,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,QAAQ,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5D,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,mBAAmB,EAAE,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;AACrE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,mBAAmB,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;AACzE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,mBAAmB,EAAE,eAAe,CAAC,GAAG,CAAC,CAAC;;;;;AAAC,AAOrE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,gBAAgB,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACjE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,gBAAgB,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AACrE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,gBAAgB,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC;;;;;;;;;;;;;AAAC,AAejE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,gBAAgB,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACjE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,gBAAgB,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AACrE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,gBAAgB,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC;;;;;AAAC,AAOjE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,OAAO,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,gBAAgB,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACjE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,gBAAgB,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AACrE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,gBAAgB,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACjE,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;AACrD,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AACzD,MAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;EAKrD;CACD;kBAxNoB,KAAK;;;;;;;;;;QC/BJ,IAAI,GAAJ,IAAI;QAkBJ,KAAK,GAAL,KAAK;QAML,GAAG,GAAH,GAAG;QAKH,KAAK,GAAL,KAAK;QAoBL,GAAG,GAAH,GAAG;;;;;;;;;;;;;;IApDb,MAAM;;;;;;;;;;AAGX,SAAe,IAAI,CAAC,GAAG;KAEzB,IAAI,EAOJ,QAAQ;;;;;oCARN,aALC,OAAO,EAKA,GAAG,EAAE,wBAAwB,CAAC;;;;oCAC3B,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;QAGH,IAAI,CAAC,QAAQ;;;;;UACX,IAAI,MAAM,CAAC,eAAe,CAAC,qCAAqC,EAAE,EAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,EAAC,CAAC;;;;;AAGlG,YAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;;QAC3C,QAAQ;;;;;UACN,IAAI,MAAM,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,GAAG,oBAAoB,EAAE,EAAC,QAAQ,EAAE,EAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,EAAC,CAAC;;;;oCAG1H,QAAQ,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;;;AAAzD,OAAG,CAAC,IAAI;;AACR,OAAG,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;;;CACjB;;AAEM,SAAe,KAAK,CAAC,GAAG;KAE1B,WAAW;;;;;oCADT,aAvBC,OAAO,EAuBA,GAAG,EAAE,wBAAwB,EAAE,KAAK,CAAC;;;;oCAC3B,oBAAU,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAA7C,eAAW;;oCACE,mBAAQ,MAAM,CAAC,WAAW,EAAE,UAAA,CAAC;YAAI,aAzBlC,GAAG,EAyBmC,GAAG,EAAE,kBAAkB,GAAG,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC;KAAA,CAAC;;;AAAhG,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;;;;;oCACtB,aA7BC,OAAO,EA6BA,GAAG,EAAE,kBAAkB,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,GAAG,OAAO,CAAC;;;;oCACzD,oBAAU,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;;;AAAjE,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,KAAK,CAAC,GAAG;KAE1B,IAAI,EAGJ,SAAS,EAOT,QAAQ;;;;;oCAXN,aAlCC,OAAO,EAkCA,GAAG,EAAE,kBAAkB,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,GAAG,SAAS,CAAC;;;;oCAC3D,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;oCAGc,oBAAU,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;;;AAAlE,aAAS;;UAGT,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,CAAA;;;;;UAClD,IAAI,MAAM,CAAC,eAAe,CAAC,6CAA6C,CAAC;;;;;AAG5E,YAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;;QAChD,QAAQ;;;;;UACN,IAAI,KAAK,CAAC,YAAY,GAAG,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC;;;;oCAGzD,QAAQ,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC;;;AAA1D,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;KAIxB,SAAS,EAGT,QAAQ;;;;;oCANN,aAtDC,OAAO,EAsDA,GAAG,EAAE,kBAAkB,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,GAAG,SAAS,CAAC;;;;oCAGtD,oBAAU,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;;;AAAlE,aAAS;;;AAGT,YAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;;QAChD,QAAQ;;;;;UACN,IAAI,KAAK,CAAC,YAAY,GAAG,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC;;;;oCAGzD,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC;;;AAApD,OAAG,CAAC,IAAI;;;;;;;CACR;;;;;;QC/DqB,IAAI,GAAJ,IAAI;QAOJ,KAAK,GAAL,KAAK;QAML,GAAG,GAAH,GAAG;QAKH,KAAK,GAAL,KAAK;QAUL,GAAG,GAAH,GAAG;;;;;;;;;;;;;;;;;;AA5BlB,SAAe,IAAI,CAAC,GAAG;KAEzB,IAAI;;;;;oCADF,aAJC,OAAO,EAIA,GAAG,EAAE,qBAAqB,CAAC;;;;oCACxB,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;oCACS,iBAAO,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;;;AAA9C,OAAG,CAAC,IAAI;;AACR,OAAG,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;;;CACjB;;AAEM,SAAe,KAAK,CAAC,GAAG;KAE1B,OAAO;;;;;oCADL,aAXC,OAAO,EAWA,GAAG,EAAE,wBAAwB,EAAE,KAAK,CAAC;;;;oCAC/B,iBAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAAtC,WAAO;;oCACM,mBAAQ,MAAM,CAAC,OAAO,EAAE,UAAA,CAAC;YAAI,aAb9B,GAAG,EAa+B,GAAG,EAAE,eAAe,GAAG,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC;KAAA,CAAC;;;AAAzF,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;;;;;oCACtB,aAjBC,OAAO,EAiBA,GAAG,EAAE,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC;;;;oCACnD,iBAAO,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;;;AAA3D,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,KAAK,CAAC,GAAG;KAE1B,IAAI;;;;;oCADF,aAtBC,OAAO,EAsBA,GAAG,EAAE,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;;;;oCACrD,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;UAEJ,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,CAAA;;;;;;oCAC/B,aA1BA,OAAO,EA0BC,GAAG,EAAE,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,gBAAgB,CAAC;;;;oCAE7D,iBAAO,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;;;AAApE,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;;;;;oCACtB,aAhCC,OAAO,EAgCA,GAAG,EAAE,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;;;;oCACrD,iBAAO,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;;;AAA9D,OAAG,CAAC,IAAI;;;;;;;CACR;;;;;;;;QC1BqB,IAAI,GAAJ,IAAI;QAgDJ,KAAK,GAAL,KAAK;QAQL,GAAG,GAAH,GAAG;QAQH,KAAK,GAAL,KAAK;QAsBL,GAAG,GAAH,GAAG;;;;;;;;;;;;;;IA7Fb,MAAM;;;;;;;;;;;;;;;;;;AAOX,SAAe,IAAI,CAAC,GAAG;KACzB,IAAI,eAaH,SAAS,EAoBV,QAAQ,EAKR,QAAQ;;;;;;oCAtCK,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;QAGH,IAAI,CAAC,OAAO;;;;;UACV,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,EAAC,OAAO,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,EAAC,CAAC;;;UAGlG,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,KAAK,CAAC,CAAA;;;;;UAC5C,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,EAAC,EAAE,EAAE,EAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,EAAC,GAAG,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,GAAG,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAC,EAAE,eAAe,EAAE,KAAK,EAAC,EAAC,CAAC;;;;oCAG1K,aApBC,OAAO,EAoBA,GAAG,EAAE,mBAAmB,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,OAAO,CAAC;;;;oCAExG,mBAAQ,GAAG,CAAC;;;AAGnC,wBAAU,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG,EAAI;AAChD,SAAI,GAAG,YAAY,MAAM,CAAC,aAAa,EACtC,MAAM,IAAI,MAAM,CAAC,eAAe,CAAC,qDAAqD,CAAC,CAAC;;AAEzF,WAAM,GAAG,CAAC;KACV,CAAC;;;AAGF,mBAAK,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG,EAAI;AAC7C,SAAI,GAAG,YAAY,MAAM,CAAC,aAAa,EACtC,MAAM,IAAI,MAAM,CAAC,eAAe,CAAC,kDAAkD,CAAC,CAAC;;AAEtF,WAAM,GAAG,CAAC;KACV,CAAC,CACF,CAAC;;;;;AAjBG,aAAS;;;;AAoBV,YAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;;QAChD,QAAQ;;;;;UACN,IAAI,KAAK,CAAC,YAAY,GAAG,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC;;;;;AAGtE,YAAQ,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC;;;;;oCAG/B,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC;;;AAAhD,OAAG,CAAC,IAAI;;AACR,OAAG,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;;;CACjB;;AAIM,SAAe,KAAK,CAAC,GAAG;KAE1B,WAAW;;;;;oCADT,aAzDC,OAAO,EAyDA,GAAG,EAAE,2BAA2B,EAAE,KAAK,CAAC;;;;;mBACb,GAAG,CAAC,IAAI;;oCAAS,aA1D1C,GAAG,EA0D2C,GAAG,EAAE,8BAA8B,EAAE,KAAK,CAAC;;;;;;;;mBAAI,SAAS;;;;;mBAAG,UAAA,CAAC;YAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC;KAAA;;;;gCAApI,KAAK;;;;;AAApC,eAAW;;oCACE,mBAAQ,MAAM,CAAC,WAAW,EAAE,UAAA,CAAC;YAAI,aA3DlC,GAAG,EA2DmC,GAAG,EAAE,mBAAmB,GAAG,CAAC,CAAC,YAAY,GAAG,GAAG,IAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAI,OAAO,CAAC;KAAA,CAAC;;;AAA3K,OAAG,CAAC,IAAI;;;;;;;CACR;;AAIM,SAAe,GAAG,CAAC,GAAG;KACxB,UAAU;;;;;oCAAS,qBAAW,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;;;AAArG,cAAU;;oCACR,aAlEC,OAAO,EAkEA,GAAG,EAAE,mBAAmB,GAAG,UAAU,CAAC,YAAY,GAAG,GAAG,IAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,UAAU,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,OAAO,CAAC;;;AACnJ,OAAG,CAAC,IAAI,GAAG,UAAU,CAAC;;;;;;;CACtB;;AAIM,SAAe,KAAK,CAAC,GAAG;KAC1B,IAAI,EACJ,UAAU,EAIV,SAAS,EAGT,QAAQ,EAKR,QAAQ;;;;;oCAbK,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;oCACe,qBAAW,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;;;AAArG,cAAU;;oCACR,aA3EC,OAAO,EA2EA,GAAG,EAAE,mBAAmB,GAAG,UAAU,CAAC,YAAY,GAAG,GAAG,IAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,UAAU,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,SAAS,CAAC;;;;oCAG/H,UAAU,CAAC,SAAS,EAAE;;;AAAxC,aAAS;;;AAGT,YAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;;QAChD,QAAQ;;;;;UACN,IAAI,KAAK,CAAC,YAAY,GAAG,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC;;;;;AAGtE,YAAQ,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC;;;;;oCAG/B,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC;;;AAA5D,OAAG,CAAC,IAAI;;;;;;;CACR;;AAIM,SAAe,GAAG,CAAC,GAAG;KACxB,UAAU,EAIV,SAAS,EAGT,QAAQ,EAKR,QAAQ;;;;;oCAZW,qBAAW,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;;;AAArG,cAAU;;oCACR,aAhGC,OAAO,EAgGA,GAAG,EAAE,mBAAmB,GAAG,UAAU,CAAC,YAAY,GAAG,GAAG,IAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,UAAU,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,SAAS,CAAC;;;;oCAG/H,UAAU,CAAC,SAAS,EAAE;;;AAAxC,aAAS;;;AAGT,YAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;;QAChD,QAAQ;;;;;UACN,IAAI,KAAK,CAAC,YAAY,GAAG,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC;;;;;AAGtE,YAAQ,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC;;;;;oCAG/B,QAAQ,CAAC,gBAAgB,CAAC,UAAU,CAAC;;;AAAtD,OAAG,CAAC,IAAI;;;;;;;CACR;;;;;;QC5GqB,IAAI,GAAJ,IAAI;QAOJ,KAAK,GAAL,KAAK;QAML,GAAG,GAAH,GAAG;QAMH,KAAK,GAAL,KAAK;QAOL,GAAG,GAAH,GAAG;;;;;;;;;;;;;;;;;;AA1BlB,SAAe,IAAI,CAAC,GAAG;KAEzB,IAAI;;;;;oCADF,aAJC,OAAO,EAIA,GAAG,EAAE,oBAAoB,CAAC;;;;oCACvB,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;oCACS,gBAAM,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;;;AAA7C,OAAG,CAAC,IAAI;;AACR,OAAG,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;;;CACjB;;AAEM,SAAe,KAAK,CAAC,GAAG;KAE1B,MAAM;;;;;oCADJ,aAXC,OAAO,EAWA,GAAG,EAAE,sBAAsB,EAAE,KAAK,CAAC;;;;;mBAClB,GAAG,CAAC,IAAI;;oCAAS,aAZhC,GAAG,EAYiC,GAAG,EAAE,yBAAyB,EAAE,KAAK,CAAC;;;;;;;;mBAAI,SAAS;;;;;mBAAG,UAAA,CAAC;YAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC;KAAA;;;;gCAA/H,KAAK;;;;;AAA1B,UAAM;;oCACO,mBAAQ,MAAM,CAAC,MAAM,EAAE,UAAA,CAAC;YAAI,aAb7B,GAAG,EAa8B,GAAG,EAAE,cAAc,GAAG,CAAC,CAAC,SAAS,GAAG,GAAG,IAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAI,OAAO,CAAC;KAAA,CAAC;;;AAA9J,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;KACxB,KAAK;;;;;oCAAS,gBAAM,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;;;AAAtD,SAAK;;oCACH,aAlBC,OAAO,EAkBA,GAAG,EAAE,cAAc,GAAG,KAAK,CAAC,SAAS,GAAG,GAAG,IAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,OAAO,CAAC;;;AACjI,OAAG,CAAC,IAAI,GAAG,KAAK,CAAC;;;;;;;CACjB;;AAEM,SAAe,KAAK,CAAC,GAAG;KAC1B,IAAI,EACJ,KAAK;;;;;oCADQ,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;oCACU,gBAAM,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;;;AAAtD,SAAK;;oCACH,aAzBC,OAAO,EAyBA,GAAG,EAAE,cAAc,GAAG,KAAK,CAAC,SAAS,GAAG,GAAG,IAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,SAAS,CAAC;;;;oCAClH,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;;;AAAnC,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;KACxB,KAAK;;;;;oCAAS,gBAAM,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;;;AAAtD,SAAK;;oCACH,aA/BC,OAAO,EA+BA,GAAG,EAAE,cAAc,GAAG,KAAK,CAAC,SAAS,GAAG,GAAG,IAAG,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,SAAS,CAAC;;;;oCAClH,gBAAM,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;;;AAA5D,OAAG,CAAC,IAAI;;;;;;;CACR;;;;;;QC9BqB,IAAI,GAAJ,IAAI;QAOJ,KAAK,GAAL,KAAK;QAML,GAAG,GAAH,GAAG;QAKH,KAAK,GAAL,KAAK;QAaL,GAAG,GAAH,GAAG;;;;;;;;;;;;;;;;;;AA/BlB,SAAe,IAAI,CAAC,GAAG;KAEzB,IAAI;;;;;oCADF,aAJC,OAAO,EAIA,GAAG,EAAE,mBAAmB,CAAC;;;;oCACtB,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;oCACS,eAAK,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;;;AAA5C,OAAG,CAAC,IAAI;;AACR,OAAG,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;;;CACjB;;AAEM,SAAe,KAAK,CAAC,GAAG;KAE1B,KAAK;;;;;oCADH,aAXC,OAAO,EAWA,GAAG,EAAE,mBAAmB,EAAE,KAAK,CAAC;;;;oCAC5B,eAAK,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAAlC,SAAK;;oCACQ,mBAAQ,MAAM,CAAC,KAAK,EAAE,UAAA,CAAC;YAAI,aAb5B,GAAG,EAa6B,GAAG,EAAE,aAAa,GAAG,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC;KAAA,CAAC;;;AAApF,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;;;;;oCACtB,aAjBC,OAAO,EAiBA,GAAG,EAAE,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;;;;oCAC/C,eAAK,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;;;AAAvD,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,KAAK,CAAC,GAAG;KAE1B,IAAI;;;;;oCADF,aAtBC,OAAO,EAsBA,GAAG,EAAE,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;;;;oCACjD,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;UAEJ,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,CAAA;;;;;;oCACpC,aA1BA,OAAO,EA0BC,GAAG,EAAE,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,qBAAqB,CAAC;;;UAE3E,OAAO,IAAI,CAAC,MAAM,KAAK,WAAW,CAAA;;;;;;oCAC/B,aA7BA,OAAO,EA6BC,GAAG,EAAE,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC;;;;oCAEzD,eAAK,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC;;;AAAhE,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;;;;;oCACtB,aAnCC,OAAO,EAmCA,GAAG,EAAE,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;;;;oCACjD,eAAK,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;;;AAA1D,OAAG,CAAC,IAAI;;;;;;;CACR;;;;;;;;;;;;;;;;;;;;;kBCnCc,iBAAO,GAAG,EAAE,IAAI;KAMzB,SAAS,EAGT,QAAQ,EAKR,QAAQ,EAGR,IAAI,EAMH,KAAK,EAqCF,OAAO;;;;AAAP,WAAO,YAAP,OAAO,GAAG;AAClB,SAAG,GAAG,CAAC,WAAW,KAAK,GAAG,CAAC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,CAAA,AAAC,EAAE;AAC9D,UAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACpB,UAAI,KAAK,GAAG,sBAAG,SAAS,CAAC;AACxB,aAAM,EAAE,GAAG,CAAC,MAAM;AAClB,WAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;OAC1B,CAAC,CAAC;AACH,SAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA,AAAC,GAAG,KAAK,CAAC,CAAC;AACpF,SAAG,CAAC,IAAI,GAAG,IAAI,CAAC;MAChB;KACD;;AArED,OAAG,CAAC,MAAM,GAAG,GAAG,CAAC;;;;oCAKM,oBAAU,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;;;AAAlE,aAAS;;;AAGT,YAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC;;QAChD,QAAQ;;;;;UACN,IAAI,KAAK,CAAC,YAAY,GAAG,SAAS,CAAC,QAAQ,GAAG,oBAAoB,CAAC;;;;;AAGtE,YAAQ,GAAG,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC;;;;;oCAG/B,QAAQ,CAAC,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC;;;AAA7C,QAAI;;AAGR,QAAI,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;;;AAGjC,UAAK,GAAG,uBAAI,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE;AAClE,eAAS,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS;AACjD,eAAS,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS;AACjD,cAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK;AAC9B,aAAO,EAAE,IAAI,CAAC,EAAE;AAChB,YAAM,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK;MAC5B,CAAC;;;;AAGF,QAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;;AAElC,QAAG,CAAC,MAAM,GAAG,GAAG,CAAC;AACjB,QAAG,CAAC,IAAI,GAAG,EAAC,OAAO,EAAE,kCAAkC,EAAC,CAAC;KACzD;;AAED,WAAO,EAAE,CAAC;;;;;;;;;AAGV,OAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,eAAO,GAAG,CAAC;;;AAAC,AAGhC,OAAG,CAAC,MAAM,GAAG,YAAI,MAAM,IAAI,GAAG;;;AAAC,AAG/B,QAAG,OAAO,YAAI,MAAM,KAAK,UAAU,EAClC,GAAG,CAAC,IAAI,GAAG,YAAI,MAAM,EAAE,CAAC,KAExB,GAAG,CAAC,IAAI,GAAG,EAAC,OAAO,EAAE,YAAI,MAAM,GAAG,YAAI,OAAO,GAAG,+BAA+B,EAAE,CAAC;;AAEnF,WAAO,EAAE,CAAC;;;;;;;CAoBX;;;;;;QCvEqB,IAAI,GAAJ,IAAI;QAOJ,KAAK,GAAL,KAAK;QAKL,GAAG,GAAH,GAAG;QAKH,KAAK,GAAL,KAAK;QAML,GAAG,GAAH,GAAG;;;;;;;;;;;;;;;;;;AAvBlB,SAAe,IAAI,CAAC,GAAG;KAEzB,IAAI;;;;;oCADF,aAJC,OAAO,EAIA,GAAG,EAAE,mBAAmB,CAAC;;;;oCACtB,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;oCACS,eAAK,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;;;AAA5C,OAAG,CAAC,IAAI;;AACR,OAAG,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;;;CACjB;;AAEM,SAAe,KAAK,CAAC,GAAG;KAC1B,KAAK;;;;;oCAAS,eAAK,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAAlC,SAAK;;oCACQ,mBAAQ,MAAM,CAAC,KAAK,EAAE,UAAA,CAAC;YAAI,aAZ5B,GAAG,EAY6B,GAAG,EAAE,aAAa,GAAG,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC;KAAA,CAAC;;;AAArF,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;;;;;oCACtB,aAhBC,OAAO,EAgBA,GAAG,EAAE,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;;;;oCAC/C,eAAK,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;;;AAAvD,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,KAAK,CAAC,GAAG;KAE1B,IAAI;;;;;oCADF,aArBC,OAAO,EAqBA,GAAG,EAAE,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;;;;oCACjD,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;oCACS,eAAK,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC;;;AAAhE,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;;;;;oCACtB,aA3BC,OAAO,EA2BA,GAAG,EAAE,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;;;;oCACjD,eAAK,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;;;AAA1D,OAAG,CAAC,IAAI;;;;;;;CACR;;;;;;;;;;;;;;;;;;;;;;;;;IC3BW,MAAM;;;;IACN,MAAM;;;;;;;;;;;;;;AAIlB,IAAI,UAAU,GAAG,+MAA+M,CAAC;;kBAElN,iBAAO,GAAG;KAoBnB,eAAe,EA2If,MAAM,EAON,KAAK,EA0EL,wBAAwB,EAGxB,gBAAgB,EAjMhB,oBAAoB,EAoFpB,IAAI,EA3BJ,KAAK,EAkEJ,IAAI,EA0BJ,aAAa,EAqCd,IAAI,EAUJ,WAAW,EAMX,YAAY;;;;UApPb,GAAG,CAAC,KAAK,CAAC,aAAa,KAAK,MAAM,CAAA;;;;;QAEhC,GAAG,CAAC,KAAK,CAAC,SAAS;;;;;UACjB,IAAI,MAAM,CAAC,eAAe,CAAC,gCAAgC,CAAC;;;QAE9D,GAAG,CAAC,KAAK,CAAC,YAAY;;;;;UACpB,IAAI,MAAM,CAAC,eAAe,CAAC,mCAAmC,CAAC;;;UAElE,OAAO,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,WAAW,CAAA;;;;;UACnC,IAAI,MAAM,CAAC,eAAe,CAAC,4BAA4B,CAAC;;;;;AAG3D,mBAAe,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;;QAC3C,eAAe,CAAC,KAAK,CAAC,UAAA,CAAC;YAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;KAAA,CAAC;;;;;UAC5C,IAAI,MAAM,CAAC,eAAe,CAAC,uEAAuE,CAAC;;;;oCAKvF,iBAAO,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC;;;AAAxD,UAAM;;UASN,CAAC,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE,CAAA;;;;;AAClD,OAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA,AAAC,GAAG,MAAM,GAAG,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC3I,OAAG,CAAC,IAAI,GAAG,EAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAC,CAAC;;;;;;AAUvB,4BAAwB,GAAG,MAAM,CAAC,MAAM;AACxC,oBAAgB,GAAG,wBAAwB,CAAC,KAAK,EAAE;AACnD,wBAAoB,GAAG,EAAE;;;;QAKxB,eAAe,CAAC,KAAK,CAAC,UAAA,EAAE;YAAI,gBAAgB,CAAC,IAAI,CAAC,UAAA,EAAE;aAAI,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;MAAA,CAAC;KAAA,CAAC;;;;;UAK5E,GAAG,CAAC,MAAM,KAAK,MAAM,CAAA;;;;;;;oCAEN,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;UAEP,CAAC,IAAI,CAAC,MAAM,IACT,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAC3B,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAA,CAAC;YAAI,AAAC,OAAO,CAAC,KAAK,QAAQ,IAAK,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;KAAA,CAAC,CAAA;;;;;UAClE,IAAI,KAAK,EAAE;;;;;;;;;UAEb,IAAI,MAAM,CAAC,eAAe,CAAC,6DAA6D,CAAC;;;;AAGhG,wBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC;AACnC,oBAAgB,GAAG,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC;;;;;;;oCAQ9E,gBAAM,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;;;AAA3D,SAAK;;AACL,wBAAoB,GAAG,KAAK,CAAC,MAAM,CAAC;AACpC,oBAAgB,GAAG,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC;;;;;;;;UAIxF,uBAAe,MAAM,CAAC,aAAa,CAAA;;;;;qCAC/B,eAAe,CAAC,GAAG,CAAC;;;;;;QAOxB,eAAe,CAAC,KAAK,CAAC,UAAA,EAAE;YAAI,gBAAgB,CAAC,IAAI,CAAC,UAAA,EAAE;aAAI,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;MAAA,CAAC;KAAA,CAAC;;;;;qCACzE,eAAe,CAAC,GAAG,CAAC;;;;;AAWzB,SAAK,GAAG,eAAK,EAAE,EAAE;AACjB,QAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;;oCAChE,gBAAM,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE;AAC5D,UAAK,EAAE,KAAK;AACZ,WAAM,EAAE,oBAAoB;KAC5B,CAAC;;;AAHF,SAAK;;;AAQL,OAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,YAAY,IAAI,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA,AAAC,GAAG,OAAO,GAAG,IAAI,GAAG,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAE,CAAC;AAC1I,OAAG,CAAC,IAAI,GAAG,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC;;;;UAehB,GAAG,CAAC,MAAM,KAAK,MAAM,CAAA;;;;;SAOzB,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC;;;;;;oCAChB,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;;;;SAGI,GAAG,CAAC,EAAE,CAAC,mCAAmC,CAAC;;;;;;oCACtC,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;;QAKA,IAAI,CAAC,SAAS;;;;;UACZ,IAAI,MAAM,CAAC,eAAe,CAAC,uCAAuC,CAAC;;;QAErE,IAAI,CAAC,aAAa;;;;;UAChB,IAAI,MAAM,CAAC,eAAe,CAAC,2CAA2C,CAAC;;;;oCAK3D,iBAAO,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;;;AAAnD,UAAM;;UACN,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,aAAa,CAAA;;;;;UACjC,IAAI,MAAM,CAAC,cAAc,CAAC,kCAAkC,CAAC;;;UAWhE,IAAI,CAAC,UAAU,KAAK,oBAAoB,CAAA;;;;;QAGtC,IAAI,CAAC,IAAI;;;;;UACP,IAAI,MAAM,CAAC,eAAe,CAAC,kCAAkC,CAAC;;;;;AAGpE,QAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACxD,QAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;UAEvB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IACjB,IAAI,CAAC,MAAM,KAAK,CAAC,IACjB,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAC3B,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAA;;;;;UACvB,IAAI,KAAK,EAAE;;;;;;;;;UAEb,IAAI,MAAM,CAAC,eAAe,CAAC,iCAAiC,CAAC;;;;oCAKtD,gBAAM,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;;AAA9E,SAAK;;;;;UAKG,IAAI,CAAC,UAAU,KAAK,eAAe,CAAA;;;;;QAGtC,IAAI,CAAC,aAAa;;;;;UAChB,IAAI,MAAM,CAAC,eAAe,CAAC,2CAA2C,CAAC;;;;;AAG7E,iBAAa,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC1E,iBAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;;UAEzC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAC1B,aAAa,CAAC,MAAM,KAAK,CAAC,IAC1B,OAAO,aAAa,CAAC,CAAC,CAAC,KAAK,QAAQ,IACpC,OAAO,aAAa,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAA;;;;;UAChC,IAAI,KAAK,EAAE;;;;;;;;;UAEb,IAAI,MAAM,CAAC,eAAe,CAAC,0CAA0C,CAAC;;;;oCAM/D,gBAAM,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;;;AAArE,SAAK;;UAKD,KAAK,CAAC,aAAa,KAAK,aAAa,CAAC,CAAC,CAAC,CAAA;;;;;UACrC,IAAI,MAAM,CAAC,eAAe,CAAC,4CAA4C,CAAC;;;;;;;UAOzE,IAAI,MAAM,CAAC,eAAe,CAAC,mEAAmE,CAAC;;;;oCAGrF,KAAK,CAAC,IAAI,EAAE;;;AAAzB,QAAI;;;AAIJ,4BAAwB,GAAG,MAAM,CAAC,MAAM;;;;AAGxC,oBAAgB,GAAG,MAAM,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;;;kBAG7E,MAAM;kBAAoB,gBAAgB;;oCAAQ,IAAI,CAAC,MAAM,EAAE;;;;AAA7E,eAAW,eAAU,kBAAkB;;;AAMvC,gBAAY,GAAG,uBAAI,IAAI,CAAC;AAC3B,SAAI,EAAE,cAAc;AACpB,WAAM,EAAE,WAAW;KACnB,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE;AAC3C,cAAS,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS;AAChD,cAAS,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS;AAChD,aAAQ,EAAE,KAAK,CAAC,SAAS;AACzB,YAAO,EAAE,KAAK,CAAC,OAAO;AACtB,WAAM,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK;KAC5B,CAAC;;;;AAMF,OAAG,CAAC,MAAM,GAAG,GAAG,CAAC;AACjB,OAAG,CAAC,IAAI,GAAG;AACV,iBAAY,EAAE,YAAY;AAC1B,kBAAa,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAC5F,UAAK,EAAE,gBAAgB;KACvB;;;AAAC,AAMF,QAAI,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,eAAe,CAAC,EAC3C,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;;;;;UAMhB,IAAI,MAAM,CAAC,eAAe,CAAC,4DAA4D,CAAC;;;;;;;CAG/F;;AAGD,SAAS,eAAe,CAAE,GAAG,EAAE;AAC9B,KAAI,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACtC,KAAI,KAAK,GAAG,kBAAkB,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAChD,IAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA,AAAC,GAAG,MAAM,GAAG,GAAG,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC;AAC/I,IAAG,CAAC,IAAI,GAAG,EAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC;CACpC;;;;;;QCxSqB,IAAI,GAAJ,IAAI;QASJ,KAAK,GAAL,KAAK;QA6FL,GAAG,GAAH,GAAG;QAQH,KAAK,GAAL,KAAK;QASL,GAAG,GAAH,GAAG;;;;;;;;;;;;;;;;;;;;IA7Hb,MAAM;;;;;;;;;;;;;;AAIlB,IAAI,UAAU,GAAG,CAAC,aAAa,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;;AAE/D,SAAe,IAAI,CAAC,GAAG;KAEzB,QAAQ,EACR,IAAI,EACJ,IAAI;;;;;oCAHF,aATC,OAAO,EASA,GAAG,EAAE,mBAAmB,CAAC;;;AACnC,YAAQ,GAAG,iBATR,aAAa,EASS,UAAU,EAAE,GAAG,CAAC;;oCAC5B,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;oCACS,eAAK,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;;;AAAxC,QAAI;;oCACS,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC;;;AAA7C,OAAG,CAAC,IAAI;;AACR,OAAG,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;;;CACjB;;AAEM,SAAe,KAAK,CAAC,GAAG;KAK1B,GAAG,EASF,QAAQ,EAMR,KAAK,EAGL,WAAW,EAYZ,WAAW,EAqDX,QAAQ,EACR,KAAK;;;;;oCAxFE,aAlBK,GAAG,EAkBJ,GAAG,EAAE,eAAe,CAAC;;;;;;;;;;;oCAAW,aAlB/B,GAAG,EAkBgC,GAAG,EAAE,iBAAiB,CAAC;;;;;;;;;;;UACnE,IAAI,MAAM,CAAC,cAAc,CAAC,+DAA+D,CAAC;;;;oCAMtF,aAzBK,GAAG,EAyBJ,GAAG,EAAE,iBAAiB,CAAC;;;;;;;;AACrC,OAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;;;AAAC;;;;SAIZ,GAAG,CAAC,KAAK,CAAC,KAAK;;;;;AACnB,YAAQ,GAAG,iBA9BM,UAAU,EA8BL,GAAG,CAAC;;;;;oCAGxB,mBAAQ,GAAG,CAAC,QAAQ,EAAE,UAAA,EAAE;YAAI,aAlC5B,OAAO,EAkC6B,GAAG,EAAE,aAAa,GAAG,EAAE,GAAG,OAAO,CAAC;KAAA,CAAC;;;;oCAG3D,eAAK,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,UAAA,CAAC;YAAI,CAAC,CAAC,MAAM,CAAC,oBAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC;KAAA,CAAC;;;AAAlF,SAAK;;;AAGL,eAAW,GAAG,EAAE;;AACpB,SAAK,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AACrB,WAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC,EAAI;AAC1C,UAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;MAC/C,CAAC,CAAC;KACH,CAAC;;;AAAC,AAGH,OAAG,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;;AAI5B,eAAW,GAAG,UAAA,CAAC,EAAI;AACtB,SAAI,KAAK;;;;AAAC,AAIV,SAAI,GAAG,EAAE;AACR,OAAC,GAAG,CAAC,CAAC,MAAM,CAAC,oBAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;AACzC,WAAK,GAAG,IAAI,CAAC;MACb;;;AAAA,AAID,SAAI,CAAC,KAAK,IAAI,KAAK,KAAK,SAAS,EAAE;AAClC,OAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;AAClC,WAAK,GAAG,SAAS,CAAC;MAClB,MACA,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;AAAA,AAI1B,SAAI,GAAG,CAAC,KAAK,CAAC,MAAM,EACnB,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,QAAQ,EAAE;AACjC,OAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAC,CAAC,CAAC;AAClD,WAAK,GAAG,QAAQ,CAAC;MACjB,MACA,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,MAAM,EAAC,CAAC,CAAC;;;AAAA,AAI3C,SAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC;AACtE,SAAI,GAAG,CAAC,KAAK,CAAC,MAAM,EACnB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAA,GAAG;aAAI,oBAAE,EAAE,CACvB,GAAG,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,EACtD,GAAG,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,EAC/D,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,EACzE,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,EACxE,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CACzE;MAAA,CAAC,CAAC;;;AAAA,AAIJ,SAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACpC,SAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;AAAA,AAI3B,SAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACtC,SAAI,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;AAE9B,YAAO,CAAC,CAAC;KACT;;AAGG,YAAQ,GAAG,iBAxGR,aAAa,EAwGS,UAAU,EAAE,GAAG,CAAC;;oCAC3B,eAAK,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,WAAW,CAAC;;;AAA/C,SAAK;;oCACQ,mBAAQ,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAM,CAAC;;;;;wCAAU,OAAO,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC;;;;;;;;;;KAAA,CAAC,CAAC;;;AAAnF,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;KACxB,OAAO,EAEP,QAAQ,EACR,IAAI;;;;AAHJ,WAAO,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,KAAK,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAA,AAAC;;oCAC7D,aAhHC,OAAO,EAgHA,GAAG,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,OAAO,CAAC;;;AAC1F,YAAQ,GAAG,iBAhHR,aAAa,EAgHS,UAAU,EAAE,GAAG,CAAC;;oCAC5B,eAAK,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC;;;AAAxC,QAAI;;oCACS,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC;;;AAA7C,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,KAAK,CAAC,GAAG;KAC1B,OAAO,EAEP,QAAQ,EACR,IAAI,EACJ,IAAI;;;;AAJJ,WAAO,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,KAAK,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAA,AAAC;;oCAC7D,aAxHC,OAAO,EAwHA,GAAG,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,SAAS,CAAC;;;AAC5F,YAAQ,GAAG,iBAxHR,aAAa,EAwHS,UAAU,EAAE,GAAG,CAAC;;oCAC5B,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA1B,QAAI;;oCACS,eAAK,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC;;;AAAjD,QAAI;;oCACS,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC;;;AAA7C,OAAG,CAAC,IAAI;;;;;;;CACR;;AAEM,SAAe,GAAG,CAAC,GAAG;KACxB,OAAO,EAEP,QAAQ,EAOR,IAAI;;;;AATJ,WAAO,GAAG,GAAG,CAAC,MAAM,CAAC,OAAO,KAAK,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAA,AAAC;;oCAC7D,aAjIC,OAAO,EAiIA,GAAG,EAAE,QAAQ,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,OAAO,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,SAAS,CAAC;;;AAC5F,YAAQ,GAAG,iBAjIR,aAAa,EAiIS,UAAU,EAAE,GAAG,CAAC;;;;AAG7C,YAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;AAC1B,QAAI,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EACzC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;;oCAEb,eAAK,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC;;;AAA3C,QAAI;;oCACS,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC;;;AAA7C,OAAG,CAAC,IAAI;;;;;;;CACR;;AAED,SAAe,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,GAAG;KAOrC,OAAO,EAyBP,QAAQ;;;;UA9BR,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAA;;;;;sCACzB,IAAI;;;;oCAIQ,mBAAQ,GAAG,CAAC,QAAQ,EAAE,kBAAM,CAAC;SAG5C,MAAM;;;;;wCAAS,IAAI,CAAC,CAAC,CAAC,EAAE;;;AAAxB,cAAM;;cAIN,CAAC,KAAK,aAAa,CAAA;;;;;;wCACP,mBAAQ,MAAM,CAAC,MAAM,EAAE,UAAA,CAAC;gBAAI,aA5J7B,GAAG,EA4J8B,GAAG,EAAE,mBAAmB,GAAG,CAAC,CAAC,YAAY,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,OAAO,CAAC;SAAA,CAAC;;;AAAlK,cAAM;;;cAIH,CAAC,KAAK,QAAQ,CAAA;;;;;;wCACF,mBAAQ,MAAM,CAAC,MAAM,EAAE,UAAA,CAAC;gBAAI,aAjK7B,GAAG,EAiK8B,GAAG,EAAE,cAAc,GAAG,CAAC,CAAC,SAAS,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,GAAG,IAAI,GAAG,MAAM,CAAA,AAAC,GAAG,OAAO,CAAC;SAAA,CAAC;;;AAA1J,cAAM;;;cAIH,CAAC,KAAK,OAAO,CAAA;;;;;;wCACD,mBAAQ,MAAM,CAAC,MAAM,EAAE,UAAA,CAAC;gBAAI,aAtK7B,GAAG,EAsK8B,GAAG,EAAE,aAAa,GAAG,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC;SAAA,CAAC;;;AAApF,cAAM;;;0CAGA,MAAM;;;;;;;KACb,CAAC;;;AAtBE,WAAO;;;AAyBP,YAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,eAAK,SAAS,CAAC,EAAE,IAAI,CAAC;;AACjE,WAAO,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YAAK,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;KAAA,CAAC;;;AAAC,sCAG9C,QAAQ;;;;;;;CACf;;;;;;;;;;;;;ICpLW,MAAM;;;;;;AAElB,IAAI,MAAM,GAAG,wBAAwB,CAAC;;kBAEvB,iBAAO,GAAG,EAAE,IAAI;KAI1B,MAAM;;;;AAHV,OAAG,CAAC,MAAM,GAAG,IAAI;;;AAAC,AAGd,UAAM,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI;;;;UAGnF,MAAM,IAAI,MAAM,CAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,GAAG,EAAI;AAC3E,SAAI;AACH,aAAO,GAAG,CAAC,MAAM,GAAG,uBAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE;AAClD,iBAAU,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC;AAC3B,aAAM,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK;OAC5B,CAAC,CAAC;MACH,CAAC,OAAO,GAAG,EAAE;AAAE,aAAO;MAAE;KACzB,CAAC,CAAA;;;;;UAAQ,MAAM,CAAC,mBAAmB,CAAC,uCAAuC,CAAC;;;qCAEtE,IAAI,EAAE;;;;;;;CACb;;;;;;;;;;;;;kBCpBc,iBAAO,GAAG,EAAE,IAAI;;;;kBAG7B,GAAG,CAAC,OAAO,CAAC,MAAM,IACf,GAAG,CAAC,OAAO,CAAC,MAAM,KAAM,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,AAAC;;;;;;;;oCAC9D,oBAAE,KAAK,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,KAAK,EAAE,WAAW,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;;;;kBAA5G,CAAC;;;;;;;;AAEJ,OAAG,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3D,OAAG,CAAC,GAAG,CAAC,8BAA8B,EAAE,8CAA8C,CAAC,CAAC;;;;oCAGnF,IAAI,EAAE;;;;;;;CAEZ;;;;;;;kBCfc,iBAAO,GAAG,EAAE,IAAI;;;;;oCACb,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;;;AAAvC,OAAG,CAAC,IAAI;;;oCAED,IAAI,EAAE;;;;;AAEZ,OAAG,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;;;;;;;;CAEpB;;;;;;;kBCPc,iBAAO,GAAG,EAAE,IAAI;;;;;;oCAEvB,IAAI,EAAE;;;;;;;;;;AAEZ,OAAG,CAAC,MAAM,GAAG,YAAI,MAAM,IAAI,GAAG;;;AAAC,AAG/B,QAAG,OAAO,YAAI,MAAM,KAAK,UAAU,EAClC,GAAG,CAAC,IAAI,GAAG,YAAI,MAAM,EAAE,CAAC,KAExB,GAAG,CAAC,IAAI,GAAG,EAAC,OAAO,EAAE,YAAI,MAAM,GAAG,YAAI,OAAO,GAAG,+BAA+B,EAAE,CAAC;;AAEnF,OAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,eAAO,GAAG,CAAC,CAAC;;;;;;;CAEjC;;;;;;;;;;;;;;;;;;;;;kBCVc,iBAAO,GAAG,EAAE,IAAI;KAE1B,KAAK,EAGL,MAAM;;;;;;AAAN,UAAM,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;;AACvC,QAAI,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,GAAG,EAAI;AAC3D,SAAI;AACH,aAAO,KAAK,GAAG,GAAG,CAAC,OAAO,GAAG,uBAAI,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE;AACxD,iBAAU,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC;AAC3B,aAAM,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK;OAC5B,CAAC,CAAC;MACH,CAAC,OAAO,GAAG,EAAE;AAAE,aAAO;MAAE;KACzB,CAAC,CAAC;;;AAAA,AAKH,QAAI,CAAC,KAAK,EACT,KAAK,GAAG,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC;;;AAAA;UAKxB,KAAK,IAAI,KAAK,CAAC,GAAG,CAAA;;;;;;oCACJ,eAAK,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC;;;AAA9C,OAAG,CAAC,IAAI;;;UAKL,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAA;;;;;UACrC,IAAI,iBAAO,cAAc,CAAC,sCAAsC,CAAC;;;qCAIjE,IAAI,EAAE;;;;;;;CACb;;;;;;;;;;;;;;;;;;;;;;;;;ICpCW,MAAM;;;;;;AAElB,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;;AAE3B,MAAM,SAAS,yBAAe;;AAE5C,YAAW,KAAK,GAAG;AAClB,SAAO,aAAa,CAAC;EACrB;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,IAAI;MACzB,GAAG,EAIH,GAAG;;;;AAJH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,WAAW,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UACrD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qCAAqC,EAAE,GAAG,CAAC,UAAU,CAAC;;;sCAGzF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;;EAC1C;;AAID,QAAa,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAC3B,GAAG,EAIH,GAAG;;;;AAJH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,EAAE,EAAE,EAAE,EAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;;;AAAC,AAGpE,QAAG,GAAG,yBAAS,WAAW,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UACrD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qCAAqC,EAAE,GAAG,CAAC,UAAU,CAAC;;;WAC5F,IAAI,CAAC,EAAE,KAAK,EAAE,CAAA;;;;;WAAQ,IAAI,KAAK,CAAC,uDAAuD,CAAC;;;;;AAG5F,SAAI,CAAC,OAAO,GAAG,oBAAE,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;;;AAAC,uCAG/C,gBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC5C;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAI7B,GAAG;;;;AAHP,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,WAAW,EAAE,IAAI,EAAE,EAAC,aAAa,EAAE,KAAK,EAAC,CAAC;;UACzD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qCAAqC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAGzF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC9C;;AAID,AAAM,YAAW,CAAC,OAAO;;;;;;WAGpB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,OAAO,CAAA;;;;;;qCACN,qBAAW,KAAK,CAAC,IAAI,CAAC,gBAAM,OAAO,CAAC,IAAI,CAAC,EAAE,UAAA,CAAC;aAAI,CAAC,CAAC,MAAM,CAAC,MAAK,EAAE,EAAE,EAAC,KAAK,EAAE,cAAc,EAAC,CAAC;MAAA,CAAC;;;AAArH,SAAI,CAAC,WAAW,CAAC;;;uCAEX,IAAI,CAAC,WAAW,CAAC;;;;;;;EACxB;;CAED;kBA9DoB,SAAS;;;;;;;;;;;;;;;;;;;;;ICLlB,MAAM;;;;;;AAEH,MAAM,MAAM,yBAAe;;AAEzC,YAAW,KAAK,GAAG;AAClB,SAAO,SAAS,CAAC;EACjB;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,IAAI;MACzB,GAAG,EAIH,GAAG;;;;AAJH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,QAAQ,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAClD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,kCAAkC,EAAE,GAAG,CAAC,UAAU,CAAC;;;sCAGtF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;;EAC1C;;AAID,QAAa,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAC3B,GAAG,EAIH,GAAG;;;;AAJH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,EAAE,EAAE,EAAE,EAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;;;AAAC,AAGpE,QAAG,GAAG,yBAAS,QAAQ,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAClD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,kCAAkC,EAAE,GAAG,CAAC,UAAU,CAAC;;;WACzF,IAAI,CAAC,EAAE,KAAK,EAAE,CAAA;;;;;WAAQ,IAAI,KAAK,CAAC,uDAAuD,CAAC;;;;;AAG5F,SAAI,CAAC,OAAO,GAAG,oBAAE,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;;;AAAC,uCAG/C,gBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC5C;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAI7B,GAAG;;;;AAHP,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,QAAQ,EAAE,IAAI,EAAE,EAAC,aAAa,EAAE,KAAK,EAAC,CAAC;;UACtD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,kCAAkC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAGtF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC9C;;CAED;kBAnDoB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICAf,MAAM;;;;;;AAElB,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAC5B,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;;AAEvB,MAAM,UAAU,yBAAe;;AAE7C,YAAW,KAAK,GAAG;AAClB,SAAO,aAAa,CAAC;EACrB;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,IAAI;MACzB,GAAG,EASH,GAAG;;;;AATH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC,CAAC;AAClE,SAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI;;;AAAC,AAGrE,SAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,WAAW,EAClF,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;AAAA,AAG1B,QAAG,GAAG,yBAAS,YAAY,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UACtD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,GAAG,CAAC,UAAU,CAAC;;;WAC7F,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,oEAAoE,CAAC;;;sCAGnJ,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;;EAC1C;;AAID,QAAa,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAC3B,GAAG,EASH,GAAG;;;;AATH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,EAAE,EAAE,EAAE,EAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC,CAAC;AACxE,SAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI;;;AAAC,AAGrE,SAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,WAAW,EAClF,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;AAAA,AAG1B,QAAG,GAAG,yBAAS,YAAY,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UACtD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,GAAG,CAAC,UAAU,CAAC;;;WAC7F,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,oEAAoE,CAAC;;;WACtJ,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAC,CAAC,EAAC,CAAC;aAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;MAAA,CAAC,CAAA;;;;;WAAQ,IAAI,KAAK,CAAC,uDAAuD,CAAC;;;;;AAG3I,SAAI,CAAC,OAAO,GAAG,oBAAE,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;;;AAAC,uCAG/C,gBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC5C;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAI7B,GAAG;;;;AAHP,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,YAAY,EAAE,IAAI,EAAE,EAAC,aAAa,EAAE,KAAK,EAAC,CAAC;;UAC1D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAG1F,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC9C;;AAID,AAAM,KAAI,CAAC,OAAO;;;;WAGb,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,CAAA;;;;;;qCACN,eAAK,GAAG,CAAC,IAAI,CAAC,gBAAM,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;;;AAAnE,SAAI,CAAC,IAAI,CAAC;;;uCAEJ,IAAI,CAAC,IAAI,CAAC;;;;;;;EACjB;;AAID,AAAM,UAAS,CAAC,OAAO;;;;WAGlB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,OAAO,CAAA;;;;;;qCACN,oBAAU,GAAG,CAAC,IAAI,CAAC,gBAAM,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC;;;AAAlF,SAAI,CAAC,SAAS,CAAC;;;uCAET,IAAI,CAAC,SAAS,CAAC;;;;;;;EACtB;;AAGD,KAAI,YAAY,GAAG;AAClB,SAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB;;CAED;kBA1FoB,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICJnB,MAAM;;;;;;AAElB,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAC5B,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;;AAGjB,MAAM,KAAK,yBAAe;;AAExC,YAAW,KAAK,GAAG;AAClB,SAAO,QAAQ,CAAC;EAChB;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,IAAI;MACzB,GAAG,EAIH,GAAG;;;;AAJH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,OAAO,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UACjD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,iCAAiC,EAAE,GAAG,CAAC,UAAU,CAAC;;;sCAGrF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;;EAC1C;;AAID,QAAa,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAC3B,GAAG,EAIH,GAAG;;;;AAJH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,EAAE,EAAE,EAAE,EAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;;;AAAC,AAGpE,QAAG,GAAG,yBAAS,OAAO,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UACjD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,iCAAiC,EAAE,GAAG,CAAC,UAAU,CAAC;;;WACxF,IAAI,CAAC,EAAE,KAAK,EAAE,CAAA;;;;;WAAQ,IAAI,KAAK,CAAC,uDAAuD,CAAC;;;;;AAG5F,SAAI,OAAO,IAAI,CAAC,aAAa,KAAK,WAAW,EAC5C,IAAI,CAAC,aAAa,GAAG,oBAAE,GAAG,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,eAAK,EAAE,EAAE,CAAC,CAAC;;;AAAA,AAGhE,SAAI,CAAC,OAAO,GAAG,oBAAE,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;;;AAAC,uCAG/C,gBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC5C;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAI7B,GAAG;;;;AAHP,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,OAAO,EAAE,IAAI,EAAE,EAAC,aAAa,EAAE,KAAK,EAAC,CAAC;;UACrD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,iCAAiC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAGrF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC9C;;AAID,QAAa,YAAY,CAAC,IAAI,EAAE,EAAE,EAAE,KAAK;MAGpC,MAAM;;;;;qCAAS,oBAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,CACpD,UAAA,GAAG;aAAI,oBAAE,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,EAAE,GAAG,CAAC;MAAA,EACtE,EAAC,aAAa,EAAE,QAAQ,EAAC,CACzB,CAAC,GAAG,CAAC,IAAI,CAAC;;;AAHP,WAAM;;WAKP,MAAM,CAAC,MAAM,GAAG,CAAC,CAAA;;;;;WACb,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,WAAW,CAAC;;;SAE7C,MAAM,CAAC,QAAQ;;;;;WACZ,IAAI,MAAM,CAAC,aAAa,CAAC,sFAAsF,CAAC;;;uCAEhH,IAAI,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;;;;;;;EAChD;;AAID,AAAM,KAAI,CAAC,OAAO;;;;WAGb,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,CAAA;;;;;;qCACN,eAAK,GAAG,CAAC,IAAI,CAAC,gBAAM,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;;;AAAnE,SAAI,CAAC,IAAI,CAAC;;;uCAEJ,IAAI,CAAC,IAAI,CAAC;;;;;;;EACjB;;AAID,AAAM,OAAM,CAAC,OAAO;;;;WAGf,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,CAAA;;;;;;qCACN,iBAAO,GAAG,CAAC,IAAI,CAAC,gBAAM,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;;;AAAzE,SAAI,CAAC,MAAM,CAAC;;;uCAEN,IAAI,CAAC,MAAM,CAAC;;;;;;;EACnB;;AAGD,KAAI,OAAO,GAAG;AACb,SAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB;;AAGD,KAAI,SAAS,GAAG;AACf,SAAO,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB;;CAGD;kBA3GoB,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;ICRd,MAAM;;;;IACN,MAAM;;;;;;AAElB,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;;AAEf,MAAM,IAAI,yBAAe;;AAEvC,YAAW,KAAK,GAAG;AAClB,SAAO,OAAO,CAAC;EACf;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,IAAI;MACzB,GAAG,EAIH,GAAG;;;;AAJH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,MAAM,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAChD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,gCAAgC,EAAE,GAAG,CAAC,UAAU,CAAC;;;sCAGpF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;;EAC1C;;AAID,QAAa,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAC3B,GAAG,EAIH,GAAG;;;;AAJH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,EAAE,EAAE,EAAE,EAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;;;AAAC,AAGpE,QAAG,GAAG,yBAAS,MAAM,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAChD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,gCAAgC,EAAE,GAAG,CAAC,UAAU,CAAC;;;WACvF,IAAI,CAAC,EAAE,KAAK,EAAE,CAAA;;;;;WAAQ,IAAI,KAAK,CAAC,uDAAuD,CAAC;;;;;AAG5F,SAAI,CAAC,OAAO,GAAG,oBAAE,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;;;AAAC,uCAG/C,gBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC5C;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAI7B,GAAG;;;;AAHP,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,MAAM,EAAE,IAAI,EAAE,EAAC,aAAa,EAAE,KAAK,EAAC,CAAC;;UACpD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,gCAAgC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAGpF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC9C;;AAID,AAAM,MAAK,CAAC,OAAO;;;MAIb,WAAW;;;;WADZ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAA;;;;;AACtB,gBAAW,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC;aAAI,MAAK,WAAW,CAAC,CAAC,CAAC;MAAA,CAAC;;qCAC5D,eAAK,KAAK,CAAC,IAAI,CAAC,gBAAM,OAAO,CAAC,IAAI,CAAC,EAAE,UAAA,CAAC;aAAI,CAAC,CAAC,MAAM,CAAC,oBAAE,IAAI,CAAC,WAAW,CAAC,CAAC;MAAA,CAAC;;;AAA5F,SAAI,CAAC,KAAK,CAAC;;;uCAGL,IAAI,CAAC,KAAK,CAAC;;;;;;;EAClB;;AAID,IAAG,CAAC,KAAK,EAAE,MAAM,EAAE;AAClB,SAAO,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;EAC9C;;CAED;kBAtEoB,IAAI;;;;;;;;;;;;;;;;;;;;;ICNb,MAAM;;;;;;AAEH,MAAM,IAAI,yBAAe;;AAEvC,YAAW,KAAK,GAAG;AAClB,SAAO,OAAO,CAAC;EACf;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,IAAI;MACzB,GAAG,EAIH,GAAG;;;;AAJH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,MAAM,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAChD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,gCAAgC,EAAE,GAAG,CAAC,UAAU,CAAC;;;sCAGpF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;;EAC1C;;AAID,QAAa,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAC3B,GAAG,EAIH,GAAG;;;;AAJH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,EAAE,EAAE,EAAE,EAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC;;;AAAC,AAGpE,QAAG,GAAG,yBAAS,MAAM,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAChD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,gCAAgC,EAAE,GAAG,CAAC,UAAU,CAAC;;;WACvF,IAAI,CAAC,EAAE,KAAK,EAAE,CAAA;;;;;WAAQ,IAAI,KAAK,CAAC,uDAAuD,CAAC;;;;;AAG5F,SAAI,CAAC,OAAO,GAAG,oBAAE,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;;;AAAC,uCAG/C,gBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC5C;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAI7B,GAAG;;;;AAHP,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,MAAM,EAAE,IAAI,EAAE,EAAC,aAAa,EAAE,KAAK,EAAC,CAAC;;UACpD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,gCAAgC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAGpF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC9C;;CAED;kBAnDoB,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICEb,MAAM;;;;;;;;;;AAGlB,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AAC9B,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAChC,MAAM,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;AAC1C,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAChC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;;AAEb,MAAM,IAAI,yBAAe;;AAEvC,YAAW,KAAK,GAAG;AAClB,SAAO,OAAO,CAAC;EACf;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,IAAI;MACzB,GAAG,EASH,GAAG;;;;AATH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,EAAE,EAAE,eAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC,CAAC;AAC5F,SAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI;;;AAAC,AAGrE,SAAI,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,WAAW,EAC1D,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;;;AAAA,AAGvB,QAAG,GAAG,yBAAS,MAAM,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAChD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,gCAAgC,EAAE,GAAG,CAAC,UAAU,CAAC;;;WACvF,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAA;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qDAAqD,CAAC;;;sCAGjH,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;;EAC1C;;AAID,QAAa,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAC3B,GAAG,EASH,GAAG;;;;AATH,QAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI;;AAC3B,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,EAAC,CAAC,CAAC;AACrF,SAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI;;;AAAC,AAGrE,SAAI,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,WAAW,EAC1D,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;;;AAAA,AAGvB,QAAG,GAAG,yBAAS,MAAM,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAChD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,gCAAgC,EAAE,GAAG,CAAC,UAAU,CAAC;;;WACvF,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAA;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qDAAqD,CAAC;;;WACpH,IAAI,CAAC,EAAE,KAAK,EAAE,CAAA;;;;;WAAQ,IAAI,KAAK,CAAC,uDAAuD,CAAC;;;;;AAG5F,SAAI,CAAC,OAAO,GAAG,oBAAE,GAAG,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;;;AAAC,uCAG/C,gBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC5C;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI;MAI7B,GAAG;;;;AAHP,SAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,EAAC,YAAY,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAC,CAAC;;;AAAC,AAG9D,QAAG,GAAG,yBAAS,MAAM,EAAE,IAAI,EAAE,EAAC,aAAa,EAAE,KAAK,EAAC,CAAC;;UACpD,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,gCAAgC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAGpF,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;;;;;;;EAC9C;;AAID,QAAa,MAAM,CAAC,IAAI,EAAE,EAAE;MAGvB,WAAW,EAWX,IAAI;;;;;qCAXgB,qBAAW,KAAK,CAAC,IAAI,EAAE,UAAA,CAAC;aAAI,CAAC,CACnD,MAAM,CAAC,EAAE,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC,CAC9B,MAAM,CAAC,EAAC,aAAa,EAAE,QAAQ,EAAC,CAAC,CACjC,EAAE,CAAC,UAAA,OAAO;cAAI,oBAAE,MAAM,CACtB,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACxB,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC;eAAI,CAAC,CAAC,SAAS,CAAC;QAAA,CAAC,EACzC,EAAE,CACF;OAAA,CAAC;MAAA,CACF;;;AARG,gBAAW;;qCAWE,gBAAM,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;;;AAA9C,SAAI;;;AAGR,SAAI,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC;;uCAEzB,IAAI;;;;;;;EACX;;AAID,AAAM,YAAW,CAAC,OAAO;;;;;;WAGpB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,OAAO,CAAA;;;;;;qCACN,qBAAW,KAAK,CAAC,IAAI,CAAC,gBAAM,OAAO,CAAC,IAAI,CAAC,EAAE,UAAA,CAAC;aAAI,CAAC,CAAC,MAAM,CAAC,MAAK,EAAE,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC;MAAA,CAAC;;;AAAhH,SAAI,CAAC,WAAW,CAAC;;;uCAEX,IAAI,CAAC,WAAW,CAAC;;;;;;;EACxB;;AAID,AAAM,MAAK,CAAC,OAAO;;;;;;WAGd,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,OAAO,CAAA;;;;;;qCACN,eAAK,KAAK,CAAC,IAAI,CAAC,gBAAM,OAAO,CAAC,IAAI,CAAC,EAAE,UAAA,CAAC;aAAI,CAAC,CAAC,MAAM,CAAC,OAAK,EAAE,EAAE,EAAC,KAAK,EAAE,aAAa,EAAC,CAAC;MAAA,CAAC;;;AAAxG,SAAI,CAAC,KAAK,CAAC;;;uCAEL,IAAI,CAAC,KAAK,CAAC;;;;;;;EAClB;;AAID,AAAM,OAAM,CAAC,OAAO;;;;;;WAGf,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,CAAA;;;;;;qCACN,gBAAM,KAAK,CAAC,IAAI,CAAC,gBAAM,OAAO,CAAC,IAAI,CAAC,EAAE,UAAA,CAAC;aAAI,CAAC,CAAC,MAAM,CAAC,OAAK,EAAE,EAAE,EAAC,KAAK,EAAE,SAAS,EAAC,CAAC;MAAA,CAAC;;;AAAtG,SAAI,CAAC,MAAM,CAAC;;;uCAEN,IAAI,CAAC,MAAM,CAAC;;;;;;;EACnB;;AAID,AAAM,KAAI,CAAC,OAAO;;;;WAGb,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,CAAA;;;;;UACZ,IAAI,CAAC,OAAO;;;;;;qCAAS,eAAK,GAAG,CAAC,IAAI,CAAC,gBAAM,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC;;;;;;;;oBAAG,IAAI;;;AAAzF,SAAI,CAAC,IAAI,CAAC;;;uCAEJ,IAAI,CAAC,IAAI,CAAC;;;;;;;EACjB;;AAID,AAAM,OAAM,CAAC,OAAO;MAEd,KAAK,EACL,MAAM;;;;WAFP,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,CAAA;;;;;;qCACT,IAAI,CAAC,KAAK,EAAE;;;AAA1B,UAAK;AACL,WAAM,GAAG,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI;aAAI,IAAI,CAAC,MAAM;MAAA,CAAC;;AAE3C,SAAI,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,MAAM,GACzB,MAAM,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC;aAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;MAAA,CAAC,GACpC,MAAM,CAAC;;;uCAGJ,IAAI,CAAC,MAAM,CAAC;;;;;;;EACnB;;AAID,AAAM,IAAG,CAAC,KAAK,EAAE,MAAM;MAClB,KAAK;;;;;qCAAS,IAAI,CAAC,KAAK,EAAE;;;AAA1B,UAAK;wCACF,KAAK,CAAC,IAAI,CAAC,UAAA,IAAI;aAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;MAAA,CAAC;;;;;;;EAClD;;CAGD;kBA1JoB,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICXb,MAAM;;;;;;;;;;;;;;;;;;AAMlB,IAAI,GAAG,GAAG,oBAAK,CAAC;;AAEhB,GAAG,CAAC,SAAS,CAAC;AACb,GAAE,EAAE,WAAW;AACf,KAAI,EAAE,QAAQ;AACd,WAAU,EAAE;AACX,WAAS,EAAE;AACV,OAAI,EAAE,QAAQ;AACd,UAAO,EAAE,GAAG;GACZ;AACD,SAAO,EAAE;AACR,OAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;AACxB,QAAK,EAAE,eAAe;AACtB,cAAW,EAAE,oGAAoG;GACjH;AACD,MAAI,EAAE;AACL,OAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;AACxB,QAAK,EAAE,uBAAuB;AAC9B,cAAW,EAAE,4GAA4G;GACzH;AACD,MAAI,EAAE;AACL,OAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;AACxB,QAAK,EAAE,iBAAiB;AACxB,cAAW,EAAE,sGAAsG;GACnH;EACD;CACD,CAAC,CAAC;;AAEH,GAAG,CAAC,SAAS,CAAC;AACb,GAAE,EAAE,YAAY;AAChB,KAAI,EAAE,QAAQ;AACd,WAAU,EAAE,EAAE;CACd,CAAC,CAAC;;AAEY,MAAM,aAAa,4BAAkB;;AAEnD,AAAM,aAAY,CAAC,GAAG;;;MAEjB,OAAO,EA+DN,KAAK,EAJL,UAAU,eAjBT,IAAI,EA6BL,eAAe;;;;;AAxEpB,QAAG,CAAC,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;AAC5B,YAAO,GAAG,GAAG,CAAC,KAAK;;;;WAInB,GAAG,CAAC,MAAM,KAAK,MAAM,IAAI,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAA;;;;;;qCACtC,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA7B,YAAO;;;;;WAIC,GAAG,CAAC,MAAM,KAAK,MAAM,IAAI,GAAG,CAAC,EAAE,CAAC,mCAAmC,CAAC,CAAA;;;;;;qCAC5D,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA7B,YAAO;;;UAMJ,OAAO,CAAC,KAAK;;;;;AAGhB,QAAG,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,GAAG,EAAI;AAC/C,UAAI;AACH,cAAO,KAAK,GAAG,uBAAI,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,EAAE;AACjD,kBAAU,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC;AAC3B,gBAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,WAAW,GAAG,MAAK,SAAS,CAAC,EAAE;AAChE,cAAM,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,WAAW,GAAG,MAAK,SAAS,CAAC,EAAE;QAC9D,CAAC,CAAC;OACH,CAAC,OAAO,GAAG,EAAE;AAAE,cAAO;OAAE;MACzB,CAAC,CAAC;;SAGE,KAAK;;;;;WACH,IAAI,MAAM,CAAC,mBAAmB,CAAC,2CAA2C,CAAC;;;;qCAI3D,qBAAW,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC;;;AAAvD,eAAU;;WAGX,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;;;;;WAChD,IAAI,MAAM,CAAC,mBAAmB,CAAC,2DAA2D,CAAC;;;;qCAG/E,OAAO,CAAC,GAAG,CAAC;;;AAG9B,oBAAK,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,OAAO,CAAC;;;AAGvC,eAAU,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC,CACnD,CAAC;;;;;AAPG,SAAI;;;;sCAUF,IAAI;;;UAMH,OAAO,CAAC,KAAK;;;;;;qCACE,qBAAW,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;;;AAAhF,eAAU;;;AAIV,UAAK,GAAG,uBAAI,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE;AAClE,eAAS,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS;AACjD,eAAS,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS;AACnC,cAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE;AAChE,aAAO,EAAE,UAAU,CAAC,EAAE;AACtB,YAAM,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE;MAC9D,CAAC;AAEE,oBAAe,GAAG;AACrB,WAAK,EAAE,KAAK;AACZ,gBAAU,EAAE,UAAU;AACtB,SAAG,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAA,AAAC,GAAG,QAAQ,GAAG,KAAK;MACvF;;;;;qCAIK,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;AAClB,QAAE,EAAE,OAAO,CAAC,KAAK;AACjB,aAAO,EAAE,qBAAW,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,IAAI,uBAAuB,CAAC,CAAC,eAAe,CAAC;AACvG,UAAI,EAAE,qBAAW,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,IAAI,qDAAqD,CAAC,CAAC,eAAe,CAAC;AAC/H,UAAI,EAAE,qBAAW,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,IAAI,0DAA0D,CAAC,CAAC,eAAe,CAAC;MACpI,CAAC;;;;AAEF,QAAG,CAAC,MAAM,GAAG,GAAG,CAAC;AACjB,QAAG,CAAC,IAAI,GAAG,EAAC,OAAO,EAAE,iBAAiB,GAAG,OAAO,CAAC,KAAK,GAAG,IAAI,EAAC,CAAC;;;;;;WAOzD,IAAI,MAAM,CAAC,eAAe,CAAC,0CAA0C,CAAC;;;;;;;;;;;;AAE7E,AAOD,QAAa,eAAe,CAAC,IAAI,EAAE,IAAI;MAGlC,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC1D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qCAAqC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAExF,mBAAS,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;;EACtD;;AAID,QAAa,eAAe,CAAC,SAAS,EAAE,KAAK;MAGxC,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC3D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qCAAqC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAExF,mBAAS,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC;;;;;;;;;;;;AAC5D,AAOD,AAAM,iBAAgB,CAAC,IAAI;MAGtB,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC3D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAEzF,mBAAS,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;;;;;;;EAC3D;;AAID,AAAM,iBAAgB,CAAC,UAAU,EAAE,KAAK;MAGnC,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC5D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAEzF,mBAAS,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC;;;;;;;EACxE;;CAED;kBAxJoB,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICxCtB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;AAQlB,IAAI,GAAG,GAAG,oBAAK,CAAC;;AAEhB,GAAG,CAAC,SAAS,CAAC;AACb,GAAE,EAAE,WAAW;AACf,KAAI,EAAE,QAAQ;AACd,WAAU,EAAE;AACX,WAAS,EAAE;AACV,OAAI,EAAE,QAAQ;AACd,QAAK,EAAE,WAAW;GAClB;AACD,eAAa,EAAE;AACd,OAAI,EAAE,QAAQ;AACd,QAAK,EAAE,eAAe;GACtB;AACD,oBAAkB,EAAE;AACnB,OAAI,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;AACxB,QAAK,EAAE,oBAAoB;AAC3B,cAAW,EAAE,qFAAqF;AAClG,UAAO,EAAE,IAAI;GACb;AACD,eAAa,EAAE;AACd,OAAI,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;AACvB,QAAK,EAAE,eAAe;AACtB,cAAW,EAAE,yFAAyF;AACtG,QAAK,EAAE;AACN,QAAI,EAAE,QAAQ;IACd;AACD,UAAO,EAAE,IAAI;GACb;AACD,UAAQ,EAAE;AACT,OAAI,EAAE,OAAO;AACb,QAAK,EAAE,UAAU;AACjB,cAAW,EAAE,wEAAwE;AACrF,UAAO,EAAE,EAAE;GACX;EACD;AACD,SAAQ,EAAE,CACT,WAAW,EACX,eAAe,CACf;CACD,CAAC,CAAC;;AAEH,GAAG,CAAC,SAAS,CAAC;AACb,GAAE,EAAE,YAAY;AAChB,KAAI,EAAE,QAAQ;AACd,WAAU,EAAE,EAAE;CACd,CAAC,CAAC;;AAEH,GAAG,CAAC,SAAS,mBAAe,CAAC;;AAE7B,SAAS,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE;AACxB,EAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACzB,QAAO,CAAC,CAAC,GAAG,CAAC,CAAC;AACd,QAAO,CAAC,CAAC;CACT;;AAGc,MAAM,cAAc,4BAAkB;;AAEpD,AAAM,aAAY,CAAC,GAAG;;;MAqKhB,KAAK,EAhJL,QAAQ,EAeR,OAAO,EAiBP,GAAG,EAYH,OAAO,EAIP,UAAU,EAAE,IAAI,EAoBf,gBAAgB,EAuDhB,WAAW,EA7BV,KAAK;;;;UA3GR,GAAG,CAAC,KAAK,CAAC,IAAI;;;;;;AAGjB,QAAG,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;AACjF,QAAG,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,MAAM,CAAC;;;AAAC,AAG3D,UAAK,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,QAAQ,CAAC;;WACxE,GAAG,CAAC,KAAK,CAAC,KAAK,KAAK,KAAK,CAAA;;;;;WACtB,IAAI,MAAM,CAAC,eAAe,CAAC,6BAA6B,CAAC;;;mBAIjD,IAAI;;qCAAa,8BAAQ;AACvC,YAAM,EAAE,MAAM;AACd,SAAG,EAAE,4CAA4C;AACjD,UAAI,EAAE;AACL,gBAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS;AAC3C,oBAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa;AACnD,mBAAY,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI;AAChF,iBAAU,EAAE,oBAAoB;AAChC,WAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI;AACpB,YAAK,EAAE,KAAK;OACZ;MACD,CAAC;;;;AAXE,aAAQ,eAAQ,KAAK;mBAeX,IAAI;;qCAAa,8BAAQ;AACtC,YAAM,EAAE,KAAK;AACb,SAAG,EAAE,8CAA8C;AACnD,aAAO,EAAE;AACR,sBAAe,EAAE,SAAS,GAAG,QAAQ,CAAC,YAAY;OAClD;MACD,CAAC;;;;AANE,YAAO,eAAQ,KAAK;;;AAWxB,SAAG,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAC9B,OAAO,CAAC,IAAI,GAAG,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,GAAG,EAAC,CAAC,CAAC;;AAEvC,SAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EACvD,OAAO,CAAC,MAAM,GAAG,CAAC,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,GAAG,EAAC,CAAC,CAAC;;AAE3C,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,OAAO,EAAE,EAAC,gBAAgB,EAAE,IAAI,EAAC,CAAC;;UAChE,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,GAAG,CAAC,UAAU,CAAC;;;;;;;;;;;AAW7F,YAAO,GAAG,uBAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;;;qCASvB,qBAAW,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE;AACjF,aAAO,EAAE,OAAO;AAChB,aAAO,EAAE,OAAO;MAChB,CAAC;;;AAHF,eAAU;;qCAIG,eAAK,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,OAAO,CAAC;;;AAApD,SAAI;;;;;;;;SACiB,uBAAe,MAAM,CAAC,aAAa;;;;;;;;WAKrD,CAAC,UAAU,IACX,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,IACzC,OAAO,CAAC,KAAK,IACb,OAAO,CAAC,cAAc,CAAA;;;;;;;qCAEI,qBAAW,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;;;AAA9G,qBAAgB;;qCACP,eAAK,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,OAAO,CAAC;;;AAA1D,SAAI;;qCAGe,qBAAW,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;AAC/C,QAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC;AACpC,aAAO,EAAE,gBAAgB,CAAC,OAAO;AACjC,aAAO,EAAE,OAAO;AAChB,aAAO,EAAE,OAAO;MAChB,CAAC;;;AALF,eAAU;;;AAQN,gBAAW,GAAG,EAAE;AAAE,gBAAW,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;;qCAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,EAAE;aAAI,eAAK,MAAM,CAAC,MAAK,IAAI,EAAE,EAAE,EAAE;AACtF,kBAAW,EAAE,WAAW;OACxB,CAAC;MAAA,CAAC,CAAC;;;;;;;;;;SAEiB,uBAAe,MAAM,CAAC,aAAa;;;;;;;;SAKpD,UAAU;;;;;UAGV,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC;;;;;AAClD,UAAK,GAAG,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;;WACjC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;;;;;WACxE,IAAI,MAAM,CAAC,mBAAmB,CAAC,oBAAoB,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,mBAAmB,CAAC;;;;qCAI/F,eAAK,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;AACnC,UAAI,EAAE,OAAO;AACb,aAAO,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;MAC/B,CAAC;;;AAHF,SAAI;;qCAMe,qBAAW,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;AAC/C,QAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC;AACpC,aAAO,EAAE,IAAI,CAAC,EAAE;AAChB,aAAO,EAAE,OAAO;AAChB,aAAO,EAAE,OAAO;MAChB,CAAC;;;AALF,eAAU;;UAQN,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB;;;;;;qCACtC,qBAAW,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;AAClC,QAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,EAAE,OAAO,CAAC,KAAK,CAAC;AAC9D,aAAO,EAAE,IAAI,CAAC,EAAE;AAChB,aAAO,EAAE,IAAI;MACb,CAAC;;;;;AAIC,gBAAW,GAAG,EAAE;AAAE,gBAAW,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC;;qCAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,EAAE;aAAI,eAAK,MAAM,CAAC,MAAK,IAAI,EAAE,EAAE,EAAE;AACtF,kBAAW,EAAE,WAAW;OACxB,CAAC;MAAA,CAAC,CAAC;;;sCAIE,IAAI;;;;;AAWX,QAAG,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;;;AAAC,AAG1E,UAAK,GAAG,iBAAO,WAAW,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC;;AACrD,QAAG,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,QAAQ,EAAE,KAAK,CAAC;;;AAAC,AAGxE,QAAG,CAAC,QAAQ,CAAC,4CAA4C,GAAG,sBAAG,SAAS,CAAC;AACxE,eAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS;AAC3C,kBAAY,EAAE,GAAG,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI;AAChF,mBAAa,EAAE,MAAM;AACrB,WAAK,EAAE,iGAAiG;AACxG,WAAK,EAAE,KAAK;MACZ,CAAC,CAAC,CAAC;;;;;;;;;;;;AAIL,AAOD,QAAa,eAAe,CAAC,IAAI,EAAE,IAAI;MAGlC,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC1D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qCAAqC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAExF,mBAAS,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;;EACvD;;AAID,QAAa,eAAe,CAAC,SAAS,EAAE,KAAK;MAGxC,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC3D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qCAAqC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAExF,mBAAS,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC;;;;;;;;;;;;AAC7D,AAOD,AAAM,iBAAgB,CAAC,IAAI;MAGtB,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC1D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAE1F,mBAAS,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;;;;;;;EAC3D;;AAID,AAAM,iBAAgB,CAAC,UAAU,EAAE,KAAK;MAGnC,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC3D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAE1F,mBAAS,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC;;;;;;;EACxE;;CAED;kBAzOoB,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICjEvB,MAAM;;;;;;;;;;;;;;;;;;AAMlB,IAAI,GAAG,GAAG,oBAAK,CAAC;;AAEhB,GAAG,CAAC,SAAS,CAAC;AACb,GAAE,EAAE,WAAW;AACf,KAAI,EAAE,QAAQ;AACd,WAAU,EAAE;AACX,QAAM,EAAE;AACP,OAAI,EAAE,QAAQ;AACd,QAAK,EAAE,eAAe;AACtB,cAAW,EAAE,iHAAiH;AAC9H,UAAO,EAAE,CAAC;GACV;EACD;CACD,CAAC,CAAC;;AAEH,GAAG,CAAC,SAAS,CAAC;AACb,GAAE,EAAE,YAAY;AAChB,KAAI,EAAE,QAAQ;AACd,WAAU,EAAE;AACX,UAAQ,EAAE;AACT,OAAI,EAAE,QAAQ;AACd,QAAK,EAAE,UAAU;AACjB,cAAW,EAAE,oEAAoE;GACjF;EACD;CACD,CAAC,CAAC;;AAEY,MAAM,gBAAgB,4BAAkB;;AAEtD,AAAM,aAAY,CAAC,GAAG;MAEjB,OAAO,EAeN,KAAK,EAoBN,aAAa,EASb,QAAQ,EAMR,OAAO,EAMP,UAAU,eAUT,IAAI;;;;;AAnET,QAAG,CAAC,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;;WAK5B,GAAG,CAAC,MAAM,KAAK,MAAM,IAAI,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAA;;;;;;qCACtC,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA7B,YAAO;;;;;WAIC,GAAG,CAAC,MAAM,KAAK,MAAM,IAAI,GAAG,CAAC,EAAE,CAAC,mCAAmC,CAAC,CAAA;;;;;;qCAC5D,oBAAK,GAAG,CAAC,GAAG,CAAC;;;AAA7B,YAAO;;;;;AAKH,UAAK,GAAG,yBAAK,GAAG,CAAC,GAAG,CAAC;;AACzB,SAAG,KAAK,EAAE,IAAI;AACb,aAAO,GAAG;AACT,eAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;AAChC,eAAQ,EAAE,KAAK,CAAC,IAAI;OACpB,CAAC;MACF,CAAC,OAAO,GAAG,EAAE;AACb,SAAG,CAAC,KAAK,CAAC,GAAG,EAAE,0GAA0G,CAAC,CAAC;MAC3H;;;;;AAKF,SAAI,CAAC,OAAO,EAAE;AACb,SAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,eAAe,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;AAC1E,SAAG,CAAC,KAAK,CAAC,GAAG,EAAE,sCAAsC,CAAC,CAAC;MACvD;;;AAAA,AAIG,kBAAa,GAAG,OAAO,CAAC,QAAQ;;AACpC,SACC,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAC7B,aAAa,CAAC,MAAM,KAAK,CAAC,IAC1B,CAAC,aAAa,CAAC,KAAK,CAAC,UAAA,CAAC;aAAI,OAAO,CAAC,KAAK,QAAQ;MAAA,CAAC,EAC/C,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,mFAAmF,CAAC,CAAC;;;AAAA,AAIlG,aAAQ,GAAG,OAAO,CAAC,QAAQ;;AAC/B,SAAI,CAAC,QAAQ,EACZ,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,8CAA8C,CAAC,CAAC;;;AAAA;WAIjD,aAAa,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE,CAAA;;;;;mBACpD,aAAa,CAAC,CAAC,CAAC;;;;;;qCACP,qBAAW,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC;;;iCAAE,OAAO;;;AAFvD,YAAO;;qCAMY,qBAAW,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;;;AAA1E,eAAU;;qCAIH,YAlGL,OAAO,EAkGM,QAAQ,EAAE,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;;;;;;;;AACpD,QAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,CAAC;AACnD,QAAG,CAAC,KAAK,CAAC,GAAG,EAAE,qBAAqB,CAAC,CAAC;;;;qCAIpB,OAAO,CAAC,GAAG,CAAC;;;AAG9B,oBAAK,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;;;AAG5B,eAAU,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE,CAAC,CACnD,CAAC;;;;;AAPG,SAAI;;;;sCAWF,IAAI;;;;;;;;;;;;AACX,AAOD,QAAa,eAAe,CAAC,IAAI,EAAE,IAAI;MAGlC,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC1D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qCAAqC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAExF,mBAAS,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;;;;;;EACvD;;AAID,QAAa,eAAe,CAAC,SAAS,EAAE,KAAK;MAGxC,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC3D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,qCAAqC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAExF,mBAAS,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC;;;;;;;;;;;;AAC7D,AAOD,AAAM,iBAAgB,CAAC,IAAI;MAGtB,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC3D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAEzF,mBAAS,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;;;;;;;EAC3D;;AAID,AAAM,iBAAgB,CAAC,UAAU,EAAE,KAAK;MAGnC,GAAG;;;;;;AAAH,QAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;;UAC5D,GAAG;;;;;WAAQ,IAAI,MAAM,CAAC,eAAe,CAAC,sCAAsC,EAAE,GAAG,CAAC,UAAU,CAAC;;;uCAEzF,mBAAS,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC;;;;;;;EACxE;;CAED;kBAtIoB,gBAAgB;;;;;;;;;;;;;;ACpC9B,IAAI,OAAO,WAAP,OAAO,GAAG,iBAAO,CAAC;;;;qCACrB,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACvC,YAAO,iBAAO,OAAO,CAAC,CAAC,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACtC,UAAG,GAAG,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,aAAO,OAAO,CAAC,GAAG,CAAC,CAAC;MACpB,CAAC,CAAC;KACH,CAAC;;;;;;;CACF,CAAC;;AAEK,IAAI,IAAI,WAAJ,IAAI,GAAG,kBAAO,CAAC,EAAE,CAAC;;;;sCACrB,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACvC,YAAO,iBAAO,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACtC,UAAG,GAAG,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,aAAO,OAAO,CAAC,GAAG,CAAC,CAAC;MACpB,CAAC,CAAC;KACH,CAAC;;;;;;;CACF,CAAC;;AAEK,IAAI,OAAO,WAAP,OAAO,GAAG,kBAAO,CAAC,EAAE,CAAC;;;;sCACxB,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACvC,YAAO,iBAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACzC,UAAG,GAAG,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,aAAO,OAAO,CAAC,GAAG,CAAC,CAAC;MACpB,CAAC,CAAC;KACH,CAAC;;;;;;;CACF,CAAC;;;;;;;;;;;;;;;;;ICzBU,MAAM;;;;;;kBAEH,SAAe,IAAI,CAAC,GAAG;KAEhC,IAAI;;;;;;oCAAS,uBAAM,GAAG,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;;;AAA7C,QAAI;qCACD,sBAAG,KAAK,CAAC,IAAI,CAAC;;;;;UAEf,IAAI,MAAM,CAAC,eAAe,CAAC,yCAAyC,CAAC;;;;;;;CAE5E;;;;;;;;;;;;;ICVW,MAAM;;;;;;kBAEH,SAAe,IAAI,CAAC,GAAG;KAEhC,IAAI;;;;;;oCAAS,uBAAM,GAAG,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC;;;AAA7C,QAAI;qCACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;;;;;UAEjB,IAAI,MAAM,CAAC,eAAe,CAAC,oCAAoC,CAAC;;;;;;;CAEvE;;;;;;kBCRuB,MAAM;;;;;;;;AAAf,SAAS,MAAM,CAAC,MAAM,EAAE;;;AAGtC,KAAI,SAAS,GAAG,MAAM,CAAC,SAAS,GAC/B,qBAAW,eAAe,CAAC,MAAM,CAAC,SAAS,CAAC,GAC1C,EAAE,QAAQ,EAAE,UAAC,OAAO,EAAE,EAAE,EAAK;AAC9B,UAAO,CAAC,IAAI,CAAC,kDAAkD,EAAE,OAAO,CAAC,CAAC;AAC1E,KAAE,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;GAClB,EAAC;;;AAAC,AAGJ,QAAO,UAAC,OAAO,EAAK;AACnB,SAAO,IAAI,OAAO,CAAE,UAAC,OAAO,EAAE,MAAM,EAAK;AACxC,UAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACtD,YAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAC,GAAG,EAAE,GAAG,EAAK;AACzC,QAAG,GAAG,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,WAAO,OAAO,CAAC,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC;GACH,CAAC,CAAC;EACH,CAAC;CACF;ACtBD,YAAY,CAAC;;;;;;;;;;;;;;;;AAKE,MAAM,IAAI,CAAC;;AAEzB,YAAW,CAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,iBAAiB,EAAE;AAClD,MAAI,CAAC,IAAI,GAAG,sBAAG,IAAI,CAAC;AACnB,OAAI,EAAE,WAAW;AACjB,SAAM,EAAE,UAAC,QAAQ,EAAK;AACrB,WAAO,oBAAE,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACpC;AACD,UAAO,EAAE,UAAC,UAAU,EAAK;AACxB,WAAO,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B;AACD,MAAG,EAAE,KAAK;AACV,MAAG,EAAE,GAAG,IAAI,CAAC;AACb,MAAG,EAAE,GAAG,IAAI,EAAE;AACd,oBAAiB,EAAE,iBAAiB,IAAI,KAAK;GAC7C,CAAC,CAAC;EACH;;AAED,QAAO,GAAG;;;AACT,SAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAK;AACvC,UAAO,MAAK,IAAI,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,IAAI,EAAK;AACvC,QAAG,GAAG,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,QAAI,CAAC,OAAO,GAAG,YAAM;AACpB,YAAO,MAAK,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC/B,CAAC;AACF,WAAO,CAAC,IAAI,CAAC,CAAC;IACd,CAAC,CAAC;GACH,CAAC,CAAC;EACH;;CAED;kBA9BoB,IAAI;;;;;;QCFH,GAAG,GAAH,GAAG;QAoBH,OAAO,GAAP,OAAO;;;;IAvBjB,MAAM;;;;IACN,MAAM;;;;AAEX,SAAe,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM;;;;SAGvC,GAAG,CAAC,MAAM;;;;;UAEZ,GAAG,CAAC,MAAM,CAAC,IAAI,KAAK,cAAc,IAC/B,GAAG,CAAC,MAAM,CAAC,MAAM,IACjB,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,CAAC;YAAI,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC;KAAA,CAAC,CAAA;;;;;qCACpD,IAAI;;;;;;;kBAKL,GAAG,CAAC,IAAI;;;;;;;;oCAAU,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;;;;;;;;;;;qCAC9C,IAAI;;;qCAGL,KAAK;;;;;;;CACZ;;AAEM,SAAe,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM;;;;;oCACrC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,MAAM,CAAC;;;;;;;;;;;UAC3B,IAAI,MAAM,CAAC,cAAc,CAAC,8CAA8C,GAAG,KAAK,GAAG,IAAI,CAAC;;;;;;;CAC9F;;;;;;QCxBe,aAAa,GAAb,aAAa;QA4Bb,UAAU,GAAV,UAAU;;;;IA9Bd,MAAM;;;;AAEX,SAAS,aAAa,CAAC,UAAU,EAAE,GAAG,EAAE;AAC9C,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EACrB,OAAO,IAAI,CAAC;;;AAAA,AAIb,KAAI,QAAQ,CAAC;AACb,KAAI;AAAE,UAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;EAAE,CAAC,OAAO,GAAG,EAAE;AAC7D,QAAM,IAAI,MAAM,CAAC,eAAe,CAAC,mDAAmD,CAAC,CAAC;EACtF;;AAGD,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAC3B,MAAM,IAAI,MAAM,CAAC,eAAe,CAAC,8DAA8D,CAAC,CAAC;;AAGlG,SAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,EAAI;AACrB,MAAI,OAAO,CAAC,KAAK,QAAQ,EACxB,MAAM,IAAI,MAAM,CAAC,eAAe,CAAC,sFAAsF,CAAC,CAAC;;AAE1H,MAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAC/B,MAAM,IAAI,MAAM,CAAC,eAAe,CAAC,8DAA8D,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;EAC7G,CAAC,CAAC;;AAGH,QAAO,QAAQ,CAAC;CAChB;;AAEM,SAAS,UAAU,CAAC,GAAG,EAAE;AAC/B,KAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EACtB,OAAO,IAAI,CAAC;;;AAAA,AAIb,KAAI,QAAQ,CAAC;AACb,KAAI;AAAE,UAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;EAAE,CAAC,OAAO,GAAG,EAAE;AAC9D,QAAM,IAAI,MAAM,CAAC,eAAe,CAAC,oDAAoD,CAAC,CAAC;EACvF;;AAGD,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAC3B,MAAM,IAAI,MAAM,CAAC,eAAe,CAAC,+DAA+D,CAAC,CAAC;;AAGnG,SAAQ,CAAC,OAAO,CAAC,UAAA,CAAC,EAAI;AACrB,MAAI,OAAO,CAAC,KAAK,QAAQ,EACxB,MAAM,IAAI,MAAM,CAAC,eAAe,CAAC,uFAAuF,CAAC,CAAC;EAC3H,CAAC,CAAC;;AAGH,QAAO,QAAQ,CAAC;CAChB;;;;;;;;;;;;;;;;;;AClDD,IAAI,cAAc,GAAG,yBAAM;AAC1B,UAAS,EAAE,IAAI;AACf,OAAM,EAAE,KAAK;AACb,IAAG,EAAE,IAAI;CACT,CAAC,CAAC;;AAEH,IAAI,UAAU,GAAG,yBAAM;AACtB,UAAS,EAAE,IAAI;AACf,OAAM,EAAE,KAAK;AACb,IAAG,EAAE,KAAK;CACV,CAAC,CAAC;;AAEH,SAAS,SAAS,CAAC,MAAM,EAAE;AAC1B,QAAO,UAAC,IAAI,EAAE,EAAE,EAAK;AACpB,MAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACzB,SAAO,UAAC,GAAG,EAAE,IAAI,EAAK;AACrB,OAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC;;;AAAC,AAGjD,OAAI,CAAC,MAAM,EACV,OAAO,IAAI,EAAE,CAAC;;;AAAA,AAGf,OAAG,GAAG,CAAC,MAAM,EACZ,iBAAE,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,KAE5B,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;;;AAAA,AAGrB,UAAO,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;GACrB,CAAC;EACF,CAAC;CACF;;AAED,SAAS,eAAe,CAAC,MAAM,EAAE,MAAM,EAAE;AACxC,QAAO,UAAC,IAAI,EAAE,EAAE,EAAK;AACpB,MAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACzB,SAAO,UAAC,GAAG,EAAE,IAAI,EAAK;;;AAGrB,OAAI,GAAG,CAAC,MAAM,KAAK,MAAM,EACxB,OAAO,IAAI,EAAE,CAAC;;AAEf,OAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC;;;AAAC,AAGjD,OAAI,CAAC,MAAM,EACV,OAAO,IAAI,EAAE,CAAC;;;AAAA,AAGf,OAAG,GAAG,CAAC,MAAM,EACZ,iBAAE,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,KAE5B,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;;;AAAA,AAGrB,UAAO,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;GACrB,CAAC;EACF,CAAC;CACF;;AAEM,IAAI,GAAG,WAAH,GAAG,GAAK,eAAe,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;AACnD,IAAI,GAAG,WAAH,GAAG,GAAK,eAAe,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;AACnD,IAAI,IAAI,WAAJ,IAAI,GAAI,eAAe,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;AACpD,IAAI,KAAK,WAAL,KAAK,GAAG,eAAe,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;AACrD,IAAI,GAAG,WAAH,GAAG,GAAK,eAAe,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;AACtD,IAAI,GAAG,WAAH,GAAG,GAAK,SAAS,CAAC,cAAc,CAAC,CAAC;AACtC,IAAI,GAAG,WAAH,GAAG,GAAK,SAAS,CAAC,UAAU,CAAC,CAAC;;;;;;QCpDzB,QAAQ,GAAR,QAAQ;QAKR,SAAS,GAAT,SAAS;QAWT,OAAO,GAAP,OAAO;QAkFP,kBAAkB,GAAlB,kBAAkB;QAmClB,kBAAkB,GAAlB,kBAAkB;QAOlB,GAAG,GAAH,GAAG;;;;AA9JnB,SAAS,UAAU,CAAC,KAAK,EAAE;AAC1B,KAAI,OAAO,GAAG,KAAK,CACjB,KAAK,CAAC,GAAG,CAAC,CACV,GAAG,CAAC,UAAA,MAAM;SAAI,MAAM,CACnB,KAAK,CAAC,GAAG,CAAC,CACV,GAAG,CAAC,UAAA,IAAI,EAAI;AACZ,OAAI,IAAI,KAAK,IAAI,EAAE,OAAO,SAAS,CAAC;AACpC,OAAI,IAAI,KAAK,GAAG,EAAE,OAAO,mBAAmB,CAAC;AAC7C,UAAO,IAAI,CAAC,OAAO,CAAC,qCAAqC,EAAE,MAAM,CAAC,CAAC;GACnE,CAAC,CACD,IAAI,CAAC,KAAK,CAAC;EAAA,CACZ,CACA,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEZ,QAAO,IAAI,MAAM,CAAC,GAAG,GAAG,OAAO,GAAG,GAAG,CAAC,CAAC;CACvC;;AAGM,SAAS,QAAQ,CAAC,KAAK,EAAE;AAC/B,QAAO,gNAA+M,CAAC,IAAI,CAAC,KAAK,CAAC;GAAC;CACnO;;AAGM,SAAS,SAAS,CAAC,KAAK,EAAE;AAChC,QAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,MAAM;SAAK,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAK;AACjF,OAAI,IAAI,KAAK,IAAI,IAAK,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,KAAK,IAAI,IAAI,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,KAAK,GAAG,AAAC,EAC/D,OAAO,IAAI,CAAC;AACb,QAAK,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAClB,UAAO,GAAG,CAAC;GACX,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;EAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACxB;;;AAAA,AAIM,SAAS,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE;AAC7B,EAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACjB,EAAC,GAAG,SAAS,CAAC,CAAC,CAAC;;;AAAC,AAGjB,KAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;;AAErB,KAAI,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AACvB,KAAI,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;;AAEvB,KAAI,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB,KAAI,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;;;AAAC,AAGrB,KAAI,GAAG,IAAI,CAAC,GAAG,EAAG,OAAO,CAAC,CAAC;;;AAAA,AAG3B,KAAI,GAAG,IAAI,CAAC,GAAG,EAAG,OAAO,CAAC,CAAC;;;;;AAAA,AAS3B,KAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EACvC,OAAO,IAAI,CAAC;;;;;AAAA,AAQb,KAAI,YAAY,GAAG,EAAE,CAAC;AACtB,KAAI,WAAW,GAAG,EAAE,CAAC;AACrB,KAAI,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,MAAM,EAAE,CAAC;SAAK,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,CAAC,EAAK;AACtF,eAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACxC,eAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;;AAE1B,OAAI,IAAI,KAAK,IAAI,EAAE;AAClB,eAAW,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;AACxC,WAAO,SAAS,CAAC;IACjB;;AAED,OAAI,IAAI,KAAK,GAAG,EAAE;AACjB,eAAW,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;AACvC,WAAO,aAAa,CAAC;IACrB;;AAED,UAAO,SAAS,CAAC;GACjB,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;EAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;;AAEhC,KAAI,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;;;AAAC,AAI/B,KAAI,CAAC,OAAO,EACX,OAAO,IAAI,CAAC;;;AAAA,AAIb,YAAW,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,CAAC,EAAK;AAC/B,cAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,AAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,GAAI,GAAG,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/F,CAAC;;;AAAC,AAIH,KAAI,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,UAAA,CAAC;SAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;EAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;;;AAAC,AAI5D,KAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EACpB,OAAO,QAAQ,CAAC;;AAGjB,QAAO,IAAI,CAAC;CACZ;;;AAAA,AAIM,SAAS,kBAAkB,CAAC,UAAU,EAAE;;;AAG9C,KAAI,MAAM,GAAG,EAAE;;;AAAC,AAGhB,KAAI,IAAI,GAAG,EAAE,CAAC;AACd,MAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,MAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS;AACrC,MAAI,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;;AAE9B,OAAK,IAAI,CAAC,GAAG,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,OAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS;AACrC,OAAI,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC;;;AAAC,AAG/B,OAAI,SAAS,IAAI,UAAU,IAAI,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC,EACxD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;AAAC,QAGT,IAAI,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,EAAE;AACpC,SAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,MAAC,GAAG,CAAC,CAAC;AACN,cAAS,GAAG,UAAU,CAAC;KACvB;GACD;;;AAAA,AAGD,QAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACvB;;AAED,QAAO,MAAM,CAAC;CACd;;;AAAA,AAGM,SAAS,kBAAkB,CAAC,WAAW,EAAE,WAAW,EAAE;;;AAC5D,QAAO,kBAAkB,CAAC,QAAA,EAAE,EAAC,MAAM,MAAA,0BAAI,WAAW,CAAC,GAAG,CAAC,UAAC,CAAC;SACxD,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,CAAC;UAAK,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;GAAA,CAAC,CAAC,MAAM,CAAC,UAAA,CAAC;UAAI,CAAC;GAAA,CAAC,CAAC;EAAA,CAC/D,EAAC,CAAC,CAAC;CACJ;;;AAAA,AAGM,SAAS,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE;AAC1C,OAAM,GAAI,MAAM,KAAK,KAAK,AAAC,CAAC;;AAE5B,KAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EACtB,OAAO,IAAI,CAAC,IAAI,CAAC,UAAA,CAAC;SAAI,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC;EAAA,CAAC,CAAC;;AAEhD,QAAO,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;CAC1E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1JD,IAAI,GAAG,GAAG,oBAAK,CAAC;;AAEhB,GAAG,CAAC,SAAS,CAAC,WAAW,sBAAY,CAAC;AACtC,GAAG,CAAC,SAAS,CAAC,QAAQ,mBAAS,CAAC;AAChC,GAAG,CAAC,SAAS,CAAC,YAAY,uBAAa,CAAC;AACxC,GAAG,CAAC,SAAS,CAAC,OAAO,kBAAQ,CAAC;AAC9B,GAAG,CAAC,SAAS,CAAC,SAAS,oBAAU,CAAC;AAClC,GAAG,CAAC,SAAS,CAAC,MAAM,iBAAO,CAAC;AAC5B,GAAG,CAAC,SAAS,CAAC,MAAM,iBAAO,CAAC;AAC5B,GAAG,CAAC,SAAS,CAAC,MAAM,iBAAO,CAAC;;kBAEb,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC","file":"authx.js","sourcesContent":["import r from 'rethinkdb';\nimport _ from 'lodash';\n\nimport * as errors from './errors';\n\nconst CONN = Symbol('conn');\n\nexport default class Model {\n\n\n\n\t// Static Methods\n\t// --------------\n\n\tstatic get table() {\n\t\tthrow new Error('A Model must define a static getter `table`.');\n\t}\n\n\n\n\tstatic parseRethinkError(message) {\n\n\t\t// duplicate key\n\t\tif(message && message.indexOf('Duplicate primary key') === 0)\n\t\t\treturn new errors.ConflictError('A record with the same id already exists.');\n\n\t\t// other error\n\t\treturn new Error(message);\n\t}\n\n\n\n\t// get a record by its primary ID\n\tstatic async query(conn, transform) {\n\t\tif (!transform) transform = (q => q);\n\n\t\tvar result = await transform(r.table(this.table)).run(conn);\n\t\tresult = await result.toArray();\n\n\t\treturn result.map( record => new this(conn, record) );\n\t}\n\n\n\n\t// get a record by its primary ID\n\tstatic async get(conn, id) {\n\t\tvar result = await r.table(this.table).get(id).run(conn);\n\t\tif(!result)\n\t\t\tthrow new errors.NotFoundError();\n\n\t\treturn new this(conn, result);\n\t}\n\n\n\n\t// update a record by its primary ID\n\tstatic async update(conn, id, data) {\n\t\tvar result = await r.table(this.table).get(id).update(data, {returnChanges: 'always'}).run(conn);\n\n\t\tif(result.errors > 0)\n\t\t\tthrow this.parseRethinkError(result.first_error);\n\n\t\tif(!result.replaced && !result.unchanged)\n\t\t\tthrow new errors.NotFoundError();\n\n\t\treturn new this(conn, result.changes[0].new_val);\n\t}\n\n\n\n\t// save a record by its primary ID\n\tstatic async save(conn, id, data) {\n\t\tvar result = await r.table(this.table).get(id).replace(data, {returnChanges: 'always'}).run(conn);\n\n\t\tif(result.errors > 0)\n\t\t\tthrow this.parseRethinkError(result.first_error);\n\n\t\treturn new this(conn, result.changes[0].new_val);\n\t}\n\n\n\n\t// delete a record by its primary ID\n\tstatic async delete(conn, id) {\n\t\tvar result = await r.table(this.table).get(id).delete({returnChanges: 'always'}).run(conn);\n\n\t\tif(result.errors > 0)\n\t\t\tthrow this.parseRethinkError(result.first_error);\n\n\t\tif(!result.deleted)\n\t\t\tthrow new errors.NotFoundError();\n\n\t\treturn new this(conn, result.changes[0].old_val);\n\t}\n\n\n\n\t// create a new record\n\tstatic async create(conn, data) {\n\n\t\tvar result = await r.table(this.table).insert(data, {returnChanges: 'always'}).run(conn);\n\t\tif(result.errors > 0)\n\t\t\tthrow this.parseRethinkError(result.first_error);\n\n\t\tif(!result.inserted)\n\t\t\tthrow new errors.NotFoundError();\n\n\t\treturn new this(conn, result.changes[0].new_val);\n\t}\n\n\n\n\t// Constructor\n\t// -----------\n\n\tconstructor(conn, data) {\n\n\t\t// assign data\n\t\t_.assign(this, data);\n\n\t\t// assign the connection\n\t\tthis[Model.Symbols.CONN] = conn;\n\n\t}\n\n\n\n\t// Methods\n\t// -------\n\n\t// update this model instance\n\tasync update(data) {\n\t\treturn await this.constructor.update(this[Model.Symbols.CONN], this.id, data);\n\t}\n\n\t// delete this model instance{}\n\tasync delete() {\n\t\treturn await this.constructor.delete(this[Model.Symbols.CONN], this.id);\n\t}\n\n\n}\n\nModel.Symbols = {\n\tCONN: CONN\n};\n","import Authority from './models/Credential';\nimport Credential from './models/Credential';\n\nexport default class EmailStarategy {\n\tconstructor(conn, authority) {\n\t\tthis.conn = conn;\n\t\tthis.authority = authority;\n\t}\n\n\n\n\t// Authenticate\n\t// ------------\n\t// The authenticate method is passed a Koa context, and is responsible for interfacing directly with the user. When a user has\n\t// successfully authenticated, it must return the corresponding User object, which the service will use to generate a token.\n\t//\n\t// If appropriate, the strategy may also attempt to resolve an unknown user based on other credentials (such as email), and even\n\t// create a new User if necessary. If a strategy does this, its mapping to other strategies/credentials must be configurable, as\n\t// to avoid tightly coupling them.\n\n\tasync authenticate() {\n\t\tthrow new Error('The authenticate method must be implemented in each strategy.');\n\t}\n\n\n\n\t// Authority Methods\n\t// -----------------\n\n\tstatic async createAuthority(conn, data) {\n\t\treturn Authority.create(this.conn, data);\n\t}\n\n\n\n\tstatic async updateAuthority(authority, delta) {\n\t\treturn await authority.update(delta);\n\t}\n\n\n\n\tstatic async deleteAuthority(authority) {\n\t\treturn await authority.delete();\n\t}\n\n\n\n\t// Credential Methods\n\t// ------------------\n\n\tasync createCredential(data) {\n\t\treturn Credential.create(this.conn, data);\n\t}\n\n\n\n\tasync updateCredential(credential, delta) {\n\t\treturn await credential.update(delta);\n\t}\n\n\n\n\tasync deleteCredential(credential) {\n\t\treturn await credential.delete();\n\t}\n\n}\n","export class ValidationError extends Error {\n\tconstructor(message, validation, fileName, lineNumber) {\n\t\tsuper(message, fileName, lineNumber);\n\t\tthis.message = message || 'The data is not valid.';\n\t\tthis.validation = validation || {};\n\t\tthis.status = this.statusCode = 400;\n\t}\n\n\texpose() {\n\t\treturn {\n\t\t\tmessage: this.message,\n\t\t\tvalidation: this.validation\n\t\t};\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message, fileName, lineNumber) {\n\t\tsuper(message, fileName, lineNumber);\n\t\tthis.expose = true;\n\t\tthis.message = message || 'The resource does not exist.';\n\t\tthis.status = this.statusCode = 404;\n\t}\n}\n\nexport class ConflictError extends Error {\n\tconstructor(message, fileName, lineNumber) {\n\t\tsuper(message, fileName, lineNumber);\n\t\tthis.expose = true;\n\t\tthis.message = message || 'A duplicate resource already exists.';\n\t\tthis.status = this.statusCode = 409;\n\t}\n}\n\nexport class AuthenticationError extends Error {\n\tconstructor(message, fileName, lineNumber) {\n\t\tsuper(message, fileName, lineNumber);\n\t\tthis.expose = true;\n\t\tthis.message = message || 'Authentication failed.';\n\t\tthis.status = this.statusCode = 401;\n\t}\n}\n\nexport class ForbiddenError extends Error {\n\tconstructor(message, fileName, lineNumber) {\n\t\tsuper(message, fileName, lineNumber);\n\t\tthis.expose = true;\n\t\tthis.message = message || 'The action is forbidden.';\n\t\tthis.status = this.statusCode = 403;\n\t}\n}\n\n","import * as errors from './errors';\nimport * as route from './util/route';\nimport * as scopes from './util/scopes';\nimport Koa from 'koa';\nimport mailer from './util/mailer';\nimport Pool from './util/pool';\nimport {can} from './util/protect';\n\n\n// strategies\nimport EmailStrategy from './strategies/email';\nimport GoogleStrategy from './strategies/google';\nimport PasswordStrategy from './strategies/password';\n\n\n\n// middleware\nimport bearerMiddleware from './middleware/bearer';\nimport corsMiddleware from './middleware/cors';\nimport dbMiddleware from './middleware/db';\nimport errorMiddleware from './middleware/error';\nimport userMiddleware from './middleware/user';\n\n\n\n// controllers\nimport * as authorityController from './controllers/authorities';\nimport * as clientController from './controllers/clients';\nimport * as credentialController from './controllers/credentials';\nimport * as grantController from './controllers/grants';\nimport * as roleController from './controllers/roles';\nimport * as teamController from './controllers/teams';\nimport * as userController from './controllers/users';\nimport sessionController from './controllers/session';\nimport tokensController from './controllers/tokens';\n\n\nexport default class AuthX extends Koa {\n\n\tconstructor(config, strategies) {\n\t\tsuper();\n\n\n\t\t// set the config\n\t\tthis.config = config;\n\t\tthis.keys = this.config.keys;\n\t\tthis.proxy = this.config.proxy;\n\n\t\tthis.pool = new Pool(this.config.db, this.config.db.pool.max, this.config.db.pool.min, this.config.db.pool.timeout);\n\t\tthis.mail = mailer(this.config.mailer);\n\t\tthis.strategies = strategies || {\n\t\t\temail: EmailStrategy,\n\t\t\tpassword: PasswordStrategy,\n\t\t\tgoogle: GoogleStrategy\n\t\t};\n\n\n\n\t\tvar root = this.config.root || '/';\n\n\n\n\n\n\t\t// Generic Middleware\n\t\t// ------------------\n\n\t\t// error handling\n\t\tthis.use(errorMiddleware);\n\n\n\t\t// get a database connection\n\t\tthis.use(dbMiddleware);\n\n\n\t\t// add CORS header if necessary\n\t\tthis.use(corsMiddleware);\n\n\n\t\t// get the current bearer token\n\t\tthis.use(bearerMiddleware);\n\n\n\t\t// get the current user\n\t\tthis.use(userMiddleware);\n\n\n\n\n\n\n\t\t// Session\n\t\t// =======\n\t\t// These endpoints manage the user's active session, including logging in,\n\t\t// logging out, and associating credentials.\n\n\t\tthis.use(route.use(root + 'session/:authority_id', sessionController));\n\t\tthis.use(route.del(root + 'session'), async function(ctx) {\n\t\t\tctx.cookies.set('session');\n\t\t\tctx.status = 204;\n\t\t});\n\n\n\n\n\n\n\t\t// Tokens\n\t\t// ======\n\t\t// These endpoints are used by clients wishing to authenticate/authorize\n\t\t// a user with AuthX. They implement the OAuth 2.0 flow for \"authorization\n\t\t// code\" grant types.\n\n\t\tthis.use(route.use(root + 'tokens', tokensController));\n\n\n\n\n\n\n\t\t// Can\n\t\t// ===\n\t\t// This is a convenience endpoint for clients. It validates credentials and\n\t\t// asserts that the token can access to the provided scope.\n\n\t\tthis.use(route.get(root + 'can/:scope', async function(ctx) {\n\n\t\t\tif (!ctx.params.scope || !scopes.validate(ctx.params.scope))\n\t\t\t\tthrow new errors.ValidationError();\n\n\t\t\tif (!ctx.user)\n\t\t\t\tthrow new errors.AuthenticationError();\n\n\t\t\tif (!await can(ctx, ctx.params.scope, ctx.query.strict !== 'false'))\n\t\t\t\tthrow new errors.ForbiddenError();\n\n\t\t\tctx.status = 204;\n\t\t}));\n\n\n\n\n\n\n\t\t// Keys\n\t\t// ====\n\t\t// This outputs valid public keys and algorithms that can be used to verify\n\t\t// access tokens by resource servers. The first key is always the most recent.\n\n\t\tthis.use(route.use(root + 'keys', async function(ctx) {\n\t\t\tctx.body = ctx.app.config.access_token.public;\n\t\t}));\n\n\n\n\n\n\n\t\t// Resources\n\t\t// =========\n\n\n\n\t\t// Authorities\n\t\t// -----------\n\n\t\tthis.use(route.post(root + 'authorities', authorityController.post));\n\t\tthis.use(route.get(root + 'authorities', authorityController.query));\n\t\tthis.use(route.get(root + 'authorities/:authority_id', authorityController.get));\n\t\tthis.use(route.patch(root + 'authorities/:authority_id', authorityController.patch));\n\t\tthis.use(route.del(root + 'authorities/:authority_id', authorityController.del));\n\n\n\n\t\t// Clients\n\t\t// -------\n\n\t\tthis.use(route.post(root + 'clients', clientController.post));\n\t\tthis.use(route.get(root + 'clients', clientController.query));\n\t\tthis.use(route.get(root + 'clients/:client_id', clientController.get));\n\t\tthis.use(route.patch(root + 'clients/:client_id', clientController.patch));\n\t\tthis.use(route.del(root + 'clients/:client_id', clientController.del));\n\n\n\n\t\t// Credentials\n\t\t// ------------\n\n\t\tthis.use(route.post(root + 'credentials', credentialController.post));\n\t\tthis.use(route.get(root + 'credentials', credentialController.query));\n\t\tthis.use(route.get(root + 'credentials/:credential_id_0/:credential_id_1', credentialController.get));\n\t\tthis.use(route.patch(root + 'credentials/:credential_id_0/:credential_id_1', credentialController.patch));\n\t\tthis.use(route.del(root + 'credentials/:credential_id_0/:credential_id_1', credentialController.del));\n\n\n\n\t\t// Grants\n\t\t// ------\n\n\t\tthis.use(route.post(root + 'grants', grantController.post));\n\t\tthis.use(route.get(root + 'grants', grantController.query));\n\t\tthis.use(route.get(root + 'grants/:module_id', grantController.get));\n\t\tthis.use(route.patch(root + 'grants/:module_id', grantController.patch));\n\t\tthis.use(route.del(root + 'grants/:module_id', grantController.del));\n\n\n\n\t\t// Roles\n\t\t// -----\n\n\t\tthis.use(route.post(root + 'roles', roleController.post));\n\t\tthis.use(route.get(root + 'roles', roleController.query));\n\t\tthis.use(route.get(root + 'roles/:role_id', roleController.get));\n\t\tthis.use(route.patch(root + 'roles/:role_id', roleController.patch));\n\t\tthis.use(route.del(root + 'roles/:role_id', roleController.del));\n\n\n\n\t\t// Teams\n\t\t// -----\n\t\t// I think that these either don't belong in the auth service at all, or need to be better\n\t\t// thought out. Their purpose isn't exactly clear to me, especially in its relationships to\n\t\t// roles.\n\t\t//\n\t\t// All that said, we have an immediate need to set certain \"default\" settings on different\n\t\t// \"classes\" of user, and this is the rushed result. Please avoid getting too attached to the\n\t\t// idea of teams, and if you feel like you're bending to fit into their limitations, then\n\t\t// it's time to stop and re-do this the right way.\n\n\t\tthis.use(route.post(root + 'teams', teamController.post));\n\t\tthis.use(route.get(root + 'teams', teamController.query));\n\t\tthis.use(route.get(root + 'teams/:team_id', teamController.get));\n\t\tthis.use(route.patch(root + 'teams/:team_id', teamController.patch));\n\t\tthis.use(route.del(root + 'teams/:team_id', teamController.del));\n\n\n\n\t\t// Users\n\t\t// -----\n\n\t\tthis.use(route.post(root + 'users', userController.post));\n\t\tthis.use(route.get(root + 'users', userController.query));\n\t\tthis.use(route.get(root + 'users/:user_id', userController.get));\n\t\tthis.use(route.patch(root + 'users/:user_id', userController.patch));\n\t\tthis.use(route.del(root + 'users/:user_id', userController.del));\n\t\tthis.use(route.get(root + 'me', userController.get));\n\t\tthis.use(route.patch(root + 'me', userController.patch));\n\t\tthis.use(route.del(root + 'me', userController.del));\n\n\n\n\n\t}\n}\n","import Promise from 'bluebird';\nimport json from '../util/json';\nimport {protect, can} from '../util/protect';\nimport * as errors from '../errors';\nimport Authority from '../models/Authority';\n\nexport async function post(ctx) {\n\tawait protect(ctx, 'AuthX:authority:create');\n\tvar data = await json(ctx.req);\n\n\t// make sure a strategy is set\n\tif (!data.strategy)\n\t\tthrow new errors.ValidationError('A valid authority must be supplied.', {strategy: {required: true}});\n\n\t// get the strategy\n\tvar Strategy = ctx.app.strategies[data.strategy];\n\tif (!Strategy)\n\t\tthrow new errors.ValidationError('Strategy \"' + data.strategy + '\" not implemented.', {strategy: {enum: Object.keys(ctx.app.strategies)}});\n\n\t// create the new authority\n\tctx.body = await Strategy.createAuthority(ctx.conn, data);\n\tctx.status = 201;\n}\n\nexport async function query(ctx) {\n\tawait protect(ctx, 'AuthX:authority.*:read', false);\n\tvar authorities = await Authority.query(ctx.conn);\n\tctx.body = await Promise.filter(authorities, a => can(ctx, 'AuthX:authority.' + a.id + ':read'));\n}\n\nexport async function get(ctx) {\n\tawait protect(ctx, 'AuthX:authority.' + ctx.params.authority_id + ':read');\n\tctx.body = await Authority.get(ctx.conn, ctx.params.authority_id);\n}\n\nexport async function patch(ctx) {\n\tawait protect(ctx, 'AuthX:authority.' + ctx.params.authority_id + ':update');\n\tvar data = await json(ctx.req);\n\n\t// get the existing authority\n\tvar authority = await Authority.get(ctx.conn, ctx.params.authority_id);\n\n\t// make sure the strategy is not changed\n\tif (data.strategy && data.strategy !== authority.strategy)\n\t\tthrow new errors.ValidationError('An authority\\'s strategy cannot be changed.');\n\n\t// get the strategy\n\tvar Strategy = ctx.app.strategies[authority.strategy];\n\tif (!Strategy)\n\t\tthrow new Error('Strategy \"' + authority.strategy + '\" not implemented.');\n\n\t// update the authority\n\tctx.body = await Strategy.updateAuthority(authority, data);\n}\n\nexport async function del(ctx) {\n\tawait protect(ctx, 'AuthX:authority.' + ctx.params.authority_id + ':delete');\n\n\t// get the existing authority\n\tvar authority = await Authority.get(ctx.conn, ctx.params.authority_id);\n\n\t// get the strategy\n\tvar Strategy = ctx.app.strategies[authority.strategy];\n\tif (!Strategy)\n\t\tthrow new Error('Strategy \"' + authority.strategy + '\" not implemented.');\n\n\t// delete the authority\n\tctx.body = await Strategy.deleteAuthority(authority);\n}\n","import Promise from 'bluebird';\nimport json from '../util/json';\nimport {protect, can} from '../util/protect';\nimport Client from '../models/Client';\n\nexport async function post(ctx) {\n\tawait protect(ctx, 'AuthX:client:create');\n\tvar data = await json(ctx.req);\n\tctx.body = await Client.create(ctx.conn, data);\n\tctx.status = 201;\n}\n\nexport async function query(ctx) {\n\tawait protect(ctx, 'AuthX:authority.*:read', false);\n\tvar clients = await Client.query(ctx.conn);\n\tctx.body = await Promise.filter(clients, c => can(ctx, 'AuthX:client.' + c.id + ':read'));\n}\n\nexport async function get(ctx) {\n\tawait protect(ctx, 'AuthX:client.' + ctx.params.client_id + ':read');\n\tctx.body = await Client.get(ctx.conn, ctx.params.client_id);\n}\n\nexport async function patch(ctx) {\n\tawait protect(ctx, 'AuthX:client.' + ctx.params.client_id + ':update');\n\tvar data = await json(ctx.req);\n\n\tif (typeof data.scopes !== 'undefined')\n\t\tawait protect(ctx, 'AuthX:client.' + ctx.params.client_id + ':update.scopes');\n\n\tctx.body = await Client.update(ctx.conn, ctx.params.client_id, data);\n}\n\nexport async function del(ctx) {\n\tawait protect(ctx, 'AuthX:client.' + ctx.params.client_id + ':delete');\n\tctx.body = await Client.delete(ctx.conn, ctx.params.client_id);\n}\n","import Promise from 'bluebird';\nimport json from '../util/json';\nimport {protect, can} from '../util/protect';\nimport * as errors from '../errors';\nimport Authority from '../models/Authority';\nimport Credential from '../models/Credential';\nimport User from '../models/User';\n\n\n\nexport async function post(ctx) {\n\tvar data = await json(ctx.req);\n\n\t// make sure we can look up the user\n\tif (!data.user_id)\n\t\tthrow new errors.ValidationError('A valid credential must be supplied.', {user_id: {required: true}});\n\n\t// make sure we can look up the authority\n\tif (!Array.isArray(data.id) || data.id.length !== 2)\n\t\tthrow new errors.ValidationError('A valid credential must be supplied.', {id: {type: 'array', schema: {'0': {type: 'string'}, '1': {type: 'string'}}, additionalItems: false}});\n\n\t// protect the endpoint\n\tawait protect(ctx, 'AuthX:credential.' + data.id[0] + '.' +(ctx.user && ctx.user.id === data.user_id ? 'me' : 'user') + ':read');\n\n\tvar [authority] = await Promise.all([\n\n\t\t// fetch the authority\n\t\tAuthority.get(ctx.conn, data.id[0]).catch(err => {\n\t\t\tif (err instanceof errors.NotFoundError)\n\t\t\t\tthrow new errors.ValidationError('The authority identified by `id[0]` does not exist.');\n\n\t\t\tthrow err;\n\t\t}),\n\n\t\t// fetch the user\n\t\tUser.get(ctx.conn, data.user_id).catch(err => {\n\t\t\tif (err instanceof errors.NotFoundError)\n\t\t\t\tthrow new errors.ValidationError('The user identified by `user_id` does not exist.');\n\n\t\t\tthrow err;\n\t\t})\n\t]);\n\n\t// get the strategy\n\tvar Strategy = ctx.app.strategies[authority.strategy];\n\tif (!Strategy)\n\t\tthrow new Error('Strategy \"' + authority.strategy + '\" not implemented.');\n\n\t// instantiate the strategy\n\tvar strategy = new Strategy(ctx.conn, authority);\n\n\t// create the credential\n\tctx.body = await strategy.createCredential(data);\n\tctx.status = 201;\n}\n\n\n\nexport async function query(ctx) {\n\tawait protect(ctx, 'AuthX:credential.*.*:read', false);\n\tvar credentials = await Credential.query(ctx.conn, (await can(ctx, 'AuthX:credential.*.user:read', false)) ? undefined : x => x.getAll(ctx.user.id, {index: 'user_id'}));\n\tctx.body = await Promise.filter(credentials, c => can(ctx, 'AuthX:credential.' + c.authority_id + '.' +(ctx.user && ctx.user.id === c.user_id ? 'me' : 'user') +  ':read'));\n}\n\n\n\nexport async function get(ctx) {\n\tvar credential = await Credential.get(ctx.conn, [ctx.params.credential_id_0, ctx.params.credential_id_1]);\n\tawait protect(ctx, 'AuthX:credential.' + credential.authority_id + '.' +(ctx.user && ctx.user.id === credential.user_id ? 'me' : 'user') + ':read');\n\tctx.body = credential;\n}\n\n\n\nexport async function patch(ctx) {\n\tvar data = await json(ctx.req);\n\tvar credential = await Credential.get(ctx.conn, [ctx.params.credential_id_0, ctx.params.credential_id_1]);\n\tawait protect(ctx, 'AuthX:credential.' + credential.authority_id + '.' +(ctx.user && ctx.user.id === credential.user_id ? 'me' : 'user') + ':update');\n\n\t// fetch the authority\n\tvar authority = await credential.authority();\n\n\t// get the strategy\n\tvar Strategy = ctx.app.strategies[authority.strategy];\n\tif (!Strategy)\n\t\tthrow new Error('Strategy \"' + authority.strategy + '\" not implemented.');\n\n\t// instantiate the strategy\n\tvar strategy = new Strategy(ctx.conn, authority);\n\n\t// update the credential\n\tctx.body = await strategy.updateCredential(credential, data);\n}\n\n\n\nexport async function del(ctx) {\n\tvar credential = await Credential.get(ctx.conn, [ctx.params.credential_id_0, ctx.params.credential_id_1]);\n\tawait protect(ctx, 'AuthX:credential.' + credential.authority_id + '.' +(ctx.user && ctx.user.id === credential.user_id ? 'me' : 'user') + ':delete');\n\n\t// fetch the authority\n\tvar authority = await credential.authority();\n\n\t// get the strategy\n\tvar Strategy = ctx.app.strategies[authority.strategy];\n\tif (!Strategy)\n\t\tthrow new Error('Strategy \"' + authority.strategy + '\" not implemented.');\n\n\t// instantiate the strategy\n\tvar strategy = new Strategy(ctx.conn, authority);\n\n\t// delete the credential\n\tctx.body = await strategy.deleteCredential(credential);\n}\n","import Promise from 'bluebird';\nimport json from '../util/json';\nimport {protect, can} from '../util/protect';\nimport Grant from '../models/Grant';\n\nexport async function post(ctx) {\n\tawait protect(ctx, 'AuthX:grant:create');\n\tvar data = await json(ctx.req);\n\tctx.body = await Grant.create(ctx.conn, data);\n\tctx.status = 201;\n}\n\nexport async function query(ctx) {\n\tawait protect(ctx, 'AuthX:grant.*.*:read', false);\n\tvar grants = await Grant.query(ctx.conn, (await can(ctx, 'AuthX:grant.*.user:read', false)) ? undefined : x => x.getAll(ctx.user.id, {index: 'user_id'}));\n\tctx.body = await Promise.filter(grants, g => can(ctx, 'AuthX:grant.' + g.client_id + '.' +(ctx.user && ctx.user.id === g.user_id ? 'me' : 'user') +  ':read'));\n}\n\nexport async function get(ctx) {\n\tvar grant = await Grant.get(ctx.conn, ctx.params.grant_id);\n\tawait protect(ctx, 'AuthX:grant.' + grant.client_id + '.' +(ctx.user && ctx.user.id === grant.user_id ? 'me' : 'user') + ':read');\n\tctx.body = grant;\n}\n\nexport async function patch(ctx) {\n\tvar data = await json(ctx.req);\n\tvar grant = await Grant.get(ctx.conn, ctx.params.grant_id);\n\tawait protect(ctx, 'AuthX:grant.' + grant.client_id + '.' +(ctx.user && ctx.user.id === grant.user_id ? 'me' : 'user') + ':update');\n\tctx.body = await grant.update(data);\n}\n\nexport async function del(ctx) {\n\tvar grant = await Grant.get(ctx.conn, ctx.params.grant_id);\n\tawait protect(ctx, 'AuthX:grant.' + grant.client_id + '.' +(ctx.user && ctx.user.id === grant.user_id ? 'me' : 'user') + ':delete');\n\tctx.body = await Grant.delete(ctx.conn, ctx.params.grant_id);\n}\n","import Promise from 'bluebird';\nimport json from '../util/json';\nimport {protect, can} from '../util/protect';\nimport Role from '../models/Role';\n\nexport async function post(ctx) {\n\tawait protect(ctx, 'AuthX:role:create');\n\tvar data = await json(ctx.req);\n\tctx.body = await Role.create(ctx.conn, data);\n\tctx.status = 201;\n}\n\nexport async function query(ctx) {\n\tawait protect(ctx, 'AuthX:role.*:read', false);\n\tvar roles = await Role.query(ctx.conn);\n\tctx.body = await Promise.filter(roles, r => can(ctx, 'AuthX:role.' + r.id + ':get'));\n}\n\nexport async function get(ctx) {\n\tawait protect(ctx, 'AuthX:role.' + ctx.params.role_id + ':read');\n\tctx.body = await Role.get(ctx.conn, ctx.params.role_id);\n}\n\nexport async function patch(ctx) {\n\tawait protect(ctx, 'AuthX:role.' + ctx.params.role_id + ':update');\n\tvar data = await json(ctx.req);\n\n\tif (typeof data.assignments !== 'undefined')\n\t\tawait protect(ctx, 'AuthX:role.' + ctx.params.role_id + ':update.assignments');\n\n\tif (typeof data.scopes !== 'undefined')\n\t\tawait protect(ctx, 'AuthX:role.' + ctx.params.role_id + ':update.scopes');\n\n\tctx.body = await Role.update(ctx.conn, ctx.params.role_id, data);\n}\n\nexport async function del(ctx) {\n\tawait protect(ctx, 'AuthX:role.' + ctx.params.role_id + ':delete');\n\tctx.body = await Role.delete(ctx.conn, ctx.params.role_id);\n}\n","import qs from 'querystring';\nimport jwt from 'jsonwebtoken';\nimport Authority from '../models/Authority';\n\nexport default async (ctx, next) => {\n\tctx.status = 204;\n\n\ttry {\n\n\t\t// get the authority\n\t\tvar authority = await Authority.get(ctx.conn, ctx.params.authority_id);\n\n\t\t// get the strategy\n\t\tvar Strategy = ctx.app.strategies[authority.strategy];\n\t\tif (!Strategy)\n\t\t\tthrow new Error('Strategy \"' + authority.strategy + '\" not implemented.');\n\n\t\t// instantiate the strategy\n\t\tvar strategy = new Strategy(ctx.conn, authority);\n\n\t\t// pass the request to the strategy\n\t\tvar user = await strategy.authenticate(ctx, next);\n\n\n\t\tif (user && user.status === 'active') {\n\n\t\t\t// generate token from user\n\t\t\tlet token = jwt.sign({}, ctx.app.config.session_token.private_key, {\n\t\t\t\talgorithm: ctx.app.config.session_token.algorithm,\n\t\t\t\texpiresIn: ctx.app.config.session_token.expiresIn,\n\t\t\t\taudience: ctx.app.config.realm,\n\t\t\t\tsubject: user.id,\n\t\t\t\tissuer: ctx.app.config.realm\n\t\t\t});\n\n\t\t\t// set the session cookie\n\t\t\tctx.cookies.set('session', token);\n\n\t\t\tctx.status = 200;\n\t\t\tctx.body = {message: 'You have successfully logged in.'};\n\t\t}\n\n\t\trespond();\n\n\t} catch (err) {\n\t\tctx.app.emit('error', err, ctx);\n\n\t\t// set the status\n\t\tctx.status = err.status || 500;\n\n\t\t// display an error\n\t\tif(typeof err.expose === 'function')\n\t\t\tctx.body = err.expose();\n\t\telse\n\t\t\tctx.body = {message: err.expose ? err.message : 'An unknown error has occurred' };\n\n\t\trespond();\n\t}\n\n\n\t// This allows responses to be returned directly, or forwarded via an HTTP redirect. Because\n\t// the redirect URL can be specified insecurely, it's absolutely required that the response\n\t// body contains NO sensitive information.\n\n\tfunction respond() {\n\t\tif(ctx.redirect_to && (ctx.status < 300 || ctx.status >= 400)) {\n\t\t\tlet body = ctx.body;\n\t\t\tlet query = qs.stringify({\n\t\t\t\tstatus: ctx.status,\n\t\t\t\tbody: JSON.stringify(body)\n\t\t\t});\n\t\t\tctx.redirect(ctx.redirect_to + (ctx.redirect_to.includes('?') ? '&' : '?') + query);\n\t\t\tctx.body = body;\n\t\t}\n\t}\n\n};\n","import Promise from 'bluebird';\nimport json from '../util/json';\nimport {protect, can} from '../util/protect';\nimport Team from '../models/Team';\n\nexport async function post(ctx) {\n\tawait protect(ctx, 'AuthX:team:create');\n\tvar data = await json(ctx.req);\n\tctx.body = await Team.create(ctx.conn, data);\n\tctx.status = 201;\n}\n\nexport async function query(ctx) {\n\tvar teams = await Team.query(ctx.conn);\n\tctx.body = await Promise.filter(teams, c => can(ctx, 'AuthX:team.' + c.id + ':read'));\n}\n\nexport async function get(ctx) {\n\tawait protect(ctx, 'AuthX:team.' + ctx.params.team_id + ':read');\n\tctx.body = await Team.get(ctx.conn, ctx.params.team_id);\n}\n\nexport async function patch(ctx) {\n\tawait protect(ctx, 'AuthX:team.' + ctx.params.team_id + ':update');\n\tvar data = await json(ctx.req);\n\tctx.body = await Team.update(ctx.conn, ctx.params.team_id, data);\n}\n\nexport async function del(ctx) {\n\tawait protect(ctx, 'AuthX:team.' + ctx.params.team_id + ':delete');\n\tctx.body = await Team.delete(ctx.conn, ctx.params.team_id);\n}\n","import uuid from 'uuid';\nimport jwt from 'jsonwebtoken';\nimport json from '../util/json';\nimport form from '../util/form';\nimport * as scopes from '../util/scopes';\nimport * as errors from '../errors';\nimport Client from '../models/Client';\nimport Grant from '../models/Grant';\n\nlet scopeRegex = /^(([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+)\\.)*([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+):(([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+)\\.)*([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+):(([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+)\\.)*([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+)$/;\n\nexport default async (ctx) => {\n\n\n\n\t// Authorization Code Request\n\t// --------------------------\n\t// The client requests an authorization code from the server.\n\n\tif (ctx.query.response_type === 'code') {\n\n\t\tif (!ctx.query.client_id)\n\t\t\tthrow new errors.ValidationError('A `client_id` must be defined.');\n\n\t\tif (!ctx.query.redirect_uri)\n\t\t\tthrow new errors.ValidationError('A `redirect_uri` must be defined.');\n\n\t\tif (typeof ctx.query.scope === 'undefined')\n\t\t\tthrow new errors.ValidationError('A `scope` must be defined.');\n\n\t\t// parse & validate the scopes\n\t\tlet requestedScopes = ctx.query.scope.split(' ');\n\t\tif (!requestedScopes.every(s => scopeRegex.test(s)))\n\t\t\tthrow new errors.ValidationError('The `scope` parameter must be a space-separated list of AuthX scopes.');\n\n\n\n\t\t// get the client\n\t\tlet client = await Client.get(ctx.conn, ctx.query.client_id);\n\n\n\n\t\t// TODO: verify the redirect_uri against client base_urls\n\n\n\n\t\t// If the user does not have an active session, send her to the login page.\n\t\tif (!ctx.session || ctx.session.sub !== ctx.user.id) {\n\t\t\tctx.redirect(ctx.app.config.routes.login + (ctx.app.config.routes.login.includes('?') ? '&' : '?') + 'url=' + encodeURIComponent(ctx.url));\n\t\t\tctx.body = {url: ctx.url};\n\t\t\treturn;\n\t\t}\n\n\n\n\n\t\tlet grant;\n\n\t\t// start with globally authorized scopes for this client\n\t\tlet globallyAuthorizedScopes = client.scopes;\n\t\tlet authorizedScopes = globallyAuthorizedScopes.slice();\n\t\tlet userAuthorizedScopes = [];\n\n\n\n\t\t// do we also need user-authorized scopes?\n\t\tif (!requestedScopes.every(rS => authorizedScopes.some(aS => scopes.can(aS, rS)))) {\n\n\n\n\t\t\t// the user has just authorized this client for certain scopes\n\t\t\tif (ctx.method === 'POST') {\n\t\t\t\ttry {\n\t\t\t\t\tlet data = await json(ctx.req);\n\t\t\t\t\tif (\n\t\t\t\t\t\t!data.scopes\n\t\t\t\t\t\t|| !Array.isArray(data.scopes)\n\t\t\t\t\t\t|| !data.scopes.every(s => (typeof s === 'string') && scopeRegex.test(s))\n\t\t\t\t\t) throw new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthrow new errors.ValidationError('Authorized `scopes` must be a json-encoded array of scopes.');\n\t\t\t\t}\n\n\t\t\t\tuserAuthorizedScopes = data.scopes;\n\t\t\t\tauthorizedScopes = scopes.simplifyCollection(authorizedScopes.concat(userAuthorizedScopes));\n\t\t\t}\n\n\n\n\n\t\t\t// look for a previous grant issued to this client by the user\n\t\t\telse try {\n\t\t\t\tgrant = await Grant.get(ctx.conn, [ctx.user.id, client.id]);\n\t\t\t\tuserAuthorizedScopes = grant.scopes;\n\t\t\t\tauthorizedScopes = scopes.simplifyCollection(authorizedScopes.concat(userAuthorizedScopes));\n\t\t\t} catch (err) {\n\n\t\t\t\t// the user has not already authorized this client for the given scopes; prompt her to authorize the client for the given scopes.\n\t\t\t\tif (err instanceof errors.NotFoundError)\n\t\t\t\t\treturn requestApproval(ctx);\n\n\t\t\t\tthrow err;\n\t\t\t}\n\n\n\t\t\t// make sure that the authorized scopes fulfil all the requested scopes, otherwise prompt\n\t\t\tif (!requestedScopes.every(rS => authorizedScopes.some(aS => scopes.can(aS, rS))))\n\t\t\t\treturn requestApproval(ctx);\n\n\n\n\t\t}\n\n\n\n\n\n\t\t// generate and store an authorization code.\n\t\tlet nonce = uuid.v4();\n\t\tlet code = new Buffer(JSON.stringify([ctx.user.id, nonce])).toString('base64');\n\t\tgrant = await Grant.save(ctx.conn, [ctx.user.id, client.id], {\n\t\t\tnonce: nonce,\n\t\t\tscopes: userAuthorizedScopes\n\t\t});\n\n\n\n\t\t// redirect the user back to the client with an authorization code.\n\t\tctx.redirect(ctx.query.redirect_uri + (ctx.query.redirect_uri.includes('?') ? '&' : '?') + 'code=' + code + '&state=' + ctx.query.state );\n\t\tctx.body = {code: code};\n\t\treturn;\n\t}\n\n\n\n\n\n\n\n\n\t// Access Token Exchange\n\t// ---------------------\n\t// The client exchanged an authorization code for an access token.\n\n\telse if (ctx.method === 'POST') {\n\t\tvar data;\n\n\n\n\n\t\t// HTTP POST (json)\n\t\tif (ctx.is('application/json'))\n\t\t\tdata = await json(ctx.req);\n\n\t\t// HTTP POST (form)\n\t\telse if (ctx.is('application/x-www-form-urlencoded'))\n\t\t\tdata = await form(ctx.req);\n\n\n\n\n\t\tif (!data.client_id)\n\t\t\tthrow new errors.ValidationError('A valid `client_id` must be provided.');\n\n\t\tif (!data.client_secret)\n\t\t\tthrow new errors.ValidationError('A valid `client_secret` must be provided.');\n\n\n\n\n\t\tlet client = await Client.get(ctx.conn, data.client_id);\n\t\tif (client.secret !== data.client_secret)\n\t\t\tthrow new errors.ForbiddenError('The client secret was incorrect.');\n\n\n\n\n\t\tlet grant;\n\n\n\n\n\t\t// ### Authorization Code\n\t\tif (data.grant_type === 'authorization_code') {\n\t\t\tlet code;\n\n\t\t\tif (!data.code)\n\t\t\t\tthrow new errors.ValidationError('A valid `code` must be provided.');\n\n\t\t\ttry {\n\t\t\t\tcode = new Buffer(data.code, 'base64').toString('utf8');\n\t\t\t\tcode = JSON.parse(code);\n\t\t\t\tif (\n\t\t\t\t\t!Array.isArray(code)\n\t\t\t\t\t|| code.length !== 2\n\t\t\t\t\t|| typeof code[0] !== 'string'\n\t\t\t\t\t|| typeof code[1] !== 'string'\n\t\t\t\t) throw new Error();\n\t\t\t} catch (err) {\n\t\t\t\tthrow new errors.ValidationError('The provided `code` is invalid.');\n\t\t\t}\n\n\n\t\t\t// get the corresponding grant, with the single-use nonce value\n\t\t\tgrant = await Grant.getWithNonce(ctx.conn, [code[0], data.client_id], code[1]);\n\n\t\t}\n\n\t\t// ### Refresh Token\n\t\telse if (data.grant_type === 'refresh_token') {\n\t\t\tlet refresh_token;\n\n\t\t\tif (!data.refresh_token)\n\t\t\t\tthrow new errors.ValidationError('A valid `refresh_token` must be provided.');\n\n\t\t\ttry {\n\t\t\t\trefresh_token = new Buffer(data.refresh_token, 'base64').toString('utf8');\n\t\t\t\trefresh_token = JSON.parse(refresh_token);\n\t\t\t\tif (\n\t\t\t\t\t!Array.isArray(refresh_token)\n\t\t\t\t\t|| refresh_token.length !== 2\n\t\t\t\t\t|| typeof refresh_token[0] !== 'string'\n\t\t\t\t\t|| typeof refresh_token[1] !== 'string'\n\t\t\t\t) throw new Error();\n\t\t\t} catch (err) {\n\t\t\t\tthrow new errors.ValidationError('The provided `refresh_token` is invalid.');\n\t\t\t}\n\n\n\n\t\t\t// get the corresponding grant, with the single-use nonce value\n\t\t\tgrant = await Grant.get(ctx.conn, [refresh_token[0], data.client_id]);\n\n\n\n\t\t\t// validate the refresh token\n\t\t\tif (grant.refresh_token !== refresh_token[1])\n\t\t\t\tthrow new errors.ValidationError('The provided `refresh_token` is incorrect.');\n\n\n\t\t}\n\n\n\t\telse\n\t\t\tthrow new errors.ValidationError('The `grant_type` must be \"authorization_code\" or \"refresh_token\".');\n\n\n\t\tlet user = await grant.user();\n\n\n\t\t// scopes globally authorized to the client\n\t\tlet globallyAuthorizedScopes = client.scopes;\n\n\t\t// all scopes (global + user) authorized by this grant\n\t\tlet authorizedScopes = scopes.simplifyCollection(globallyAuthorizedScopes.concat(grant.scopes));\n\n\t\t// all scopes (grant x user) authorized in the token\n\t\tlet totalScopes = scopes.combineCollections(authorizedScopes, await user.scopes());\n\n\n\n\n\t\t// generate the access token\n\t\tlet access_token = jwt.sign({\n\t\t\ttype: 'access_token',\n\t\t\tscopes: totalScopes\n\t\t}, ctx.app.config.access_token.private_key, {\n\t\t\talgorithm: ctx.app.config.access_token.algorithm,\n\t\t\texpiresIn: ctx.app.config.access_token.expiresIn,\n\t\t\taudience: grant.client_id,\n\t\t\tsubject: grant.user_id,\n\t\t\tissuer: ctx.app.config.realm\n\t\t});\n\n\n\n\n\t\t// respond with tokens\n\t\tctx.status = 200;\n\t\tctx.body = {\n\t\t\taccess_token: access_token,\n\t\t\trefresh_token: new Buffer(JSON.stringify([user.id, grant.refresh_token])).toString('base64'),\n\t\t\tscope: authorizedScopes\n\t\t};\n\n\n\n\n\t\t// convenience, adds the user to the response if the token has access\n\t\tif (scopes.can(totalScopes, 'AuthX:me:read'))\n\t\t\tctx.body.user = user;\n\n\n\t}\n\n\telse\n\t\tthrow new errors.ValidationError('Missing `response_type=code` query parameter or POST body.');\n\n\n};\n\n\nfunction requestApproval (ctx) {\n\tvar url = encodeURIComponent(ctx.url);\n\tvar scope = encodeURIComponent(ctx.query.scope);\n\tctx.redirect(ctx.app.config.routes.authorize + (ctx.app.config.routes.authorize.includes('?') ? '&' : '?') + 'url=' + url + '&scope=' + scope);\n\tctx.body = {url: url, scope: scope};\n}\n\n","import Promise from 'bluebird';\nimport r from 'rethinkdb';\nimport json from '../util/json';\nimport {protect, can} from '../util/protect';\nimport {parseIncludes, parseRoles} from '../util/queryParams';\nimport * as errors from '../errors';\nimport Role from '../models/Role';\nimport User from '../models/User';\n\nlet includable = ['credentials', 'grants', 'roles', 'scopes', 'team'];\n\nexport async function post(ctx) {\n\tawait protect(ctx, 'AuthX:user:create');\n\tvar includes = parseIncludes(includable, ctx);\n\tvar data = await json(ctx.req);\n\tvar user = await User.create(ctx.conn, data);\n\tctx.body = await include(user, includes, ctx);\n\tctx.status = 201;\n}\n\nexport async function query(ctx) {\n\tif (!await can(ctx, 'AuthX:me:read') && !await can(ctx, 'AuthX:user:read'))\n\t\tthrow new errors.ForbiddenError('You lack permission for the required scope \"AuthX:user:read\".');\n\n\n\tvar ids;\n\n\t// restrict to the current user\n\tif (!await can(ctx, 'AuthX:user:read'))\n\t\tids = [ctx.user.id];\n\n\n\t// restrict to provided roles\n\telse if (ctx.query.roles) {\n\t\tlet role_ids = parseRoles(ctx);\n\n\t\t// make sure we have permission to access these roles\n\t\tawait Promise.map(role_ids, id => protect(ctx, 'AuthX:role.' + id + ':read'));\n\n\t\t// fetch the roles from the database\n\t\tlet roles = await Role.query(ctx.conn, x => x.getAll(r.args(role_ids), {index: 'id'}));\n\n\t\t// combine assignments\n\t\tlet assignments = {};\n\t\troles.forEach(role => {\n\t\t\tObject.keys(role.assignments).forEach(a => {\n\t\t\t\tif (role.assignments[a]) assignments[a] = true;\n\t\t\t});\n\t\t});\n\n\t\t// get user IDs\n\t\tids = Object.keys(assignments);\n\t}\n\n\n\tvar transformer = x => {\n\t\tvar index;\n\n\t\t// restrict to known ids\n\n\t\tif (ids) {\n\t\t\tx = x.getAll(r.args(ids), {index: 'id'});\n\t\t\tindex = 'id';\n\t\t}\n\n\n\t\t// order\n\t\tif (!index || index === 'created') {\n\t\t\tx = x.orderBy({index: 'created'});\n\t\t\tindex = 'created';\n\t\t} else\n\t\t\tx = x.orderBy('created');\n\n\n\t\t// filter by status\n\t\tif (ctx.query.status)\n\t\t\tif (!index || index === 'status') {\n\t\t\t\tx = x.getAll(ctx.query.status, {index: 'status'});\n\t\t\t\tindex = 'status';\n\t\t\t} else\n\t\t\t\tx = x.filter({status: ctx.query.status});\n\n\n\t\t// fuzzy search by name\n\t\tvar search = ctx.query.search ? ctx.query.search.toLowerCase() : null;\n\t\tif (ctx.query.search)\n\t\t\tx = x.filter(row => r.or(\n\t\t\t\trow('profile')('displayName').downcase().match(search),\n\t\t\t\trow('profile')('nickname').default('').downcase().match(search),\n\t\t\t\trow('profile')('name')('familyName').default('').downcase().match(search),\n\t\t\t\trow('profile')('name')('givenName').default('').downcase().match(search),\n\t\t\t\trow('profile')('name')('middleName').default('').downcase().match(search)\n\t\t\t));\n\n\n\t\t// skip\n\t\tvar skip = parseInt(ctx.query.skip);\n\t\tif (skip) x = x.skip(skip);\n\n\n\t\t// limit\n\t\tvar limit = parseInt(ctx.query.limit);\n\t\tif (limit) x = x.limit(limit);\n\n\t\treturn x;\n\t};\n\n\n\tvar includes = parseIncludes(includable, ctx);\n\tvar users = await User.query(ctx.conn, transformer);\n\tctx.body = await Promise.all(users.map(async u => await include(u, includes, ctx)));\n}\n\nexport async function get(ctx) {\n\tlet user_id = ctx.params.user_id || (ctx.user ? ctx.user.id : null);\n\tawait protect(ctx, 'AuthX:' + (ctx.user && ctx.user.id === user_id ? 'me' : 'user') + ':read');\n\tvar includes = parseIncludes(includable, ctx);\n\tvar user = await User.get(ctx.conn, user_id);\n\tctx.body = await include(user, includes, ctx);\n}\n\nexport async function patch(ctx) {\n\tlet user_id = ctx.params.user_id || (ctx.user ? ctx.user.id : null);\n\tawait protect(ctx, 'AuthX:' + (ctx.user && ctx.user.id === user_id ? 'me' : 'user') + ':update');\n\tvar includes = parseIncludes(includable, ctx);\n\tvar data = await json(ctx.req);\n\tvar user = await User.update(ctx.conn, user_id, data);\n\tctx.body = await include(user, includes, ctx);\n}\n\nexport async function del(ctx) {\n\tlet user_id = ctx.params.user_id || (ctx.user ? ctx.user.id : null);\n\tawait protect(ctx, 'AuthX:' + (ctx.user && ctx.user.id === user_id ? 'me' : 'user') + ':delete');\n\tvar includes = parseIncludes(includable, ctx);\n\n\t// make sure to include credentials, which are automatically deleted with the user\n\tincludes = includes || [];\n\tif (includes.indexOf('credentials') === -1)\n\t\tincludes.push('credentials');\n\n\tvar user = await User.delete(ctx.conn, user_id);\n\tctx.body = await include(user, includes, ctx);\n}\n\nasync function include(user, includes, ctx) {\n\n\tif (!includes || !includes.length)\n\t\treturn user;\n\n\n\t// call the included functions in parallel\n\tvar results = await Promise.map(includes, async i => {\n\n\t\t// get the results\n\t\tvar result = await user[i]();\n\n\n\t\t// filter out unauthorized credentials\n\t\tif (i === 'credentials')\n\t\t\tresult = await Promise.filter(result, c => can(ctx, 'AuthX:credential.' + c.authority_id + '.' + (ctx.user && ctx.user.id === user.id ? 'me' : 'user') + ':read'));\n\n\n\t\t// filter out unauthorized grants\n\t\tif (i === 'grants')\n\t\t\tresult = await Promise.filter(result, g => can(ctx, 'AuthX:grant.' + g.client_id + '.' + (ctx.user && ctx.user.id === user.id ? 'me' : 'user') + ':read'));\n\n\n\t\t// filter out unauthorized roles\n\t\tif (i === 'roles')\n\t\t\tresult = await Promise.filter(result, r => can(ctx, 'AuthX:role.' + r.id + ':read'));\n\n\n\t\treturn result;\n\t});\n\n\t// assign the results to a new object\n\tvar included = Object.assign(Object.create(User.prototype), user);\n\tresults.forEach((v, i) => included[includes[i]] = v);\n\n\t// return the user with includes\n\treturn included;\n}\n","import jwt from 'jsonwebtoken';\nimport * as errors from '../errors';\n\nlet parser = /^Bearer\\s+([^\\s]+)\\s*$/;\n\nexport default async (ctx, next) => {\n\tctx.bearer = null;\n\n\t// parse the authorization header\n\tlet parsed = ctx.headers.authorization ? ctx.headers.authorization.match(parser) : null;\n\n\t// verify the JWT against all public keys\n\tif (parsed && parsed [1] && !ctx.app.config.access_token.public.some(pub => {\n\t\ttry {\n\t\t\treturn ctx.bearer = jwt.verify(parsed[1], pub.key, {\n\t\t\t\talgorithms: [pub.algorithm],\n\t\t\t\tissuer: ctx.app.config.realm\n\t\t\t});\n\t\t} catch (err) { return; }\n\t})) throw errors.AuthenticationError('The supplied bearer token is invalid.');\n\n\treturn next();\n};\n","import r from 'rethinkdb';\n\nexport default async (ctx, next) => {\n\n\tif (\n\t\tctx.headers.origin\n\t\t&& ctx.headers.origin !== (ctx.request.protocol + '://' + ctx.request.host)\n\t\t&& 0 < await r.table('clients').getAll(ctx.headers.origin, {index: 'base_urls'}).limit(1).count().run(ctx.conn)\n\t) {\n\t\tctx.set('Access-Control-Allow-Origin', ctx.headers.origin);\n\t\tctx.set('Access-Control-Allow-Methods', 'OPTIONS, HEAD, GET, POST, PUT, PATCH, DELETE');\n\t}\n\n\tawait next();\n\n};\n","export default async (ctx, next) => {\n\tctx.conn = await ctx.app.pool.acquire();\n\ttry {\n\t\tawait next();\n\t} finally {\n\t\tctx.conn.release();\n\t}\n};\n","export default async (ctx, next) => {\n\ttry {\n\t\tawait next();\n\t} catch (err) {\n\t\tctx.status = err.status || 500;\n\n\t\t// display an error\n\t\tif(typeof err.expose === 'function')\n\t\t\tctx.body = err.expose();\n\t\telse\n\t\t\tctx.body = {message: err.expose ? err.message : 'An unknown error has occurred' };\n\n\t\tctx.app.emit('error', err, ctx);\n\t}\n};\n","import jwt from 'jsonwebtoken';\nimport errors from '../errors';\nimport User from '../models/User';\n\nexport default async (ctx, next) => {\n\n\tlet token;\n\n\t// parse the session cookie for a token\n\tlet cookie = ctx.cookies.get('session');\n\tif (cookie) ctx.app.config.session_token.public.some(pub => {\n\t\ttry {\n\t\t\treturn token = ctx.session = jwt.verify(cookie, pub.key, {\n\t\t\t\talgorithms: [pub.algorithm],\n\t\t\t\tissuer: ctx.app.config.realm\n\t\t\t});\n\t\t} catch (err) { return; }\n\t});\n\n\n\n\t// use the bearer token if present\n\tif (!token)\n\t\ttoken = ctx.bearer || null;\n\n\n\n\t// get the user\n\tif (token && token.sub)\n\t\tctx.user = await User.get(ctx.conn, token.sub);\n\n\n\n\t// make sure the user is active\n\tif (ctx.user && ctx.user.status !== 'active')\n\t\tthrow new errors.ForbiddenError('Your user account has been disabled.');\n\n\n\n\treturn next();\n};\n","import r from 'rethinkdb';\nimport Model from '../Model';\nimport Credential from './Credential';\nimport validate from '../util/validator';\nimport * as errors from '../errors';\n\nconst CREDENTIALS = Symbol('credentials');\n\nexport default class Authority extends Model {\n\n\tstatic get table() {\n\t\treturn 'authorities';\n\t}\n\n\n\n\tstatic async create(conn, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({}, data, {created: now, last_updated: now});\n\n\t\t// validate data\n\t\tvar err = validate('authority', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid authority must be supplied.', err.validation);\n\n\t\t// update the model (use super.create when babel.js supports it)\n\t\treturn Model.create.call(this, conn, data);\n\t}\n\n\n\n\tstatic async save(conn, id, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({id: id}, data, {created: now, last_updated: now});\n\n\t\t// validate data\n\t\tvar err = validate('authority', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid authority must be supplied.', err.validation);\n\t\tif (data.id !== id) throw new Error('The supplied `id` did not match the `id` in the data.');\n\n\t\t// don't overwrite an existing `created` timestamp\n\t\tdata.created = r.row('created').default(data.created);\n\n\t\t// save the model (use super.create when babel.js supports it)\n\t\treturn Model.save.call(this, conn, id, data);\n\t}\n\n\n\n\tstatic async update(conn, id, data) {\n\t\tdata = Object.assign({}, data, {last_updated: Date.now() / 1000});\n\n\t\t// validate data\n\t\tvar err = validate('authority', data, {checkRequired: false});\n\t\tif (err) throw new errors.ValidationError('A valid authority must be supplied.', err.validation);\n\n\t\t// update the model (use super.update when babel.js supports it)\n\t\treturn Model.update.call(this, conn, id, data);\n\t}\n\n\n\n\tasync credentials(refresh) {\n\n\t\t// query the database for users\n\t\tif (!this[CREDENTIALS] || refresh)\n\t\t\tthis[CREDENTIALS] = await Credential.query(this[Model.Symbols.CONN], q => q.getAll(this.id, {index: 'authority_id'}));\n\n\t\treturn this[CREDENTIALS];\n\t}\n\n}\n","import r from 'rethinkdb';\nimport Model from '../Model';\nimport validate from '../util/validator';\nimport * as errors from '../errors';\n\nexport default class Client extends Model {\n\n\tstatic get table() {\n\t\treturn 'clients';\n\t}\n\n\n\n\tstatic async create(conn, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({}, data, {created: now, last_updated: now});\n\n\t\t// validate data\n\t\tvar err = validate('client', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid client must be supplied.', err.validation);\n\n\t\t// update the model (use super.create when babel.js supports it)\n\t\treturn Model.create.call(this, conn, data);\n\t}\n\n\n\n\tstatic async save(conn, id, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({id: id}, data, {created: now, last_updated: now});\n\n\t\t// validate data\n\t\tvar err = validate('client', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid client must be supplied.', err.validation);\n\t\tif (data.id !== id) throw new Error('The supplied `id` did not match the `id` in the data.');\n\n\t\t// don't overwrite an existing `created` timestamp\n\t\tdata.created = r.row('created').default(data.created);\n\n\t\t// save the model (use super.create when babel.js supports it)\n\t\treturn Model.save.call(this, conn, id, data);\n\t}\n\n\n\n\tstatic async update(conn, id, data) {\n\t\tdata = Object.assign({}, data, {last_updated: Date.now() / 1000});\n\n\t\t// validate data\n\t\tvar err = validate('client', data, {checkRequired: false});\n\t\tif (err) throw new errors.ValidationError('A valid client must be supplied.', err.validation);\n\n\t\t// update the model (use super.update when babel.js supports it)\n\t\treturn Model.update.call(this, conn, id, data);\n\t}\n\n}\n","import r from 'rethinkdb';\nimport Model from '../Model';\nimport User from './User';\nimport Authority from './Authority';\nimport validate from '../util/validator';\nimport * as errors from '../errors';\n\nconst USER = Symbol('user');\nconst AUTHORITY = Symbol('authority');\n\nexport default class Credential extends Model {\n\n\tstatic get table() {\n\t\treturn 'credentials';\n\t}\n\n\n\n\tstatic async create(conn, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({}, data, {created: now, last_updated: now});\n\t\tdata.profile = data.profile ? Object.assign({}, data.profile) : null;\n\n\t\t// normalize the authority_user_id and profile ID\n\t\tif (data.id && data.id[1] && data.profile && typeof data.profile.id === 'undefined')\n\t\t\tdata.profile.id = data.id[1];\n\n\t\t// validate data\n\t\tvar err = validate('credential', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid credential must be supplied.', err.validation);\n\t\tif (data.profile && data.profile.id !== data.id[1]) throw new errors.ValidationError('If a profile ID is present, it must match the `authority_user_id`.');\n\n\t\t// update the model (use super.create when babel.js supports it)\n\t\treturn Model.create.call(this, conn, data);\n\t}\n\n\n\n\tstatic async save(conn, id, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({id: id}, data, {created: now, last_updated: now});\n\t\tdata.profile = data.profile ? Object.assign({}, data.profile) : null;\n\n\t\t// normalize the authority_user_id and profile ID\n\t\tif (data.id && data.id[1] && data.profile && typeof data.profile.id === 'undefined')\n\t\t\tdata.profile.id = data.id[1];\n\n\t\t// validate data\n\t\tvar err = validate('credential', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid credential must be supplied.', err.validation);\n\t\tif (data.profile && data.profile.id !== data.id[1]) throw new errors.ValidationError('If a profile ID is present, it must match the `authority_user_id`.');\n\t\tif (!Array.isArray(data.id) || data.id.some((v,i) => v !== id[i])) throw new Error('The supplied `id` did not match the `id` in the data.');\n\n\t\t// don't overwrite an existing `created` timestamp\n\t\tdata.created = r.row('created').default(data.created);\n\n\t\t// save the model (use super.create when babel.js supports it)\n\t\treturn Model.save.call(this, conn, id, data);\n\t}\n\n\n\n\tstatic async update(conn, id, data) {\n\t\tdata = Object.assign({}, data, {last_updated: Date.now() / 1000});\n\n\t\t// validate data\n\t\tvar err = validate('credential', data, {checkRequired: false});\n\t\tif (err) throw new errors.ValidationError('A valid credential must be supplied.', err.validation);\n\n\t\t// update the model (use super.update when babel.js supports it)\n\t\treturn Model.update.call(this, conn, id, data);\n\t}\n\n\n\n\tasync user(refresh) {\n\n\t\t// get the user from the database\n\t\tif (!this[USER] || refresh)\n\t\t\tthis[USER] = await User.get(this[Model.Symbols.CONN], this.user_id);\n\n\t\treturn this[USER];\n\t}\n\n\n\n\tasync authority(refresh) {\n\n\t\t// get the user from the database\n\t\tif (!this[AUTHORITY] || refresh)\n\t\t\tthis[AUTHORITY] = await Authority.get(this[Model.Symbols.CONN], this.authority_id);\n\n\t\treturn this[AUTHORITY];\n\t}\n\n\n\tget authority_id() {\n\t\treturn this.id[0];\n\t}\n\n}\n","import r from 'rethinkdb';\nimport uuid from 'uuid';\nimport Model from '../Model';\nimport User from './User';\nimport Client from './Client';\nimport validate from '../util/validator';\nimport * as errors from '../errors';\n\nconst USER = Symbol('user');\nconst CLIENT = Symbol('client');\n\n\nexport default class Grant extends Model {\n\n\tstatic get table() {\n\t\treturn 'grants';\n\t}\n\n\n\n\tstatic async create(conn, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({}, data, {created: now, last_updated: now});\n\n\t\t// validate data\n\t\tvar err = validate('grant', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid grant must be supplied.', err.validation);\n\n\t\t// update the model (use super.create when babel.js supports it)\n\t\treturn Model.create.call(this, conn, data);\n\t}\n\n\n\n\tstatic async save(conn, id, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({id: id}, data, {created: now, last_updated: now});\n\n\t\t// validate data\n\t\tvar err = validate('grant', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid grant must be supplied.', err.validation);\n\t\tif (data.id !== id) throw new Error('The supplied `id` did not match the `id` in the data.');\n\n\t\t// default `refresh_token` to existing one, or generate new one\n\t\tif (typeof data.refresh_token === 'undefined')\n\t\t\tdata.refresh_token = r.row('refresh_token').default(uuid.v4());\n\n\t\t// don't overwrite an existing `created` timestamp\n\t\tdata.created = r.row('created').default(data.created);\n\n\t\t// save the model (use super.create when babel.js supports it)\n\t\treturn Model.save.call(this, conn, id, data);\n\t}\n\n\n\n\tstatic async update(conn, id, data) {\n\t\tdata = Object.assign({}, data, {last_updated: Date.now() / 1000});\n\n\t\t// validate data\n\t\tvar err = validate('grant', data, {checkRequired: false});\n\t\tif (err) throw new errors.ValidationError('A valid grant must be supplied.', err.validation);\n\n\t\t// update the model (use super.update when babel.js supports it)\n\t\treturn Model.update.call(this, conn, id, data);\n\t}\n\n\n\n\tstatic async getWithNonce(conn, id, nonce) {\n\n\t\t// get a grant by its ID and a nonce value, and remove the nonce\n\t\tvar result = await r.table(this.table).get(id).update(\n\t\t\trow => r.branch(row('nonce').eq(nonce), row.merge({nonce: null}), row),\n\t\t\t{returnChanges: 'always'}\n\t\t).run(conn);\n\n\t\tif(result.errors > 0)\n\t\t\tthrow this.parseRethinkError(result.first_error);\n\n\t\tif(!result.replaced)\n\t\t\tthrow new errors.NotFoundError('The requested grant does not exist, or the authorization code has already been used.');\n\n\t\treturn new this(conn, result.changes[0].new_val);\n\t}\n\n\n\n\tasync user(refresh) {\n\n\t\t// query the database for users\n\t\tif (!this[USER] || refresh)\n\t\t\tthis[USER] = await User.get(this[Model.Symbols.CONN], this.user_id);\n\n\t\treturn this[USER];\n\t}\n\n\n\n\tasync client(refresh) {\n\n\t\t// query the database for users\n\t\tif (!this[CLIENT] || refresh)\n\t\t\tthis[CLIENT] = await Client.get(this[Model.Symbols.CONN], this.client_id);\n\n\t\treturn this[CLIENT];\n\t}\n\n\n\tget user_id() {\n\t\treturn this.id[0];\n\t}\n\n\n\tget client_id() {\n\t\treturn this.id[1];\n\t}\n\n\n}\n","import r from 'rethinkdb';\nimport Model from '../Model';\nimport User from './User';\nimport validate from '../util/validator';\nimport * as scopes from '../util/scopes';\nimport * as errors from '../errors';\n\nconst USERS = Symbol('users');\n\nexport default class Role extends Model {\n\n\tstatic get table() {\n\t\treturn 'roles';\n\t}\n\n\n\n\tstatic async create(conn, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({}, data, {created: now, last_updated: now});\n\n\t\t// validate data\n\t\tvar err = validate('role', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid role must be supplied.', err.validation);\n\n\t\t// update the model (use super.create when babel.js supports it)\n\t\treturn Model.create.call(this, conn, data);\n\t}\n\n\n\n\tstatic async save(conn, id, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({id: id}, data, {created: now, last_updated: now});\n\n\t\t// validate data\n\t\tvar err = validate('role', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid role must be supplied.', err.validation);\n\t\tif (data.id !== id) throw new Error('The supplied `id` did not match the `id` in the data.');\n\n\t\t// don't overwrite an existing `created` timestamp\n\t\tdata.created = r.row('created').default(data.created);\n\n\t\t// save the model (use super.create when babel.js supports it)\n\t\treturn Model.save.call(this, conn, id, data);\n\t}\n\n\n\n\tstatic async update(conn, id, data) {\n\t\tdata = Object.assign({}, data, {last_updated: Date.now() / 1000});\n\n\t\t// validate data\n\t\tvar err = validate('role', data, {checkRequired: false});\n\t\tif (err) throw new errors.ValidationError('A valid role must be supplied.', err.validation);\n\n\t\t// update the model (use super.update when babel.js supports it)\n\t\treturn Model.update.call(this, conn, id, data);\n\t}\n\n\n\n\tasync users(refresh) {\n\n\t\t// query the database for users\n\t\tif (!this[USERS] || refresh) {\n\t\t\tlet assignments = Object.keys(this.assignments).filter(k => this.assignments[k]);\n\t\t\tthis[USERS] = await User.query(this[Model.Symbols.CONN], q => q.getAll(r.args(assignments)));\n\t\t}\n\n\t\treturn this[USERS];\n\t}\n\n\n\n\tcan(scope, strict) {\n\t\treturn scopes.can(this.scopes, scope, strict);\n\t}\n\n}\n","import r from 'rethinkdb';\nimport Model from '../Model';\nimport validate from '../util/validator';\nimport * as errors from '../errors';\n\nexport default class Team extends Model {\n\n\tstatic get table() {\n\t\treturn 'teams';\n\t}\n\n\n\n\tstatic async create(conn, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({}, data, {created: now, last_updated: now});\n\n\t\t// validate data\n\t\tvar err = validate('team', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid team must be supplied.', err.validation);\n\n\t\t// update the model (use super.create when babel.js supports it)\n\t\treturn Model.create.call(this, conn, data);\n\t}\n\n\n\n\tstatic async save(conn, id, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({id: id}, data, {created: now, last_updated: now});\n\n\t\t// validate data\n\t\tvar err = validate('team', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid team must be supplied.', err.validation);\n\t\tif (data.id !== id) throw new Error('The supplied `id` did not match the `id` in the data.');\n\n\t\t// don't overwrite an existing `created` timestamp\n\t\tdata.created = r.row('created').default(data.created);\n\n\t\t// save the model (use super.create when babel.js supports it)\n\t\treturn Model.save.call(this, conn, id, data);\n\t}\n\n\n\n\tstatic async update(conn, id, data) {\n\t\tdata = Object.assign({}, data, {last_updated: Date.now() / 1000});\n\n\t\t// validate data\n\t\tvar err = validate('team', data, {checkRequired: false});\n\t\tif (err) throw new errors.ValidationError('A valid team must be supplied.', err.validation);\n\n\t\t// update the model (use super.update when babel.js supports it)\n\t\treturn Model.update.call(this, conn, id, data);\n\t}\n\n}\n","import r from 'rethinkdb';\nimport Model  from '../Model';\nimport Role from './Role';\nimport Grant from './Grant';\nimport Credential from './Credential';\nimport Team from './Team';\nimport validate from '../util/validator';\nimport * as errors from '../errors';\nimport uuid from 'uuid';\n\nconst ROLES = Symbol('roles');\nconst GRANTS = Symbol('grants');\nconst CREDENTIALS = Symbol('credentials');\nconst SCOPES = Symbol('scopes');\nconst TEAM = Symbol('team');\n\nexport default class User extends Model {\n\n\tstatic get table() {\n\t\treturn 'users';\n\t}\n\n\n\n\tstatic async create(conn, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({id: uuid.v4(), profile: {}}, data, {created: now, last_updated: now});\n\t\tdata.profile = data.profile ? Object.assign({}, data.profile) : null;\n\n\t\t// normalize ID\n\t\tif (!data.profile || typeof data.profile.id === 'undefined')\n\t\t\tdata.profile.id = data.id;\n\n\t\t// validate data\n\t\tvar err = validate('user', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid user must be supplied.', err.validation);\n\t\tif (data.profile.id !== data.id) throw new errors.ValidationError('If a profile ID is present, it must match the `id`.');\n\n\t\t// insert the model (use super.create when babel.js supports it)\n\t\treturn Model.create.call(this, conn, data);\n\t}\n\n\n\n\tstatic async save(conn, id, data) {\n\t\tvar now = Date.now() / 1000;\n\t\tdata = Object.assign({id: id, profile: {}}, data, {created: now, last_updated: now});\n\t\tdata.profile = data.profile ? Object.assign({}, data.profile) : null;\n\n\t\t// normalize ID\n\t\tif (!data.profile || typeof data.profile.id === 'undefined')\n\t\t\tdata.profile.id = data.id;\n\n\t\t// validate data\n\t\tvar err = validate('user', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('A valid user must be supplied.', err.validation);\n\t\tif (data.profile.id !== data.id) throw new errors.ValidationError('If a profile ID is present, it must match the `id`.');\n\t\tif (data.id !== id) throw new Error('The supplied `id` did not match the `id` in the data.');\n\n\t\t// don't overwrite an existing `created` timestamp\n\t\tdata.created = r.row('created').default(data.created);\n\n\t\t// save the model (use super.create when babel.js supports it)\n\t\treturn Model.save.call(this, conn, id, data);\n\t}\n\n\n\n\tstatic async update(conn, id, data) {\n\t\tdata = Object.assign({}, data, {last_updated: Date.now() / 1000});\n\n\t\t// validate data\n\t\tvar err = validate('user', data, {checkRequired: false});\n\t\tif (err) throw new errors.ValidationError('A valid user must be supplied.', err.validation);\n\n\t\t// update the model (use super.update when babel.js supports it)\n\t\treturn Model.update.call(this, conn, id, data);\n\t}\n\n\n\n\tstatic async delete(conn, id) {\n\n\t\t// first delete all credentials\n\t\tvar credentials = await Credential.query(conn, q => q\n\t\t\t.getAll(id, {index: 'user_id'})\n\t\t\t.delete({returnChanges: 'always'})\n\t\t\t.do(results => r.branch(\n\t\t\t\tresults('deleted').gt(0),\n\t\t\t\tresults('changes').map(d => d('old_val')),\n\t\t\t\t[]\n\t\t\t))\n\t\t);\n\n\t\t// delete the model (use super.update when babel.js supports it)\n\t\tvar user = await Model.delete.call(this, conn, id);\n\n\t\t// attach the deleted credentials\n\t\tuser[CREDENTIALS] = credentials;\n\n\t\treturn user;\n\t}\n\n\n\n\tasync credentials(refresh) {\n\n\t\t// query the database for credentials\n\t\tif (!this[CREDENTIALS] || refresh)\n\t\t\tthis[CREDENTIALS] = await Credential.query(this[Model.Symbols.CONN], q => q.getAll(this.id, {index: 'user_id'}));\n\n\t\treturn this[CREDENTIALS];\n\t}\n\n\n\n\tasync roles(refresh) {\n\n\t\t// query the database for roles\n\t\tif (!this[ROLES] || refresh)\n\t\t\tthis[ROLES] = await Role.query(this[Model.Symbols.CONN], q => q.getAll(this.id, {index: 'assignments'}));\n\n\t\treturn this[ROLES];\n\t}\n\n\n\n\tasync grants(refresh) {\n\n\t\t// query the database for roles\n\t\tif (!this[GRANTS] || refresh)\n\t\t\tthis[GRANTS] = await Grant.query(this[Model.Symbols.CONN], q => q.getAll(this.id, {index: 'user_id'}));\n\n\t\treturn this[GRANTS];\n\t}\n\n\n\n\tasync team(refresh) {\n\n\t\t// query the database for team\n\t\tif (!this[TEAM] || refresh)\n\t\t\tthis[TEAM] = this.team_id ? await Team.get(this[Model.Symbols.CONN], this.team_id) : null;\n\n\t\treturn this[TEAM];\n\t}\n\n\n\n\tasync scopes(refresh) {\n\t\tif (!this[SCOPES] || refresh) {\n\t\t\tlet roles = await this.roles();\n\t\t\tlet scopes = roles.map(role => role.scopes);\n\n\t\t\tthis[SCOPES] = scopes.length\n\t\t\t\t? scopes.reduce((a, b) => a.concat(b))\n\t\t\t\t: scopes;\n\t\t}\n\n\t\treturn this[SCOPES];\n\t}\n\n\n\n\tasync can(scope, strict) {\n\t\tvar roles = await this.roles();\n\t\treturn roles.some(role => role.can(scope, strict));\n\t}\n\n\n}\n","import jjv from 'jjv';\nimport jwt from 'jsonwebtoken';\nimport Handlebars from 'handlebars';\nimport json from '../util/json';\nimport form from '../util/form';\nimport * as errors from '../errors';\n\nimport Strategy from '../Strategy';\nimport Credential from '../models/Credential';\nimport User from '../models/User';\n\nvar env = jjv();\n\nenv.addSchema({\n\tid: 'authority',\n\ttype: 'object',\n\tproperties: {\n\t\texpiresIn: {\n\t\t\ttype: 'number',\n\t\t\tdefault: 900\n\t\t},\n\t\tsubject: {\n\t\t\ttype: ['null', 'string'],\n\t\t\ttitle: 'Email Subject',\n\t\t\tdescription: 'Handlebars template used to generate the email subject. Provided `token`, `credential`, and `url`.'\n\t\t},\n\t\ttext: {\n\t\t\ttype: ['null', 'string'],\n\t\t\ttitle: 'Email Plain Text Body',\n\t\t\tdescription: 'Handlebars template used to generate the email plain text body. Provided `token`, `credential`, and `url`.'\n\t\t},\n\t\thtml: {\n\t\t\ttype: ['null', 'string'],\n\t\t\ttitle: 'Email HTML Body',\n\t\t\tdescription: 'Handlebars template used to generate the email HTML body. Provided `token`, `credential`, and `url`.'\n\t\t}\n\t}\n});\n\nenv.addSchema({\n\tid: 'credential',\n\ttype: 'object',\n\tproperties: {}\n});\n\nexport default class EmailStrategy extends Strategy {\n\n\tasync authenticate(ctx) {\n\t\tctx.redirect_to = ctx.query.url;\n\t\tvar request = ctx.query;\n\n\n\t\t// HTTP POST (json)\n\t\tif (ctx.method === 'POST' && ctx.is('application/json'))\n\t\t\trequest = await json(ctx.req);\n\n\n\t\t// HTTP POST (form)\n\t\telse if (ctx.method === 'POST' && ctx.is('application/x-www-form-urlencoded'))\n\t\t\trequest = await form(ctx.req);\n\n\n\n\t\t// check for token in the request; if we find one then the user has already received an email\n\t\t// and has clicked the link containing the token\n\t\tif (request.token) {\n\t\t\tlet token;\n\n\t\t\tctx.app.config.session_token.public.some(pub => {\n\t\t\t\ttry {\n\t\t\t\t\treturn token = jwt.verify(request.token, pub.key, {\n\t\t\t\t\t\talgorithms: [pub.algorithm],\n\t\t\t\t\t\taudience: ctx.app.config.realm + ':session.' + this.authority.id,\n\t\t\t\t\t\tissuer: ctx.app.config.realm + ':session.' + this.authority.id\n\t\t\t\t\t});\n\t\t\t\t} catch (err) { return; }\n\t\t\t});\n\n\n\t\t\tif (!token)\n\t\t\t\tthrow new errors.AuthenticationError('The supplied token is invalid or expired.');\n\n\n\t\t\t// get the credential\n\t\t\tvar credential = await Credential.get(this.conn, token.sub);\n\n\n\t\t\tif(new Date(credential.last_used) > new Date(token.iat))\n\t\t\t\tthrow new errors.AuthenticationError('This credential has been used since the token was issued.');\n\n\n\t\t\tvar [user] = await Promise.all([\n\n\t\t\t\t// get the user\n\t\t\t\tUser.get(this.conn, credential.user_id),\n\n\t\t\t\t// update the credential's last_used timestamp\n\t\t\t\tcredential.update({ last_used: Date.now() / 1000 })\n\t\t\t]);\n\n\t\t\t// return the user\n\t\t\treturn user;\n\t\t}\n\n\n\t\t// check for an email address in the request; if we find one then we need to generate a token\n\t\t// and send the user a link by email\n\t\telse if (request.email) {\n\t\t\tlet credential = await Credential.get(this.conn, [this.authority.id, request.email]);\n\n\n\t\t\t// generate token from user\n\t\t\tlet token = jwt.sign({}, ctx.app.config.session_token.private_key, {\n\t\t\t\talgorithm: ctx.app.config.session_token.algorithm,\n\t\t\t\texpiresIn: this.authority.expiresIn,\n\t\t\t\taudience: ctx.app.config.realm + ':session.' + this.authority.id,\n\t\t\t\tsubject: credential.id,\n\t\t\t\tissuer: ctx.app.config.realm + ':session.' + this.authority.id\n\t\t\t});\n\n\t\t\tlet templateContext = {\n\t\t\t\ttoken: token,\n\t\t\t\tcredential: credential,\n\t\t\t\turl: ctx.request.href + (ctx.request.href.includes('?') ? '&' : '?') + 'token=' + token\n\t\t\t};\n\n\n\t\t\t// send the token in an email\n\t\t\tawait ctx.app.mail({\n\t\t\t\tto: request.email,\n\t\t\t\tsubject: Handlebars.compile(this.authority.details.subject || 'Authenticate by email')(templateContext),\n\t\t\t\ttext: Handlebars.compile(this.authority.details.text || 'Please authenticate at the following URL: {{{url}}}')(templateContext),\n\t\t\t\thtml: Handlebars.compile(this.authority.details.html || 'Please click <a href=\"{{url}}\">here</a> to authenticate.')(templateContext)\n\t\t\t});\n\n\t\t\tctx.status = 202;\n\t\t\tctx.body = {message: 'Token sent to \"' + request.email + '\".'};\n\n\t\t}\n\n\n\t\t// this isn't a valid request\n\t\telse\n\t\t\tthrow new errors.ValidationError('You must send an email address or token.');\n\n\t}\n\n\n\n\t// Authority Methods\n\t// -----------------\n\n\tstatic async createAuthority(conn, data) {\n\n\t\t// validate data\n\t\tvar err = env.validate('authority', data, {useDefault: true});\n\t\tif(err) throw new errors.ValidationError('The authority details were invalid.', err.validation);\n\n\t\treturn Strategy.createAuthority.call(this, conn, data);\n\t}\n\n\n\n\tstatic async updateAuthority(authority, delta) {\n\n\t\t// validate data\n\t\tvar err = env.validate('authority', delta, {useDefault: true});\n\t\tif(err) throw new errors.ValidationError('The authority details were invalid.', err.validation);\n\n\t\treturn Strategy.updateAuthority.call(this, authority, delta);\n\t}\n\n\n\n\t// Credential Methods\n\t// ------------------\n\n\tasync createCredential(data) {\n\n\t\t// validate data\n\t\tvar err = env.validate('credential', data, {useDefault: true});\n\t\tif(err) throw new errors.ValidationError('The credential details were invalid.', err.validation);\n\n\t\treturn Strategy.prototype.createCredential.call(this, data);\n\t}\n\n\n\n\tasync updateCredential(credential, delta) {\n\n\t\t// validate data\n\t\tvar err = env.validate('credential', delta, {useDefault: true});\n\t\tif(err) throw new errors.ValidationError('The credential details were invalid.', err.validation);\n\n\t\treturn Strategy.prototype.updateCredential.call(this, credential, delta);\n\t}\n\n}\n","import qs from 'querystring';\nimport jjv from 'jjv';\nimport jwt from 'jsonwebtoken';\nimport crypto from 'crypto';\nimport request from 'request-promise';\nimport * as errors from '../errors';\nimport profileSchema from '../../schema/profile';\n\nimport Strategy from '../Strategy';\nimport Credential from '../models/Credential';\nimport Role from '../models/Role';\nimport User from '../models/User';\n\nvar env = jjv();\n\nenv.addSchema({\n\tid: 'authority',\n\ttype: 'object',\n\tproperties: {\n\t\tclient_id: {\n\t\t\ttype: 'string',\n\t\t\ttitle: 'Client ID'\n\t\t},\n\t\tclient_secret: {\n\t\t\ttype: 'string',\n\t\t\ttitle: 'Client Secret'\n\t\t},\n\t\temail_authority_id: {\n\t\t\ttype: ['null', 'string'],\n\t\t\ttitle: 'Email Authority ID',\n\t\t\tdescription: 'The ID of an email authority with which verified email addresses can be registered.',\n\t\t\tdefault: null\n\t\t},\n\t\temail_domains: {\n\t\t\ttype: ['null', 'array'],\n\t\t\ttitle: 'Email Domains',\n\t\t\tdescription: 'Restrict creation of new users to these domain names. If null, all domains are allowed.',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tdefault: null\n\t\t},\n\t\trole_ids: {\n\t\t\ttype: 'array',\n\t\t\ttitle: 'Role IDs',\n\t\t\tdescription: 'The IDs of AuthX roles to assign any users verified by this authority.',\n\t\t\tdefault: []\n\t\t}\n\t},\n\trequired: [\n\t\t'client_id',\n\t\t'client_secret'\n\t]\n});\n\nenv.addSchema({\n\tid: 'credential',\n\ttype: 'object',\n\tproperties: {}\n});\n\nenv.addSchema(profileSchema);\n\nfunction without(o, key) {\n\to = Object.assign({}, o);\n\tdelete o[key];\n\treturn o;\n}\n\n\nexport default class OAuth2Strategy extends Strategy {\n\n\tasync authenticate(ctx) {\n\n\n\n\t\t// Complete Authorization Request\n\t\t// ------------------------------\n\n\n\t\tif (ctx.query.code) {\n\n\t\t\t// retrieve the url from the cookie\n\t\t\tctx.redirect_to = ctx.cookies.get('AuthX/session/' + this.authority.id + '/url');\n\t\t\tctx.cookies.set('AuthX/session/' + this.authority.id + '/url');\n\n\t\t\t// retreive the state from the cookie\n\t\t\tlet state = ctx.cookies.get('AuthX/session/' + this.authority.id + '/state');\n\t\t\tif (ctx.query.state !== state)\n\t\t\t\tthrow new errors.ValidationError('Mismatched state parameter.');\n\n\n\t\t\t// get an oauth access token & details\n\t\t\tlet response = JSON.parse(await request({\n\t\t\t\tmethod: 'POST',\n\t\t\t\turi: 'https://www.googleapis.com/oauth2/v3/token',\n\t\t\t\tform: {\n\t\t\t\t\tclient_id: this.authority.details.client_id,\n\t\t\t\t\tclient_secret: this.authority.details.client_secret,\n\t\t\t\t\tredirect_uri: ctx.request.protocol + '://' + ctx.request.host + ctx.request.path,\n\t\t\t\t\tgrant_type: 'authorization_code',\n\t\t\t\t\tcode: ctx.query.code,\n\t\t\t\t\tstate: state\n\t\t\t\t}\n\t\t\t}));\n\n\n\t\t\t// get the user's profile from the Google+ API\n\t\t\tlet profile = JSON.parse(await request({\n\t\t\t\tmethod: 'GET',\n\t\t\t\turi: 'https://www.googleapis.com/plus/v1/people/me',\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': 'Bearer ' + response.access_token\n\t\t\t\t}\n\t\t\t}));\n\n\n\n\t\t\t// normalize the profile with our schema\n\t\t\tif(profile.url && !profile.urls)\n\t\t\t\tprofile.urls = [{value: profile.url}];\n\n\t\t\tif(profile.image && profile.image.url && !profile.photos)\n\t\t\t\tprofile.photos = [{value: profile.image.url}];\n\n\t\t\tvar err = env.validate('profile', profile, {removeAdditional: true});\n\t\t\tif (err) throw new errors.ValidationError('The credential details were invalid.', err.validation);\n\n\n\n\t\t\t// TODO: right now we aren't verifying any of the JWT's assertions! We need to get Google's public\n\t\t\t// keys from https://www.googleapis.com/oauth2/v1/certs (because they change every day or so) and\n\t\t\t// use them to check the JWT's signature. What we're doing here isn't exactly best practice, but the\n\t\t\t// verification step isn't necessary because we just received the token directly (and securely) from\n\t\t\t// Google.\n\n\t\t\t// decode the JWT\n\t\t\tlet details = jwt.decode(response.id_token);\n\n\n\n\t\t\tlet credential, user;\n\n\n\t\t\t// look for an existing credential by ID\n\t\t\ttry {\n\t\t\t\tcredential = await Credential.update(this.conn, [this.authority.id, details.sub], {\n\t\t\t\t\tdetails: details,\n\t\t\t\t\tprofile: profile\n\t\t\t\t});\n\t\t\t\tuser = await User.get(this.conn, credential.user_id);\n\t\t\t} catch (err) { if (!(err instanceof errors.NotFoundError)) throw err; }\n\n\n\n\t\t\t// lookup customer by verified email\n\t\t\tif (!credential\n\t\t\t\t&& this.authority.details.email_authority_id\n\t\t\t\t&& details.email\n\t\t\t\t&& details.email_verified\n\t\t\t) try {\n\t\t\t\tlet email_credential = await Credential.get(this.conn, [this.authority.details.email_authority_id, details.email]);\n\t\t\t\tuser = await User.get(this.conn, email_credential.user_id);\n\n\t\t\t\t// create a new credential\n\t\t\t\tcredential = await Credential.create(this.conn, {\n\t\t\t\t\tid: [this.authority.id, details.sub],\n\t\t\t\t\tuser_id: email_credential.user_id,\n\t\t\t\t\tdetails: details,\n\t\t\t\t\tprofile: profile\n\t\t\t\t});\n\n\t\t\t\t// assign the user to all configured roles\n\t\t\t\tlet assignments = {}; assignments[user.id] = true;\n\t\t\t\tawait Promise.all(this.authority.details.role_ids.map(id => Role.update(this.conn, id, {\n\t\t\t\t\tassignments: assignments\n\t\t\t\t})));\n\n\t\t\t} catch (err) { if (!(err instanceof errors.NotFoundError)) throw err; }\n\n\n\n\t\t\t// create a brand-new user\n\t\t\tif (!credential) {\n\n\t\t\t\t// check that the email domain is whitelisted\n\t\t\t\tif (Array.isArray(this.authority.details.email_domains)) {\n\t\t\t\t\tlet parts = details.email.split('@');\n\t\t\t\t\tif(this.authority.details.email_domains.indexOf(parts[parts.length - 1]) === -1)\n\t\t\t\t\t\tthrow new errors.AuthenticationError('The email domain \"' + parts[parts.length - 1] + '\" is not allowed.');\n\t\t\t\t}\n\n\t\t\t\t// create a new user account\n\t\t\t\tuser = await User.create(this.conn, {\n\t\t\t\t\ttype: 'human',\n\t\t\t\t\tprofile: without(profile, 'id')\n\t\t\t\t});\n\n\t\t\t\t// create a new credential\n\t\t\t\tcredential = await Credential.create(this.conn, {\n\t\t\t\t\tid: [this.authority.id, details.sub],\n\t\t\t\t\tuser_id: user.id,\n\t\t\t\t\tdetails: details,\n\t\t\t\t\tprofile: profile\n\t\t\t\t});\n\n\t\t\t\t// create a new email credential\n\t\t\t\tif (this.authority.details.email_authority_id) {\n\t\t\t\t\tawait Credential.create(this.conn, {\n\t\t\t\t\t\tid: [this.authority.details.email_authority_id, details.email],\n\t\t\t\t\t\tuser_id: user.id,\n\t\t\t\t\t\tprofile: null\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// assign the user to all configured roles\n\t\t\t\tlet assignments = {}; assignments[user.id] = true;\n\t\t\t\tawait Promise.all(this.authority.details.role_ids.map(id => Role.update(this.conn, id, {\n\t\t\t\t\tassignments: assignments\n\t\t\t\t})));\n\t\t\t}\n\n\n\t\t\treturn user;\n\t\t}\n\n\n\n\t\t// New Authorization Request\n\t\t// -------------------------\n\n\t\telse {\n\n\t\t\t// store the url in a cookie\n\t\t\tctx.cookies.set('AuthX/session/' + this.authority.id + '/url', ctx.query.url);\n\n\t\t\t// store the state in a cookie\n\t\t\tlet state = crypto.randomBytes(32).toString('base64');\n\t\t\tctx.cookies.set('AuthX/session/' + this.authority.id + '/state', state);\n\n\t\t\t// redirect the user to the authorization provider\n\t\t\tctx.redirect('https://accounts.google.com/o/oauth2/auth?' + qs.stringify({\n\t\t\t\tclient_id: this.authority.details.client_id,\n\t\t\t\tredirect_uri: ctx.request.protocol + '://' + ctx.request.host + ctx.request.path,\n\t\t\t\tresponse_type: 'code',\n\t\t\t\tscope: 'https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile',\n\t\t\t\tstate: state\n\t\t\t}));\n\n\t\t}\n\n\t}\n\n\n\n\t// Authority Methods\n\t// -----------------\n\n\tstatic async createAuthority(conn, data) {\n\n\t\t// validate data\n\t\tvar err = env.validate('authority', data, {useDefault: true});\n\t\tif(err) throw new errors.ValidationError('The authority details were invalid.', err.validation);\n\n\t\treturn Strategy.createCredential.call(this, conn, data);\n\t}\n\n\n\n\tstatic async updateAuthority(authority, delta) {\n\n\t\t// validate data\n\t\tvar err = env.validate('authority', delta, {useDefault: true});\n\t\tif(err) throw new errors.ValidationError('The authority details were invalid.', err.validation);\n\n\t\treturn Strategy.updateCredential.call(this, authority, delta);\n\t}\n\n\n\n\t// Credential Methods\n\t// ------------------\n\n\tasync createCredential(data) {\n\n\t\t// validate data\n\t\tvar err = env.validate('credential', data, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('The credential details were invalid.', err.validation);\n\n\t\treturn Strategy.prototype.createCredential.call(this, data);\n\t}\n\n\n\n\tasync updateCredential(credential, delta) {\n\n\t\t// validate data\n\t\tvar err = env.validate('credential', delta, {useDefault: true});\n\t\tif (err) throw new errors.ValidationError('The credential details were invalid.', err.validation);\n\n\t\treturn Strategy.prototype.updateCredential.call(this, credential, delta);\n\t}\n\n}\n","import jjv from 'jjv';\nimport auth from 'basic-auth';\nimport json from '../util/json';\nimport form from '../util/form';\nimport {compare} from '../util/bcrypt';\nimport * as errors from '../errors';\n\nimport Strategy from '../Strategy';\nimport Credential from '../models/Credential';\nimport User from '../models/User';\n\nvar env = jjv();\n\nenv.addSchema({\n\tid: 'authority',\n\ttype: 'object',\n\tproperties: {\n\t\trounds: {\n\t\t\ttype: 'number',\n\t\t\ttitle: 'BCrypt Rounds',\n\t\t\tdescription: 'BCrypt encryption rounds for new passwords; old passwords will continue to use their original number of rounds.',\n\t\t\tdefault: 4\n\t\t}\n\t}\n});\n\nenv.addSchema({\n\tid: 'credential',\n\ttype: 'object',\n\tproperties: {\n\t\tpassword: {\n\t\t\ttype: 'string',\n\t\t\ttitle: 'Password',\n\t\t\tdescription: 'The user\\'s password, sent as plain text; stored as a bcrypt hash.'\n\t\t}\n\t}\n});\n\nexport default class PasswordStrategy extends Strategy {\n\n\tasync authenticate(ctx) {\n\t\tctx.redirect_to = ctx.query.url;\n\t\tvar request;\n\n\n\t\t// HTTP POST (json)\n\t\tif (ctx.method === 'POST' && ctx.is('application/json'))\n\t\t\trequest = await json(ctx.req);\n\n\n\t\t// HTTP POST (form)\n\t\telse if (ctx.method === 'POST' && ctx.is('application/x-www-form-urlencoded'))\n\t\t\trequest = await form(ctx.req);\n\n\n\t\t// HTTP Basic Authentication\n\t\telse {\n\t\t\tlet basic = auth(ctx.req);\n\t\t\tif(basic) try {\n\t\t\t\trequest = {\n\t\t\t\t\tusername: JSON.parse(basic.name),\n\t\t\t\t\tpassword: basic.pass\n\t\t\t\t};\n\t\t\t} catch (err) {\n\t\t\t\tctx.throw(400, 'The HTTP basic `username` must be a JSON-encoded array in the format: [\"authority\",\"authority_user_id\"].');\n\t\t\t}\n\t\t}\n\n\n\t\t// send authenticate headers\n\t\tif (!request) {\n\t\t\tctx.set('WWW-Authenticate', 'Basic realm=\"' + ctx.app.config.realm + '\"');\n\t\t\tctx.throw(401, 'HTTP Basic credentials are required.');\n\t\t}\n\n\n\t\t// validate the credential_id\n\t\tvar credential_id = request.username;\n\t\tif (\n\t\t\t!Array.isArray(credential_id) ||\n\t\t\tcredential_id.length !== 2 ||\n\t\t\t!credential_id.every(s => typeof s === 'string')\n\t\t) ctx.throw(400, 'The `username` must be an array in the format: [\"authority\",\"authority_user_id\"].');\n\n\n\t\t// validate the password\n\t\tvar password = request.password;\n\t\tif (!password)\n\t\t\tctx.throw(400, 'The HTTP basic `password` must be specified.');\n\n\n\t\t// get the user ID\n\t\tvar user_id = (credential_id[0] === this.authority.id) ?\n\t\t\tcredential_id[1]\n\t\t\t: (await Credential.get(this.conn, credential_id)).user_id;\n\n\n\t\t// get the user's password credential\n\t\tvar credential = await Credential.get(this.conn, [this.authority.id, user_id]);\n\n\n\t\t// validate password\n\t\tif (!await compare(password, credential.details.hash)) {\n\t\t\tctx.set('WWW-Authenticate', 'Basic realm=\"authx\"');\n\t\t\tctx.throw(401, 'Incorrect password.');\n\t\t}\n\n\n\t\tvar [user] = await Promise.all([\n\n\t\t\t// get the user\n\t\t\tUser.get(this.conn, user_id),\n\n\t\t\t// update the credential's last_used timestamp\n\t\t\tcredential.update({ last_used: Date.now() / 1000 })\n\t\t]);\n\n\n\t\t// return the user\n\t\treturn user;\n\t}\n\n\n\n\t// Authority Methods\n\t// -----------------\n\n\tstatic async createAuthority(conn, data) {\n\n\t\t// validate data\n\t\tvar err = env.validate('authority', data, {useDefault: true});\n\t\tif(err) throw new errors.ValidationError('The authority details were invalid.', err.validation);\n\n\t\treturn Strategy.createCredential.call(this, conn, data);\n\t}\n\n\n\n\tstatic async updateAuthority(authority, delta) {\n\n\t\t// validate data\n\t\tvar err = env.validate('authority', delta, {useDefault: true});\n\t\tif(err) throw new errors.ValidationError('The authority details were invalid.', err.validation);\n\n\t\treturn Strategy.updateCredential.call(this, authority, delta);\n\t}\n\n\n\n\t// Credential Methods\n\t// ------------------\n\n\tasync createCredential(data) {\n\n\t\t// validate data\n\t\tvar err = env.validate('credential', data, {useDefault: true});\n\t\tif(err) throw new errors.ValidationError('The credential details were invalid.', err.validation);\n\n\t\treturn Strategy.prototype.createCredential.call(this, data);\n\t}\n\n\n\n\tasync updateCredential(credential, delta) {\n\n\t\t// validate data\n\t\tvar err = env.validate('credential', delta, {useDefault: true});\n\t\tif(err) throw new errors.ValidationError('The credential details were invalid.', err.validation);\n\n\t\treturn Strategy.prototype.updateCredential.call(this, credential, delta);\n\t}\n\n}\n","import bcrypt from 'bcrypt';\n\nexport var genSalt = async (a) => {\n\treturn new Promise((resolve, reject) => {\n\t\treturn bcrypt.genSalt(a, (err, res) => {\n\t\t\tif(err) return reject(err);\n\t\t\treturn resolve(res);\n\t\t});\n\t});\n};\n\nexport var hash = async (a, b) => {\n\treturn new Promise((resolve, reject) => {\n\t\treturn bcrypt.hash(a, b, (err, res) => {\n\t\t\tif(err) return reject(err);\n\t\t\treturn resolve(res);\n\t\t});\n\t});\n};\n\nexport var compare = async (a, b) => {\n\treturn new Promise((resolve, reject) => {\n\t\treturn bcrypt.compare(a, b, (err, res) => {\n\t\t\tif(err) return reject(err);\n\t\t\treturn resolve(res);\n\t\t});\n\t});\n};\n","import qs from 'querystring';\nimport parse from 'raw-body';\nimport * as errors from '../errors';\n\nexport default async function form(req) {\n\ttry {\n\t\tvar data = await parse(req, { encoding: 'utf8' });\n\t\treturn qs.parse(data);\n\t} catch (e) {\n\t\tthrow new errors.ValidationError('The request body was invalid form data.');\n\t}\n}\n","import parse from 'raw-body';\nimport * as errors from '../errors';\n\nexport default async function json(req) {\n\ttry {\n\t\tvar data = await parse(req, { encoding: 'utf8' });\n\t\treturn JSON.parse(data);\n\t} catch (e) {\n\t\tthrow new errors.ValidationError('The request body was invalid JSON.');\n\t}\n}\n","import nodemailer from 'nodemailer';\n\nexport default function mailer(config) {\n\n\t// stub out a transporter if none is specified\n\tvar transport = config.transport ?\n\t\tnodemailer.createTransport(config.transport)\n\t\t: { sendMail: (message, cb) => {\n\t\t\tconsole.warn('Email transport is not set up; message not sent:', message);\n\t\t\tcb(null, message);\n\t\t}};\n\n\t// wrap nodemailer in a promise\n\treturn (message) => {\n\t\treturn new Promise( (resolve, reject) => {\n\t\t\tmessage = Object.assign({}, config.defaults, message);\n\t\t\ttransport.sendMail(message, (err, res) => {\n\t\t\t\tif(err) return reject(err);\n\t\t\t\treturn resolve(res);\n\t\t\t});\n\t\t});\n\t};\n}\n","'use strict';\n\nimport gp from 'generic-pool';\nimport r from 'rethinkdb';\n\nexport default class Pool {\n\n\tconstructor (options, max, min, idleTimeoutMillis) {\n\t\tthis.pool = gp.Pool({\n\t\t\tname: 'rethinkdb',\n\t\t\tcreate: (callback) => {\n\t\t\t\treturn r.connect(options, callback);\n\t\t\t},\n\t\t\tdestroy: (connection) => {\n\t\t\t\treturn connection.close();\n\t\t\t},\n\t\t\tlog: false,\n\t\t\tmin: min || 2,\n\t\t\tmax: max || 10,\n\t\t\tidleTimeoutMillis: idleTimeoutMillis || 30000\n\t\t});\n\t}\n\n\tacquire() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treturn this.pool.acquire((err, conn) => {\n\t\t\t\tif(err) return reject(err);\n\t\t\t\tconn.release = () => {\n\t\t\t\t\treturn this.pool.release(conn);\n\t\t\t\t};\n\t\t\t\tresolve(conn);\n\t\t\t});\n\t\t});\n\t}\n\n}\n","import * as scopes from './scopes';\nimport * as errors from '../errors';\n\nexport async function can(ctx, scope, strict) {\n\n\t// bearer request on behalf of a user\n\tif (ctx.bearer) {\n\t\tif (\n\t\t\tctx.bearer.type === 'access_token'\n\t\t\t&& ctx.bearer.scopes\n\t\t\t&& ctx.bearer.scopes.some(s => scopes.can(s, scope, strict))\n\t\t) return true;\n\t}\n\n\n\t// direct user request\n\telse if (ctx.user && await ctx.user.can(scope, strict)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nexport async function protect(ctx, scope, strict) {\n\tif (await can(ctx, scope, strict)) return;\n\tthrow new errors.ForbiddenError('You lack permission for the required scope \"' + scope + '\".');\n}\n","import * as errors from '../errors';\n\nexport function parseIncludes(includable, ctx) {\n\tif (!ctx.query.include)\n\t\treturn null;\n\n\n\t// parse the query parameters\n\tvar includes;\n\ttry { includes = JSON.parse(ctx.query.include); } catch (err) {\n\t\tthrow new errors.ValidationError('The `include` query parameter was not valid json.');\n\t}\n\n\n\tif (!Array.isArray(includes))\n\t\tthrow new errors.ValidationError('The json-encoded `include` query parameter was not an array.');\n\n\n\tincludes.forEach(i => {\n\t\tif (typeof i !== 'string')\n\t\t\tthrow new errors.ValidationError('The json-encoded `include` query parameter included a non-string value in its array.');\n\n\t\tif (includable.indexOf(i) === -1)\n\t\t\tthrow new errors.ValidationError('The `include` query parameter contained the invalid value, \"' + i + '\".');\n\t});\n\n\n\treturn includes;\n}\n\nexport function parseRoles(ctx) {\n\tif (!ctx.query.role_ids)\n\t\treturn null;\n\n\n\t// parse the query parameters\n\tvar role_ids;\n\ttry { role_ids = JSON.parse(ctx.query.role_ids); } catch (err) {\n\t\tthrow new errors.ValidationError('The `role_ids` query parameter was not valid json.');\n\t}\n\n\n\tif (!Array.isArray(role_ids))\n\t\tthrow new errors.ValidationError('The json-encoded `role_ids` query parameter was not an array.');\n\n\n\trole_ids.forEach(i => {\n\t\tif (typeof i !== 'string')\n\t\t\tthrow new errors.ValidationError('The json-encoded `role_ids` query parameter included a non-string value in its array.');\n\t});\n\n\n\treturn role_ids;\n}\n","import _ from 'lodash';\nimport Route from 'path-match';\n\nvar endpointRouter = Route({\n\tsensitive: true,\n\tstrict: false,\n\tend: true\n});\n\nvar baseRouter = Route({\n\tsensitive: true,\n\tstrict: false,\n\tend: false\n});\n\nfunction makeRoute(router) {\n\treturn (path, fn) => {\n\t\tvar match = router(path);\n\t\treturn (ctx, next) => {\n\t\t\tvar params = match(ctx.request.path, ctx.params);\n\n\t\t\t// wrong path\n\t\t\tif (!params)\n\t\t\t\treturn next();\n\n\t\t\t// save the params\n\t\t\tif(ctx.params)\n\t\t\t\t_.apply(ctx.params, params);\n\t\t\telse\n\t\t\t\tctx.params = params;\n\n\t\t\t// call the function\n\t\t\treturn fn(ctx, next);\n\t\t};\n\t};\n}\n\nfunction makeMethodRoute(router, method) {\n\treturn (path, fn) => {\n\t\tvar match = router(path);\n\t\treturn (ctx, next) => {\n\n\t\t\t// wrong method\n\t\t\tif (ctx.method !== method)\n\t\t\t\treturn next();\n\n\t\t\tvar params = match(ctx.request.path, ctx.params);\n\n\t\t\t// wrong path\n\t\t\tif (!params)\n\t\t\t\treturn next();\n\n\t\t\t// save the params\n\t\t\tif(ctx.params)\n\t\t\t\t_.apply(ctx.params, params);\n\t\t\telse\n\t\t\t\tctx.params = params;\n\n\t\t\t// call the function\n\t\t\treturn fn(ctx, next);\n\t\t};\n\t};\n}\n\nexport var get   = makeMethodRoute(endpointRouter, 'GET');\nexport var put   = makeMethodRoute(endpointRouter, 'PUT');\nexport var post  = makeMethodRoute(endpointRouter, 'POST');\nexport var patch = makeMethodRoute(endpointRouter, 'PATCH');\nexport var del   = makeMethodRoute(endpointRouter, 'DELETE');\nexport var any   = makeRoute(endpointRouter);\nexport var use   = makeRoute(baseRouter);\n","function makeRegExp(scope) {\n\tvar pattern = scope\n\t\t.split(':')\n\t\t.map(domain => domain\n\t\t\t.split('.')\n\t\t\t.map(part => {\n\t\t\t\tif (part === '**') return '([^:]*)';\n\t\t\t\tif (part === '*') return '(\\\\*|[^\\\\.^:^*]*)';\n\t\t\t\treturn part.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n\t\t\t})\n\t\t\t.join('\\\\.')\n\t\t)\n\t\t.join(':');\n\n\treturn new RegExp('^' + pattern + '$');\n}\n\n\nexport function validate(scope) {\n\treturn /^(([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+)\\.)*([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+):(([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+)\\.)*([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+):(([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+)\\.)*([a-zA-Z0-9_\\-]+|(\\*(?!\\*\\*))+)$/.test(scope);\n}\n\n\nexport function normalize(scope) {\n\treturn scope.split(':').map((domain) => domain.split('.').map((part, i, parts) => {\n\t\tif (part !== '**' || (parts[i+1] !== '**' && parts[i+1] !== '*'))\n\t\t\treturn part;\n\t\tparts[i+1] = '**';\n\t\treturn '*';\n\t}).join('.')).join(':');\n}\n\n\n// combines scopes `a` and `b`, returning the most permissive common scope or `null`\nexport function combine(a, b) {\n\ta = normalize(a);\n\tb = normalize(b);\n\n\t// literal equal\n\tif (a == b) return a;\n\n\tvar aX = makeRegExp(a);\n\tvar bX = makeRegExp(b);\n\n\tvar a_b = aX.test(b);\n\tvar b_a = bX.test(a);\n\n\t// a supercedes b\n\tif (b_a && !a_b)  return a;\n\n\t// b supercedes a\n\tif (a_b && !b_a)  return b;\n\n\n\n\t// ...the scopes are thus mutually exclusive (because they cannot be mutually inclusive without being equal)\n\n\n\n\t// if there are no wildcard sequences, then there is no possibility of a combination\n\tif (!a.includes('*') || !b.includes('*'))\n\t\treturn null;\n\n\n\n\t// ...substitute the wildcard matches from A into the the wildcards of B\n\n\n\t// loop through each domain\n\tvar substitution = [];\n\tvar wildcardMap = [];\n\tvar pattern = '^' + a.split(':').map((domain, d) => domain.split('.').map((part, p) => {\n\t\tsubstitution[d] = substitution[d] || [];\n\t\tsubstitution[d][p] = part;\n\n\t\tif (part === '**') {\n\t\t\twildcardMap.push({w: '**', d: d, p: p});\n\t\t\treturn '([^:]*)';\n\t\t}\n\n\t\tif (part === '*') {\n\t\t\twildcardMap.push({w: '*', d: d, p: p});\n\t\t\treturn '([^\\\\.^:]*)';\n\t\t}\n\n\t\treturn '[^:^.]*';\n\t}).join('\\\\.')).join(':') + '$';\n\n\tvar matches = b.match(pattern);\n\n\n\t// substitution failed, the scopes are incompatible\n\tif (!matches)\n\t\treturn null;\n\n\n\t// make the substitutions, downgrade captured double wildcards\n\twildcardMap.forEach((map, i) => {\n\t\tsubstitution[map.d][map.p] = (map.w === '*' && matches[i + 1] === '**') ? '*' : matches[i + 1];\n\t});\n\n\n\t// the combined result\n\tvar combined = substitution.map(d => d.join('.')).join(':');\n\n\n\t// test the substitution\n\tif (bX.test(combined))\n\t\treturn combined;\n\n\n\treturn null;\n}\n\n\n// returns a de-duplified array of scope rules\nexport function simplifyCollection(collection) {\n\n\t// scopes that cannot be represented by another scope in this collection\n\tvar output = [];\n\n\t// scopes we've already determined can be represented by another scope in this collection\n\tvar skip = [];\n\tfor (let a = 0; a < collection.length; a++) {\n\t\tif (skip.indexOf(a) !== -1) continue;\n\t\tlet candidate = collection[a];\n\n\t\tfor (let b = a+1; b < collection.length; b++) {\n\t\t\tif (skip.indexOf(b) !== -1) continue;\n\t\t\tlet challenger = collection[b];\n\n\t\t\t// the challenger can be represented by the candidate\n\t\t\tif (candidate == challenger || can(candidate, challenger))\n\t\t\t\tskip.push(b);\n\n\t\t\t// the candidate can be represented by the challenger\n\t\t\telse if (can(challenger, candidate)) {\n\t\t\t\tskip.push(a);\n\t\t\t\ta = b;\n\t\t\t\tcandidate = challenger;\n\t\t\t}\n\t\t}\n\n\t\t// the winner\n\t\toutput.push(candidate);\n\t}\n\n\treturn output;\n}\n\n// calculates the product of scope rules or returns null\nexport function combineCollections(collectionA, collectionB) {\n\treturn simplifyCollection([].concat(...collectionA.map((a) =>\n\t\t[].concat(collectionB.map((b) => combine(a, b)).filter(x => x))\n\t)));\n}\n\n// according to the supplied rule, can the given subject be performed?\nexport function can(rule, subject, strict) {\n\tstrict = (strict !== false);\n\n\tif (Array.isArray(rule))\n\t\treturn rule.some(r => can(r, subject, strict));\n\n\treturn strict ? makeRegExp(rule).test(subject) : !!combine(rule, subject);\n}\n","import jjv from 'jjv';\n\nimport authority from '../../schema/authority';\nimport client from '../../schema/client';\nimport credential from '../../schema/credential';\nimport grant from '../../schema/grant';\nimport profile from '../../schema/profile';\nimport role from '../../schema/role';\nimport team from '../../schema/team';\nimport user from '../../schema/user';\n\nvar env = jjv();\n\nenv.addSchema('authority', authority);\nenv.addSchema('client', client);\nenv.addSchema('credential', credential);\nenv.addSchema('grant', grant);\nenv.addSchema('profile', profile);\nenv.addSchema('role', role);\nenv.addSchema('team', team);\nenv.addSchema('user', user);\n\nexport default env.validate.bind(env);\n"],"sourceRoot":"/source/"}